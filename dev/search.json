[{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting started with ISAnalytics","text":"ISAnalytics R package developed analyze gene therapy vector insertion sites data identified genomics next generation sequencing reads clonal tracking studies.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"installation-and-options","dir":"Articles","previous_headings":"","what":"Installation and options","title":"Getting started with ISAnalytics","text":"ISAnalytics can installed quickly different ways: can install via Bioconductor can install via GitHub using package devtools always 2 versions package active: RELEASE latest stable version DEVEL development version, --date version new features introduced","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"installation-from-bioconductor","dir":"Articles","previous_headings":"Installation and options","what":"Installation from bioconductor","title":"Getting started with ISAnalytics","text":"RELEASE version: DEVEL version:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") BiocManager::install(\"ISAnalytics\") if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  # The following initializes usage of Bioc devel BiocManager::install(version='devel')  BiocManager::install(\"ISAnalytics\")"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"installation-from-github","dir":"Articles","previous_headings":"Installation and options","what":"Installation from GitHub","title":"Getting started with ISAnalytics","text":"RELEASE: DEVEL:","code":"if (!require(devtools)) {   install.packages(\"devtools\") } devtools::install_github(\"calabrialab/ISAnalytics\",                          ref = \"RELEASE_3_17\",                          dependencies = TRUE,                          build_vignettes = TRUE) if (!require(devtools)) {   install.packages(\"devtools\") } devtools::install_github(\"calabrialab/ISAnalytics\",                          ref = \"devel\",                          dependencies = TRUE,                          build_vignettes = TRUE)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"setting-options","dir":"Articles","previous_headings":"Installation and options","what":"Setting options","title":"Getting started with ISAnalytics","text":"ISAnalytics verbose option allows functions print additional information console ’re executing. disable feature : functions also produce report user-friendly HTML format, set feature:","code":"# DISABLE options(\"ISAnalytics.verbose\" = FALSE)  # ENABLE options(\"ISAnalytics.verbose\" = TRUE) # DISABLE HTML REPORTS options(\"ISAnalytics.reports\" = FALSE)  # ENABLE HTML REPORTS options(\"ISAnalytics.reports\" = TRUE)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"setting-up-the-workflow","dir":"Articles","previous_headings":"","what":"Setting up the workflow","title":"Getting started with ISAnalytics","text":"newer version ISAnalytics, introduced “dynamic variables system”, allow flexibility terms input formats. starting analysis workflow, can specify inputs structured package can process . information take look vignette(\"workflow_start\", package = \"ISAnalytics\").","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"the-first-steps","dir":"Articles","previous_headings":"","what":"The first steps","title":"Getting started with ISAnalytics","text":"first steps analysis workflow involve import parsing data metadata files disk. Import metadata import_association_file() /import_Vispa2_stats() Import data import_single_Vispa2Matrix() import_parallel_Vispa2Matrices() Refer vignette vignette(\"workflow_start\", package = \"ISAnalytics\") details.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"data-cleaning-and-pre-processing","dir":"Articles","previous_headings":"","what":"Data cleaning and pre-processing","title":"Getting started with ISAnalytics","text":"ISAnalytics offers several different functions cleaning pre-processing data. Recalibration: identifies integration events near condenses single event whenever appropriate - compute_near_integrations() Outliers identification removal: identifies samples considered outliers according user-defined logic filters - outlier_filter() Collision removal: identifies collision events independent samples - remove_collisions(), see also dedicated vignette vignette(\"workflow_start\", package = \"ISAnalytics\") Filter based cell lineage purity: identifies removes contamination different cell types - purity_filter() Data metadata aggregation: allows union biological samples single pcr replicates arbitrary aggregations - aggregate_values_by_key(), aggregate_metadata(), see also dedicated vignette vignette(\"workflow_start\", package = \"ISAnalytics\")","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"answering-biological-questions","dir":"Articles","previous_headings":"","what":"Answering biological questions","title":"Getting started with ISAnalytics","text":"can answer different biological questions using provided functions appropriate inputs. Descriptive statistics: sample_statistics() relative abundance: compute_abundance(), integration_alluvial_plot() Top abundant : top_integrations() Top targeted genes: top_targeted_genes() Grubbs test common insertion sites (CIS): CIS_grubbs(), CIS_volcano_plot() Fisher’s exact test gene frequency distribution target genome: gene_frequency_fisher(), fisher_scatterplot(), circos_genomic_density() Clonal sharing analyses: is_sharing(), iss_source(), sharing_heatmap(), sharing_venn() Estimate HSPCs population size: HSC_population_size_estimate(), HSC_population_plot() , please refer full function reference.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"working-with-other-kinds-of-data","dir":"Articles","previous_headings":"","what":"Working with other kinds of data","title":"Getting started with ISAnalytics","text":"ISAnalytics designed flexible concerning input formats, thus suited process various kinds data provided correct dynamic configuration set. demonstrate example uses barcodes data. matrix publicly available (Ferrari Samuele Jacob Aurelien, 2020), metadata provided us authors available package additional files.","code":"library(ISAnalytics)  # Set appropriate data and metadata specs ---- metadata_specs <- tibble::tribble(     ~names, ~types, ~transform, ~flag, ~tag,     \"ProjectID\", \"char\", NULL, \"required\", \"project_id\",     \"SubjectID\", \"char\", NULL, \"required\", \"subject\",     \"Tissue\", \"char\", NULL, \"required\", \"tissue\",     \"TimePoint\", \"int\", NULL, \"required\", \"tp_days\",     \"CellMarker\", \"char\", NULL, \"required\", \"cell_marker\",     \"ID\", \"char\", NULL, \"required\", \"pcr_repl_id\",     \"SourceFileName\", \"char\", NULL, \"optional\", NA_character_,     \"Link\", \"char\", NULL, \"optional\", NA_character_ ) set_af_columns_def(metadata_specs) #> Warning: Warning: important tags missing #> ℹ Some tags are required for proper execution of some functions. If these tags are not provided, execution of dependent functions might fail. Review your inputs carefully. #> ℹ Missing tags: pool_id, fusion_id, tag_seq, vector_id, tag_id, pcr_replicate, vispa_concatenate, proj_folder #> ℹ To see where these are involved type `inspect_tags(c('pool_id','fusion_id','tag_seq','vector_id','tag_id','pcr_replicate','vispa_concatenate','proj_folder'))` #> Association file columns specs successfully changed  mandatory_specs <- tibble::tribble(     ~names, ~types, ~transform, ~flag, ~tag,     \"BarcodeSeq\", \"char\", NULL, \"required\", NA_character_ ) set_mandatory_IS_vars(mandatory_specs) #> Warning: Warning: important tags missing #> ℹ Some tags are required for proper execution of some functions. If these tags are not provided, execution of dependent functions might fail. Review your inputs carefully. #> ℹ Missing tags: chromosome, locus, is_strand #> ℹ To see where these are involved type `inspect_tags(c('chromosome','locus','is_strand'))` #> Mandatory IS vars successfully changed  # Files ---- data_folder <- tempdir() utils::unzip(zipfile = system.file(\"testdata\",                                     \"testdata.zip\",                                    package = \"ISAnalytics\"),               exdir = data_folder, overwrite = TRUE) meta_file <- \"barcodes_example_af.tsv.xz\" matrix_file <- \"GSE144340_Matrix_542.tsv.xz\"  # Data import ---- af <- import_association_file(fs::path(data_folder, meta_file),     report_path = NULL ) af #> # A tibble: 15 × 10 #>    ProjectID    SubjectID Tissue TimePoint CellMarker ID    SourceFileName Link  #>    <chr>        <chr>     <chr>      <int> <chr>      <chr> <chr>          <chr> #>  1 PMID32601433 A0        BM            21 Whole      BM_A0 GSE144340_Mat… http… #>  2 PMID32601433 A0        PB            21 Whole      PB21… GSE144340_Mat… http… #>  3 PMID32601433 A1        BM            21 Whole      BM_A1 GSE144340_Mat… http… #>  4 PMID32601433 A1        PB            21 Whole      PB21… GSE144340_Mat… http… #>  5 PMID32601433 A2        PB            21 Whole      PB21… GSE144340_Mat… http… #>  6 PMID32601433 A3        PB            21 Whole      PB21… GSE144340_Mat… http… #>  7 PMID32601433 A4        BM            21 Whole      BM_A4 GSE144340_Mat… http… #>  8 PMID32601433 A4        PB            21 Whole      PB21… GSE144340_Mat… http… #>  9 PMID32601433 C0        PB            21 Whole      PB21… GSE144340_Mat… http… #> 10 PMID32601433 C1        BM            21 Whole      BM_C1 GSE144340_Mat… http… #> 11 PMID32601433 C1        PB            21 Whole      PB21… GSE144340_Mat… http… #> 12 PMID32601433 C2        BM            21 Whole      BM_C2 GSE144340_Mat… http… #> 13 PMID32601433 C2        PB            21 Whole      PB21… GSE144340_Mat… http… #> 14 PMID32601433 C3        BM            21 Whole      BM_C3 GSE144340_Mat… http… #> 15 PMID32601433 C3        PB            21 Whole      PB21… GSE144340_Mat… http… #> # ℹ 2 more variables: TimepointMonths <chr>, TimepointYears <chr>  matrix <- import_single_Vispa2Matrix(fs::path(data_folder, matrix_file),     sample_names_to = \"ID\" ) #> Warning: compression format not supported by fread #> ℹ File will be read using readr #> Reading file... #> ℹ Mode: classic #> Reshaping... #> *** File info ***  #> • --- Annotated: FALSE #> • --- Dimensions: 31757 x 16 #> • --- Read mode: classic #> • --- Sample count: 15 matrix #> # A tibble: 33,776 × 3 #>    BarcodeSeq             ID      Value #>    <chr>                  <chr>   <dbl> #>  1 AAAAAAAACACGGAGAACGACG PB21_C3     2 #>  2 AAAAAAAACGCGAACAACTACG PB21_C3     1 #>  3 AAAAAAAACTCAAAAAAGAAAT BM_C3       1 #>  4 AAAAAAAATTTACACAAAGAAA BM_A4       1 #>  5 AAAAAAAATTTTTAAACGTACC BM_A0       1 #>  6 AAAAAACATATCTATAGTTACC BM_A0       1 #>  7 AAAAAAGACGACGATAGGCACG PB21_C1     1 #>  8 AAAAAAGACGTTTATAGGTGTA PB21_A2     1 #>  9 AAAAAAGACTGCGACAAAAGGG BM_A4       1 #> 10 AAAAAAGACTTTGATAACCACG PB21_C3     1 #> # ℹ 33,766 more rows  # Descriptive stats ---- desc_stats <- sample_statistics(matrix, af,     sample_key = pcr_id_column(),     value_columns = \"Value\" )$metadata |>     dplyr::rename(distinct_barcodes = \"nIS\") desc_stats #> # A tibble: 15 × 29 #>    ProjectID    SubjectID Tissue TimePoint CellMarker ID    SourceFileName Link  #>    <chr>        <chr>     <chr>      <int> <chr>      <chr> <chr>          <chr> #>  1 PMID32601433 A0        BM            21 Whole      BM_A0 GSE144340_Mat… http… #>  2 PMID32601433 A0        PB            21 Whole      PB21… GSE144340_Mat… http… #>  3 PMID32601433 A1        BM            21 Whole      BM_A1 GSE144340_Mat… http… #>  4 PMID32601433 A1        PB            21 Whole      PB21… GSE144340_Mat… http… #>  5 PMID32601433 A2        PB            21 Whole      PB21… GSE144340_Mat… http… #>  6 PMID32601433 A3        PB            21 Whole      PB21… GSE144340_Mat… http… #>  7 PMID32601433 A4        BM            21 Whole      BM_A4 GSE144340_Mat… http… #>  8 PMID32601433 A4        PB            21 Whole      PB21… GSE144340_Mat… http… #>  9 PMID32601433 C0        PB            21 Whole      PB21… GSE144340_Mat… http… #> 10 PMID32601433 C1        BM            21 Whole      BM_C1 GSE144340_Mat… http… #> 11 PMID32601433 C1        PB            21 Whole      PB21… GSE144340_Mat… http… #> 12 PMID32601433 C2        BM            21 Whole      BM_C2 GSE144340_Mat… http… #> 13 PMID32601433 C2        PB            21 Whole      PB21… GSE144340_Mat… http… #> 14 PMID32601433 C3        BM            21 Whole      BM_C3 GSE144340_Mat… http… #> 15 PMID32601433 C3        PB            21 Whole      PB21… GSE144340_Mat… http… #> # ℹ 21 more variables: TimepointMonths <chr>, TimepointYears <chr>, #> #   Value_sum <dbl>, Value_count <int>, Value_shannon <dbl>, #> #   Value_simpson <dbl>, Value_invsimpson <dbl>, Value_describe_vars <dbl>, #> #   Value_describe_n <dbl>, Value_describe_mean <dbl>, Value_describe_sd <dbl>, #> #   Value_describe_median <dbl>, Value_describe_trimmed <dbl>, #> #   Value_describe_mad <dbl>, Value_describe_min <dbl>, #> #   Value_describe_max <dbl>, Value_describe_range <dbl>, …  # Aggregation and new stats ---- agg_key <- c(\"SubjectID\") agg <- aggregate_values_by_key(matrix, af,     key = agg_key,     group = \"BarcodeSeq\",     join_af_by = pcr_id_column() ) agg #> # A tibble: 33,267 × 3 #>    BarcodeSeq             SubjectID Value_sum #>    <chr>                  <chr>         <dbl> #>  1 AAAAAAAACACGGAGAACGACG C3                2 #>  2 AAAAAAAACGCGAACAACTACG C3                1 #>  3 AAAAAAAACTCAAAAAAGAAAT C3                1 #>  4 AAAAAAAATTTACACAAAGAAA A4                1 #>  5 AAAAAAAATTTTTAAACGTACC A0                1 #>  6 AAAAAACATATCTATAGTTACC A0                1 #>  7 AAAAAAGACGACGATAGGCACG C1                1 #>  8 AAAAAAGACGTTTATAGGTGTA A2                1 #>  9 AAAAAAGACTGCGACAAAAGGG A4                1 #> 10 AAAAAAGACTTTGATAACCACG C3                1 #> # ℹ 33,257 more rows  agg_meta_functions <- tibble::tribble(     ~Column, ~Function, ~Args, ~Output_colname,     \"TimePoint\", ~ mean(.x, na.rm = TRUE), NA, \"{.col}_avg\",     \"CellMarker\", ~ length(unique(.x)), NA, \"distinct_cell_marker_count\",     \"ID\", ~ length(unique(.x)), NA, \"distinct_id_count\" ) agg_meta <- aggregate_metadata(     af,     aggregating_functions = agg_meta_functions,     grouping_keys = agg_key ) agg_meta #> # A tibble: 9 × 4 #>   SubjectID TimePoint_avg distinct_cell_marker_count distinct_id_count #>   <chr>             <dbl>                      <int>             <int> #> 1 A0                   21                          1                 2 #> 2 A1                   21                          1                 2 #> 3 A2                   21                          1                 1 #> 4 A3                   21                          1                 1 #> 5 A4                   21                          1                 2 #> 6 C0                   21                          1                 1 #> 7 C1                   21                          1                 2 #> 8 C2                   21                          1                 2 #> 9 C3                   21                          1                 2  agg_stats <- sample_statistics(agg, agg_meta,     sample_key = agg_key,     value_columns = \"Value_sum\" )$metadata |>     dplyr::rename(distinct_barcodes = \"nIS\") agg_stats #> # A tibble: 9 × 23 #>   SubjectID TimePoint_avg distinct_cell_marker…¹ distinct_id_count Value_sum_sum #>   <chr>             <dbl>                  <int>             <int>         <dbl> #> 1 A0                   21                      1                 2        326467 #> 2 A1                   21                      1                 2        378987 #> 3 A2                   21                      1                 1        124676 #> 4 A3                   21                      1                 1        180497 #> 5 A4                   21                      1                 2        473256 #> 6 C0                   21                      1                 1         59966 #> 7 C1                   21                      1                 2        399316 #> 8 C2                   21                      1                 2        492590 #> 9 C3                   21                      1                 2        341166 #> # ℹ abbreviated name: ¹​distinct_cell_marker_count #> # ℹ 18 more variables: Value_sum_count <int>, Value_sum_shannon <dbl>, #> #   Value_sum_simpson <dbl>, Value_sum_invsimpson <dbl>, #> #   Value_sum_describe_vars <dbl>, Value_sum_describe_n <dbl>, #> #   Value_sum_describe_mean <dbl>, Value_sum_describe_sd <dbl>, #> #   Value_sum_describe_median <dbl>, Value_sum_describe_trimmed <dbl>, #> #   Value_sum_describe_mad <dbl>, Value_sum_describe_min <dbl>, …  # Abundance ---- abundance <- compute_abundance(agg, columns = \"Value_sum\", key = agg_key) abundance #> # A tibble: 33,267 × 5 #>    BarcodeSeq  SubjectID Value_sum Value_sum_RelAbundance Value_sum_PercAbunda…¹ #>    <chr>       <chr>         <dbl>                  <dbl>                  <dbl> #>  1 AAAAAAAACA… C3                2             0.00000586               0.000586 #>  2 AAAAAAAACG… C3                1             0.00000293               0.000293 #>  3 AAAAAAAACT… C3                1             0.00000293               0.000293 #>  4 AAAAAAAATT… A4                1             0.00000211               0.000211 #>  5 AAAAAAAATT… A0                1             0.00000306               0.000306 #>  6 AAAAAACATA… A0                1             0.00000306               0.000306 #>  7 AAAAAAGACG… C1                1             0.00000250               0.000250 #>  8 AAAAAAGACG… A2                1             0.00000802               0.000802 #>  9 AAAAAAGACT… A4                1             0.00000211               0.000211 #> 10 AAAAAAGACT… C3                1             0.00000293               0.000293 #> # ℹ 33,257 more rows #> # ℹ abbreviated name: ¹​Value_sum_PercAbundance  reset_dyn_vars_config() #> Mandatory IS vars reset to default #> Annotation IS vars reset to default #> Association file columns specs reset to default #> ISS stats specs reset to default #> Matrix suffixes specs reset to default"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"using-the-shiny-interface","dir":"Articles","previous_headings":"","what":"Using the Shiny interface","title":"Getting started with ISAnalytics","text":"package provides simple Shiny interface data exploration plotting. start interface use: application main page show loading screen file. possible load files also R environment, example, opening app, can load included association file: application can choose \"association_file\" R environment loading option screen click “Import data”. data imported, can click “Explore” tab upper navbar: see 2 tabs, one allows interactive exploration data tabular form, tab can plot data. possible customize several different parameters plot finally save file dedicated button end page. Shiny interface still currently active development new features added near future.","code":"NGSdataExplorer() data(\"association_file\")"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"ensuring-reproducibility-of-results","dir":"Articles","previous_headings":"","what":"Ensuring reproducibility of results","title":"Getting started with ISAnalytics","text":"Several implemented functions produce static HTML reports can saved disk, tabular files. Reports contain relevant information function called, inputs outputs statistics, session info reproducibility.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"browse-documentation-online-and-keep-updated","dir":"Articles","previous_headings":"","what":"Browse documentation online and keep updated","title":"Getting started with ISAnalytics","text":"ISAnalytics ’s dedicated package website can browse documentation vignettes easily, addition keeping date relevant updates. Visit website https://calabrialab.github.io/ISAnalytics/","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"problems","dir":"Articles","previous_headings":"","what":"Problems?","title":"Getting started with ISAnalytics","text":"issues documentation can’t solve, get touch opening issue GitHub contacting maintainers","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/ISAnalytics.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"Getting started with ISAnalytics","text":"[1] B. S. Ferrari Samuele Jacob Aurelien. “Efficient gene editing human long-term hematopoietic stem cells validated clonal tracking”. : Nat Biotechnol 38, 1298–1308 (Nov. 2020). DOI: https://doi.org/10.1038/s41587-020-0551-y.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Setting up the workflow and first steps","text":"ISAnalytics R package developed analyze gene therapy vector insertion sites data identified genomics next generation sequencing reads clonal tracking studies. vignette explain properly setup workflow first steps data import data cleaning.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"setting-up-your-workflow-with-dynamic-vars","dir":"Articles","previous_headings":"","what":"Setting up your workflow with dynamic vars","title":"Setting up the workflow and first steps","text":"section demonstrates properly setup workflow ISAnalytics using “dynamic vars” system. ISAnalytics 1.5.4 onwards, new system referred “dynamic vars” implemented improve flexibility package, allowing multiple input formats based user needs rather enforcing hard-coded names structures. way, users follow standard name conventions used package put minimal effort making inputs compliant package requirements. 5 main categories inputs can customize: “mandatory vars”: set variables used uniquely identify integration events across several functions implemented package “annotation vars”: set variables holds names columns contain genomic annotations “association file columns”: set contains information metadata structured “VISPA2 stats specs”: set contains information format pool statistics files produced automatically VISPA2 “matrix files suffixes”: set contains default file names quantification type used automated import functions","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"general-approach","dir":"Articles","previous_headings":"Setting up your workflow with dynamic vars","what":"General approach","title":"Setting up the workflow and first steps","text":"general approach based specification predefined tags associated information form simple data frames standard structure, namely: names contains name column character char character (strings) int integers logi logical values (TRUE / FALSE) numeric numeric values factor factors date generic date format - note functions need read parse files try guess format parsing may fail One accepted date/datetime formats lubridate, can use ISAnalytics::date_formats() view accepted formats transform: purrr-style lambda applied immediately importing. useful operate simple transformations like removing unwanted characters rounding certain precision. Please note lambdas need functions accept vector input operate transformation, aka output vector length input. complicated applications may require value columns, appropriate functions manually applied post-import. flag: now, set either required optional - functions internally check required tags presence missing inputs fail, signaling failure user tag: specific tag expressed string - see Section @ref(tags) Dynamic variables general approach","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"tags","dir":"Articles","previous_headings":"Setting up your workflow with dynamic vars","what":"Tags","title":"Setting up the workflow and first steps","text":"already mentioned, certain functions included package require presence specific tags (associated column names) input work properly. can always check tag means used using function inspect_tags() providing input tags want check character vector. make sure tag matches right information inputs looking description tag. also possible add entries associated tag. overview critical tags category.","code":"inspect_tags(\"chromosome\") #> * TAG: chromosome #> ℹ Description: Number of the chromosome #> ℹ Functions that use it: top_targeted_genes, CIS_grubbs, compute_near_integrations"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"mandatory-is-vars","dir":"Articles","previous_headings":"Setting up your workflow with dynamic vars > Tags","what":"Mandatory IS vars","title":"Setting up the workflow and first steps","text":"presence mandatory vars also checked used functions - example, importing matrices ensured mandatory variables present input, declared look table. functions may require information needs specified input, always check documentation doubts.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"annotation-is-vars","dir":"Articles","previous_headings":"Setting up your workflow with dynamic vars > Tags","what":"Annotation IS vars","title":"Setting up the workflow and first steps","text":"Although genomic annotations necessarily required work ISAnalytics, operations require annotation - ’re working matrices annotated can either annotate tool choice skip steps require annotation.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"association-file-columns","dir":"Articles","previous_headings":"Setting up your workflow with dynamic vars > Tags","what":"Association file columns","title":"Setting up the workflow and first steps","text":"tags table associated function yet, exist potential new features added future.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"vispa2-stats-specs","dir":"Articles","previous_headings":"Setting up your workflow with dynamic vars > Tags","what":"VISPA2 stats specs","title":"Setting up the workflow and first steps","text":"NOTE: VISPA2 stats files usually follow standard naming conventions. pipeline launch configured default parameters, change lookup table.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"customizing-dynamic-vars","dir":"Articles","previous_headings":"Setting up your workflow with dynamic vars","what":"Customizing dynamic vars","title":"Setting up the workflow and first steps","text":"category dynamic vars 3 functions: getter - returns current lookup table setter - allows user change current lookup table resetter - reverts changes defaults Setters take input new variables, validate eventually change lookup table. validation fails error thrown instead, inviting user review inputs. Moreover, critical tags category missing, warning appears, list missing ones. Let’s take look examples. package loading, lookup tables set default values. example, mandatory vars : Let’s suppose matrices follow different standard, integration events characterized 5 fields, like (example contains random data): make work ISAnalytics functions, need compile lookup table like : Notice specified transformation “chromosome” tag: case like number chromosome without prefix “chr” - lambda get executed immediately import. set new variables simply : don’t specify critical tag, warning message displayed: change mind want go back defaults: principle annotation vars, association file columns VISPA2 stats specs. summary functions : mandatory vars: mandatory_IS_vars(), set_mandatory_IS_vars(), reset_mandatory_IS_vars() annotation vars: annotation_IS_vars(), set_annotation_IS_vars(), reset_annotation_IS_vars() association file columns: association_file_columns(), set_af_columns_def(), reset_af_columns_def() VISPA2 stats specs: iss_stats_specs(), set_iss_stats_specs(), reset_iss_stats_specs Matrix files suffixes work slightly different: change lookup table use function set_matrix_file_suffixes(): function ask specify suffix quantification annotated annotated versions. suffixes used automated matrix import function scanning file system. reset lookup tables default configurations can also use function reset_dyn_vars_config(), reverts changes.","code":"mandatory_IS_vars(TRUE) #> # A tibble: 3 × 5 #>   names             types transform flag     tag        #>   <chr>             <chr> <list>    <chr>    <chr>      #> 1 chr               char  <NULL>    required chromosome #> 2 integration_locus int   <NULL>    required locus      #> 3 strand            char  <NULL>    required is_strand new_mand_vars <- tibble::tribble(     ~names, ~types, ~transform, ~flag, ~tag,     \"chrom\", \"char\", ~ stringr::str_replace_all(.x, \"chr\", \"\"), \"required\",     \"chromosome\",     \"position\", \"int\", NULL, \"required\", \"locus\",     \"strand\", \"char\", NULL, \"required\", \"is_strand\",     \"gap\", \"int\", NULL, \"required\", NA_character_,     \"junction\", \"int\", NULL, \"required\", NA_character_ ) set_mandatory_IS_vars(new_mand_vars) #> Mandatory IS vars successfully changed mandatory_IS_vars(TRUE) #> # A tibble: 5 × 5 #>   names    types transform flag     tag        #>   <chr>    <chr> <list>    <chr>    <chr>      #> 1 chrom    char  <formula> required chromosome #> 2 position int   <NULL>    required locus      #> 3 strand   char  <NULL>    required is_strand  #> 4 gap      int   <NULL>    required NA         #> 5 junction int   <NULL>    required NA new_mand_vars[1, ]$tag <- NA_character_ set_mandatory_IS_vars(new_mand_vars) #> Warning: Warning: important tags missing #> ℹ Some tags are required for proper execution of some functions. If these tags are not provided, execution of dependent functions might fail. Review your inputs carefully. #> ℹ Missing tags: chromosome #> ℹ To see where these are involved type `inspect_tags(c('chromosome'))` #> Mandatory IS vars successfully changed mandatory_IS_vars(TRUE) #> # A tibble: 5 × 5 #>   names    types transform flag     tag       #>   <chr>    <chr> <list>    <chr>    <chr>     #> 1 chrom    char  <formula> required NA        #> 2 position int   <NULL>    required locus     #> 3 strand   char  <NULL>    required is_strand #> 4 gap      int   <NULL>    required NA        #> 5 junction int   <NULL>    required NA reset_mandatory_IS_vars() #> Mandatory IS vars reset to default mandatory_IS_vars(TRUE) #> # A tibble: 3 × 5 #>   names             types transform flag     tag        #>   <chr>             <chr> <list>    <chr>    <chr>      #> 1 chr               char  <NULL>    required chromosome #> 2 integration_locus int   <NULL>    required locus      #> 3 strand            char  <NULL>    required is_strand matrix_file_suffixes() #> # A tibble: 10 × 3 #>    quantification   matrix_type   file_suffix                                  #>    <chr>            <chr>         <chr>                                        #>  1 seqCount         annotated     seqCount_matrix.no0.annotated.tsv.gz         #>  2 seqCount         not_annotated seqCount_matrix.tsv.gz                       #>  3 fragmentEstimate annotated     fragmentEstimate_matrix.no0.annotated.tsv.gz #>  4 fragmentEstimate not_annotated fragmentEstimate_matrix.tsv.gz               #>  5 barcodeCount     annotated     barcodeCount_matrix.no0.annotated.tsv.gz     #>  6 barcodeCount     not_annotated barcodeCount_matrix.tsv.gz                   #>  7 cellCount        annotated     cellCount_matrix.no0.annotated.tsv.gz        #>  8 cellCount        not_annotated cellCount_matrix.tsv.gz                      #>  9 ShsCount         annotated     ShsCount_matrix.no0.annotated.tsv.gz         #> 10 ShsCount         not_annotated ShsCount_matrix.tsv.gz"},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"do-i-have-to-do-this-every-time-the-package-loads","dir":"Articles","previous_headings":"Setting up your workflow with dynamic vars > FAQs","what":"Do I have to do this every time the package loads?","title":"Setting up the workflow and first steps","text":", frequently work non-standard settings profile, can use functions export_ISA_settings() import_ISA_settings(): functions allow import/export setting profiles *.json format. set variables first time procedure described , simply call export function saved json file, can imported next workflow.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"reporting-progress","dir":"Articles","previous_headings":"","what":"Reporting progress","title":"Setting up the workflow and first steps","text":"ISAnalytics 1.7.4, functions make use parallel workers process long tasks report progress via functions offered progressr. enable progress bars functions ISAnalytics calling functions. customizing appearance progress bar please refer progressr documentation.","code":"enable_progress_bars()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"introduction-to-isanalytics-import-functions-family","dir":"Articles","previous_headings":"","what":"Introduction to ISAnalytics import functions family","title":"Setting up the workflow and first steps","text":"section ’re going explain detail functions import family used, common workflows follow .","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"designed-to-work-with-vispa2-pipeline","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family","what":"Designed to work with VISPA2 pipeline","title":"Setting up the workflow and first steps","text":"vast majority functions included package designed work combination VISPA2 pipeline (Giulio Spinozzi Andrea Calabria, 2017). don’t know , strongly recommend take look links: Article: VISPA2: Article BitBucket Wiki: VISPA2 Wiki","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"file-system-structure-generated","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family","what":"File system structure generated","title":"Setting up the workflow and first steps","text":"VISPA2 produces standard file system structure starting folder specify workbench root. structure always follows schema: bam bcmuxall bed Pools (concatenatePoolIDSeqRun) quality Pools (concatenatePoolIDSeqRun) report functions implemented expect standard file system structure one described .","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"notation","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family","what":"Notation","title":"Setting up the workflow and first steps","text":"call “integration matrix” tabular structure characterized : k mandatory columns genomic features characterize viral insertion site genome, specified via mandatory_IS_vars(). default ’re set chr, integration_locus strand (optional) annotation columns, provided via annotation_IS_vars(). default ’re set GeneName GeneStrand variable number n sample columns containing quantification corresponding integration site package uses compact form matrices, limiting amount NA values optimizing time memory consumption. info take look : Tidy data integration matrices contain actual data, also need associated sample metadata perform vast majority analyses. ISAnalytics expects metadata contained called “association file”, simple tabular file. generate blank association file can use function generate_blank_association_file. can also view standard column names association_file_columns().","code":"#> # A tibble: 3 × 8 #>   chr   integration_locus strand GeneName     GeneStrand  exp1  exp2  exp3 #>   <chr>             <dbl> <chr>  <chr>        <chr>      <dbl> <dbl> <dbl> #> 1 1                 12324 +      NFATC3       +           4553  5345    NA #> 2 6                657532 +      LOC100507487 +             76   545     5 #> 3 7                657532 +      EDIL3        -             NA    56    NA"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"metadata","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family","what":"Importing metadata","title":"Setting up the workflow and first steps","text":"import metadata use import_association_file(). function responsible reading file R environment data frame, capable perform file system alignment operation, , project pool contained file, scans file system starting provided root check corresponding folders (contained appropriate column) can found. Remember work properly, operation expects standard folder structure, one provided VISPA2. function also produces interactive HTML report.","code":"fs_path <- generate_default_folder_structure() withr::with_options(list(ISAnalytics.reports = FALSE), code = {     af <- import_association_file(fs_path$af, root = fs_path$root) }) #> *** Association file import summary *** #> ℹ For detailed report please set option 'ISAnalytics.reports' to TRUE #> Parsing problems detected: FALSE #> Date parsing problems: FALSE #> Column problems detected: FALSE #> NAs found in important columns: FALSE #> File system alignment: no problems detected #> # A tibble: 6 × 74 #>   ProjectID FUSIONID  PoolID TagSequence SubjectID VectorType VectorID #>   <chr>     <chr>     <chr>  <chr>       <chr>     <chr>      <chr>    #> 1 PJ01      ET#382.46 POOL01 LTR75LC38   PT001     lenti      GLOBE    #> 2 PJ01      ET#381.40 POOL01 LTR53LC32   PT001     lenti      GLOBE    #> 3 PJ01      ET#381.9  POOL01 LTR83LC66   PT001     lenti      GLOBE    #> 4 PJ01      ET#381.71 POOL01 LTR27LC94   PT001     lenti      GLOBE    #> 5 PJ01      ET#381.2  POOL01 LTR69LC52   PT001     lenti      GLOBE    #> 6 PJ01      ET#382.28 POOL01 LTR37LC2    PT001     lenti      GLOBE    #> # ℹ 67 more variables: ExperimentID <chr>, Tissue <chr>, TimePoint <chr>, #> #   DNAFragmentation <chr>, PCRMethod <chr>, TagIDextended <chr>, #> #   Keywords <chr>, CellMarker <chr>, TagID <chr>, NGSProvider <chr>, #> #   NGSTechnology <chr>, ConverrtedFilesDir <chr>, ConverrtedFilesName <chr>, #> #   SourceFileFolder <chr>, SourceFileNameR1 <chr>, SourceFileNameR2 <chr>, #> #   DNAnumber <chr>, ReplicateNumber <int>, DNAextractionDate <date>, #> #   DNAngUsed <dbl>, LinearPCRID <chr>, LinearPCRDate <date>, …"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"function-arguments","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family > Importing metadata","what":"Function arguments","title":"Setting up the workflow and first steps","text":"can change several arguments function call modify behavior function. Set NULL want import association file without file system alignment. Beware automated import functionalities won’t work! Set non-empty string (path disk): case, column associated tag proj_folder (default PathToFolderProjectID) file contain relative file paths, example root set “/home” project folder association file set “/PJ01”, function check directory exists “/home/PJ01” Set empty string: ideal want store paths association file absolute file paths. case project folder “/home/PJ01” path PathToFolderProjectID column set root = “” dates_format: string useful properly parsing dates tabular formats separator: column separator used file. Defaults “\\t”, valid separators “,” (comma), “;” (semi-colon) filter_for: can set argument named list filters, names column names. example list(ProjectID = \"PJ01\") return rows whose attribute “ProjectID” equals “PJ01” import_iss: either TRUE FALSE. set TRUE, performs internal call import_Vispa2_stats() (see next section), appends imported files metadata convert_tp: either TRUE FALSE. Converts column containing time point expressed days months years (custom logic). Set NULL avoid production report Set folder (doesn’t exist, gets automatically created) ...: additional named arguments pass import_Vispa2_stats() chose import VISPA2 stats details view dedicated function documentation. NOTE: function supports files various formats long correct separator provided. also accepts files *.xlsx *.xls formats recommend using since report won’t include detailed summary potential parsing problems. interactive report includes useful information General issues: parsing problems, missing columns, NA values important columns etc. allows immediately spot problems correct proceeding analyses File system alignment issues: useful know data can imported folders missing Info VISPA2 stats (import_iss TRUE)","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"importing-vispa2-stats-files","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family","what":"Importing VISPA2 stats files","title":"Setting up the workflow and first steps","text":"VISPA2 automatically produces summary files pool holding information can useful analyses downstream, recommended import first steps workflow. , can use import_VISPA2_stats: function requires input imported file system aligned association file scan iss folder files match known prefixes (defaults already provided can change see fit). can either choose join imported data frames association file input obtain single data frame keep , just set parameter join_with_af accordingly. end process HTML report produced, signaling potential problems. can directly call function import association file setting import_iss argument import_association_file TRUE.","code":"vispa_stats <- import_Vispa2_stats(     association_file = af,     join_with_af = FALSE,     report_path = NULL ) #> # A tibble: 6 × 14 #>   POOL     TAG       RUN_NAME     PHIX_MAPPING PLASMID_MAPPED_BYPOOL BARCODE_MUX #>   <chr>    <chr>     <chr>               <dbl>                 <dbl>       <dbl> #> 1 POOL01-1 LTR75LC38 PJ01|POOL01…     43586699               2256176      645026 #> 2 POOL01-1 LTR53LC32 PJ01|POOL01…     43586699               2256176      652208 #> 3 POOL01-1 LTR83LC66 PJ01|POOL01…     43586699               2256176      451519 #> 4 POOL01-1 LTR27LC94 PJ01|POOL01…     43586699               2256176      426500 #> 5 POOL01-1 LTR69LC52 PJ01|POOL01…     43586699               2256176       18300 #> 6 POOL01-1 LTR37LC2  PJ01|POOL01…     43586699               2256176      729327 #> # ℹ 8 more variables: LTR_IDENTIFIED <dbl>, TRIMMING_FINAL_LTRLC <dbl>, #> #   LV_MAPPED <dbl>, BWA_MAPPED_OVERALL <dbl>, ISS_MAPPED_OVERALL <dbl>, #> #   RAW_READS <lgl>, QUALITY_PASSED <lgl>, ISS_MAPPED_PP <lgl>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"importing-a-single-integration-matrix","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family","what":"Importing a single integration matrix","title":"Setting up the workflow and first steps","text":"want import single integration matrix can using import_single_Vispa2Matrix() function. function reads file converts tidy structure: several different formats can read, since can specify column separator. details usage arguments view dedicated function documentation.","code":"matrix_path <- fs::path(     fs_path$root,     \"PJ01\",     \"quantification\",     \"POOL01-1\",     \"PJ01_POOL01-1_seqCount_matrix.no0.annotated.tsv.gz\" ) matrix <- import_single_Vispa2Matrix(matrix_path) #> # A tibble: 802 × 7 #>    chr   integration_locus strand GeneName     GeneStrand CompleteAmplificatio…¹ #>    <chr>             <int> <chr>  <chr>        <chr>      <chr>                  #>  1 16             68164148 +      NFATC3       +          PJ01_POOL01_LTR75LC38… #>  2 4             129390130 +      LOC100507487 +          PJ01_POOL01_LTR75LC38… #>  3 5              84009671 -      EDIL3        -          PJ01_POOL01_LTR75LC38… #>  4 12             54635693 -      CBX5         -          PJ01_POOL01_LTR75LC38… #>  5 2             181930711 +      UBE2E3       +          PJ01_POOL01_LTR75LC38… #>  6 20             35920986 +      MANBAL       +          PJ01_POOL01_LTR75LC38… #>  7 22             26900625 +      TFIP11       -          PJ01_POOL01_LTR75LC38… #>  8 3             106580075 +      LINC00882    -          PJ01_POOL01_LTR75LC38… #>  9 1              16186297 -      SPEN         +          PJ01_POOL01_LTR75LC38… #> 10 17             61712419 +      MAP3K3       +          PJ01_POOL01_LTR75LC38… #> # ℹ 792 more rows #> # ℹ abbreviated name: ¹​CompleteAmplificationID #> # ℹ 1 more variable: Value <int>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"automated-integration-matrices-import","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family","what":"Automated integration matrices import","title":"Setting up the workflow and first steps","text":"Integration matrices import can automated association file imported file system alignment option. ISAnalytics provides function, import_parallel_Vispa2Matrices(), allows just fast efficient way.","code":"withr::with_options(list(ISAnalytics.reports = FALSE), {     matrices <- import_parallel_Vispa2Matrices(af,         c(\"seqCount\", \"fragmentEstimate\"),         mode = \"AUTO\"     ) })"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"function-arguments-1","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family","what":"Function arguments","title":"Setting up the workflow and first steps","text":"Let’s see behavior function changes change arguments.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"association_file-argument","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family > Function arguments","what":"association_file argument","title":"Setting up the workflow and first steps","text":"can supply data frame object, imported via import_association_file() (see Section @ref(metadata)) string (path association file disk). first scenario necessary perform file system alignment, since function scans folders contained column Path_quant, second case also provide additional named argument (...) appropriate root: function internally call import_association_file(), don’t specific needs recommend 2 steps separately provide association file data frame.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"quantification_type-argument","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family > Function arguments","what":"quantification_type argument","title":"Setting up the workflow and first steps","text":"pool may multiple available quantification types, , different matrices containing samples genomic features different quantification. typical workflow contemplates seqCount fragmentEstimate, supported quantification types can viewed quantification_types().","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"matrix_type-argument","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family > Function arguments","what":"matrix_type argument","title":"Setting up the workflow and first steps","text":"mentioned Section @ref(notation), annotation columns optional may included matrices. argument allows specify function look specific type matrix, either annotated not_annotated. File suffixes matrices specified via matrix_file_suffixes().","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"workers-argument","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family > Function arguments","what":"workers argument","title":"Setting up the workflow and first steps","text":"Sets number parallel workers set . highly depends hardware configuration machine.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"multi_quant_matrix-argument","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family > Function arguments","what":"multi_quant_matrix argument","title":"Setting up the workflow and first steps","text":"importing one quantification , can handy data single data frame rather two. set TRUE function internally call comparison_matrix() produce single data frames dedicated column quantification. example, matrices ’ve imported :","code":"#> # A tibble: 6 × 8 #>   chr   integration_locus strand GeneName     GeneStrand CompleteAmplificationID #>   <chr>             <int> <chr>  <chr>        <chr>      <chr>                   #> 1 16             68164148 +      NFATC3       +          PJ01_POOL01_LTR75LC38_… #> 2 4             129390130 +      LOC100507487 +          PJ01_POOL01_LTR75LC38_… #> 3 5              84009671 -      EDIL3        -          PJ01_POOL01_LTR75LC38_… #> 4 12             54635693 -      CBX5         -          PJ01_POOL01_LTR75LC38_… #> 5 2             181930711 +      UBE2E3       +          PJ01_POOL01_LTR75LC38_… #> 6 20             35920986 +      MANBAL       +          PJ01_POOL01_LTR75LC38_… #> # ℹ 2 more variables: fragmentEstimate <dbl>, seqCount <int>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"report_path-argument","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family > Function arguments","what":"report_path argument","title":"Setting up the workflow and first steps","text":"import functions, also import_parallel_Vispa2Matrices() produces interactive report, use argument set appropriate path report saved.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"mode-argument","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family > Function arguments","what":"mode argument","title":"Setting up the workflow and first steps","text":"Since ISAnalytics 1.8.3 argument can set AUTO. want import? fully automated mode, function try import everything contained input association file. means need import specific set projects/pools, need filter association file accordingly prior calling function (can easily via filter_for argument explained Section @ref(metadata)). deal duplicates? scanning folders files match given pattern (case function looks matrices match quantification type matrix type), possible folder contains multiple files quantification. course recommended, suggest move duplicated files sub directory remove ’re necessary, case happens, need set two arguments (described next sub sections) “help” function discriminate duplicates. Please note discrimination possible files imported.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"patterns-argument","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family > Function arguments","what":"patterns argument","title":"Setting up the workflow and first steps","text":"Providing set patterns (interpreted regular expressions) helps function choose duplicated files found. ’re confident folders don’t contain duplicates feel free ignore argument.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"matching_opt-argument","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family > Function arguments","what":"matching_opt argument","title":"Setting up the workflow and first steps","text":"argument relevant patterns isn’t NULL. Tells function match given patterns multiple supplied: means keep files whose name matches given patterns, means keep files whose name matches given patterns OPTIONAL expresses preference, try find files contain patterns don’t find return whatever find.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"argument","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family > Function arguments","what":"... argument","title":"Setting up the workflow and first steps","text":"Additional named arguments supply comparison_matrix() import_single_Vispa2_matrix","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"notes","dir":"Articles","previous_headings":"Introduction to ISAnalytics import functions family","what":"Notes","title":"Setting up the workflow and first steps","text":"Earlier versions package featured two separated functions, import_parallel_Vispa2Matrices_auto() import_parallel_Vispa2Matrices_interactive(). functions now officially deprecated (since ISAnalytics 1.3.3) defunct next release cycle.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"data-cleaning-and-pre-processing","dir":"Articles","previous_headings":"","what":"Data cleaning and pre-processing","title":"Setting up the workflow and first steps","text":"section goes detail data cleaning pre-processing operations can perform package. ISAnalytics offers several different functions cleaning pre-processing data. Recalibration: identifies integration events near condenses single event whenever appropriate - compute_near_integrations() Outliers identification removal: identifies samples considered outliers according user-defined logic filters - outlier_filter() Collision removal: identifies collision events independent samples - remove_collisions() Filter based cell lineage purity: identifies removes contamination different cell types - purity_filter() Data metadata aggregation: allows union biological samples single pcr replicates arbitrary aggregations - aggregate_values_by_key(), aggregate_metadata()","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"removing-collisions","dir":"Articles","previous_headings":"Data cleaning and pre-processing","what":"Removing collisions","title":"Setting up the workflow and first steps","text":"section illustrate functions dedicated collision removal.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"what-is-a-collision-and-why-should-you-care","dir":"Articles","previous_headings":"Data cleaning and pre-processing > Removing collisions","what":"What is a collision and why should you care?","title":"Setting up the workflow and first steps","text":"’re going much detail , ’re going explain simple way “collision” function package deals . say integration (aka unique combination mandatory_IS_vars()) collision combination shared different independent samples: independent sample unique combination metadata fields specified user. reason behind ’s highly improbable observe integration two different independent samples phenomenon might indicator kind contamination sequencing phase PCR phase, reason might want exclude contamination analysis. ISAnalytics provides function processes imported data removal reassignment “problematic” integrations, remove_collisions(). processing done using sequence count value, corresponding matrix needed operation.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"the-logic-behind-the-function","dir":"Articles","previous_headings":"Data cleaning and pre-processing > Removing collisions","what":"The logic behind the function","title":"Setting up the workflow and first steps","text":"remove_collisions() function follows several logical steps decide whether integration collision decides whether re-assign remove entirely based different criteria.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"identifying-the-collisions","dir":"Articles","previous_headings":"Data cleaning and pre-processing > Removing collisions > The logic behind the function","what":"Identifying the collisions","title":"Setting up the workflow and first steps","text":"function uses information stored association file assess independent samples present counts number independent samples integration: count > 1 considered collisions. Example collisions: integration (1, 123454, +) found 2 different independent samples ((SUBJ01, PJ01) & (SUBJ02, PJ01))","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"re-assign-vs-remove","dir":"Articles","previous_headings":"Data cleaning and pre-processing > Removing collisions > The logic behind the function","what":"Re-assign vs remove","title":"Setting up the workflow and first steps","text":"collisions identified, function follows 3 steps tries re-assign combination single independent sample. criteria : Compare dates: ’s possible absolute ordering dates, integration re-assigned sample earliest date. two samples share date ’s impossible decide, next criteria tested Compare replicate number: sample integration one replicate, ’s probable integration artifact. ’s possible absolute ordering, collision re-assigned sample whose grouping largest Compare sequence count value: previous criteria wasn’t sufficient make decision, group independent samples ’s evaluated sum sequence count value - group cumulative value sequence count compared value groups. single group ratio n times bigger groups, one chosen re-assignment. factor n passed parameter function (reads_ratio), default value 10. none criteria sufficient make decision, integration simply removed matrix.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"usage","dir":"Articles","previous_headings":"Data cleaning and pre-processing > Removing collisions","what":"Usage","title":"Setting up the workflow and first steps","text":"Important notes association file: sure association file properly filled . function requires specify date column (default “SequencingDate”), ensure column doesn’t contain NA values incorrect values. function accepts different inputs, namely: multi-quantification matrix: always recommended approach named list matrices names quantification types quantification_types() single sequence count matrix: recommended approach since requires realignment step quantification matrices . option ISAnalytics.reports active, interactive report HTML format produced specified path.","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") ## Multi quantification matrix no_coll <- remove_collisions(     x = integration_matrices,     association_file = association_file,     report_path = NULL ) #> Identifying collisions... #> Processing collisions... #> Finished! ## Matrix list separated <- separate_quant_matrices(integration_matrices) no_coll_list <- remove_collisions(     x = separated,     association_file = association_file,     report_path = NULL ) #> Identifying collisions... #> Processing collisions... #> Finished! ## Only sequence count no_coll_single <- remove_collisions(     x = separated$seqCount,     association_file = association_file,     quant_cols = c(seqCount = \"Value\"),     report_path = NULL ) #> Identifying collisions... #> Processing collisions... #> Finished!"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"re-align-other-matrices","dir":"Articles","previous_headings":"Data cleaning and pre-processing > Removing collisions","what":"Re-align other matrices","title":"Setting up the workflow and first steps","text":"’ve given input standalone sequence count matrix remove_collisions(), realign matrices call function realign_after_collisions(), passing input processed sequence count matrix named list matrices realign. NOTE: names list must quantification types.","code":"other_realigned <- realign_after_collisions(     sc_matrix = no_coll_single,     other_matrices = list(fragmentEstimate = separated$fragmentEstimate) )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"performing-data-and-metadata-aggregation","dir":"Articles","previous_headings":"Data cleaning and pre-processing","what":"Performing data and metadata aggregation","title":"Setting up the workflow and first steps","text":"section ’re going explain detail use functions aggregate family, namely: aggregate_metadata() aggregate_values_by_key()","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"aggregating-metadata","dir":"Articles","previous_headings":"Data cleaning and pre-processing > Performing data and metadata aggregation","what":"Aggregating metadata","title":"Setting up the workflow and first steps","text":"refer information contained association file “metadata”: sometimes ’s useful obtain collective information based certain group variables ’re interested . function aggregate_metadata() just : according grouping variables, meaning names columns association file perform group_by operation ,creates summary. can fully customize summary providing “function table” tells function operation applied column name give output column. default already supplied: can either provide purrr-style lambdas (given example ), simply specify name function additional parameters list separated column. choose provide table maintain column names function work properly. details take look function documentation ?default_meta_agg.","code":"#> # A tibble: 15 × 4 #>    Column               Function  Args  Output_colname #>    <chr>                <list>    <lgl> <chr>          #>  1 FusionPrimerPCRDate  <formula> NA    {.col}_min     #>  2 LinearPCRDate        <formula> NA    {.col}_min     #>  3 VCN                  <formula> NA    {.col}_avg     #>  4 ng DNA corrected     <formula> NA    {.col}_avg     #>  5 Kapa                 <formula> NA    {.col}_avg     #>  6 ng DNA corrected     <formula> NA    {.col}_sum     #>  7 ulForPool            <formula> NA    {.col}_sum     #>  8 BARCODE_MUX          <formula> NA    {.col}_sum     #>  9 TRIMMING_FINAL_LTRLC <formula> NA    {.col}_sum     #> 10 LV_MAPPED            <formula> NA    {.col}_sum     #> 11 BWA_MAPPED_OVERALL   <formula> NA    {.col}_sum     #> 12 ISS_MAPPED_OVERALL   <formula> NA    {.col}_sum     #> 13 PCRMethod            <formula> NA    {.col}         #> 14 NGSTechnology        <formula> NA    {.col}         #> 15 DNAnumber            <formula> NA    {.col}"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"typical-workflow","dir":"Articles","previous_headings":"Data cleaning and pre-processing > Performing data and metadata aggregation > Aggregating metadata","what":"Typical workflow","title":"Setting up the workflow and first steps","text":"Import association file via import_assocition_file(). need information import function please view vignette “use import functions”: vignette(\"how_to_import_functions\", package=\"ISAnalytics\"). Perform aggregation","code":"data(\"association_file\", package = \"ISAnalytics\") aggregated_meta <- aggregate_metadata(association_file = association_file) #> # A tibble: 20 × 19 #>    SubjectID CellMarker Tissue TimePoint FusionPrimerPCRDate_min #>    <chr>     <chr>      <chr>  <chr>     <date>                  #>  1 PT001     MNC        BM     0030      2016-11-03              #>  2 PT001     MNC        BM     0060      2016-11-03              #>  3 PT001     MNC        BM     0090      2016-11-03              #>  4 PT001     MNC        BM     0180      2016-11-03              #>  5 PT001     MNC        BM     0360      2017-04-21              #>  6 PT001     MNC        PB     0030      2016-11-03              #>  7 PT001     MNC        PB     0060      2016-11-03              #>  8 PT001     MNC        PB     0090      2016-11-03              #>  9 PT001     MNC        PB     0180      2016-11-03              #> 10 PT001     MNC        PB     0360      2017-04-21              #> 11 PT002     MNC        BM     0030      2017-04-21              #> 12 PT002     MNC        BM     0060      2017-05-05              #> 13 PT002     MNC        BM     0090      2017-05-05              #> 14 PT002     MNC        BM     0180      2017-05-16              #> 15 PT002     MNC        BM     0360      2018-03-12              #> 16 PT002     MNC        PB     0030      2017-04-21              #> 17 PT002     MNC        PB     0060      2017-05-05              #> 18 PT002     MNC        PB     0090      2017-05-05              #> 19 PT002     MNC        PB     0180      2017-05-05              #> 20 PT002     MNC        PB     0360      2018-03-12              #> # ℹ 14 more variables: LinearPCRDate_min <date>, VCN_avg <dbl>, #> #   `ng DNA corrected_avg` <dbl>, Kapa_avg <dbl>, `ng DNA corrected_sum` <dbl>, #> #   ulForPool_sum <dbl>, BARCODE_MUX_sum <int>, TRIMMING_FINAL_LTRLC_sum <int>, #> #   LV_MAPPED_sum <int>, BWA_MAPPED_OVERALL_sum <int>, #> #   ISS_MAPPED_OVERALL_sum <int>, PCRMethod <chr>, NGSTechnology <chr>, #> #   DNAnumber <chr>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"aggregation-of-values-by-key","dir":"Articles","previous_headings":"Data cleaning and pre-processing > Performing data and metadata aggregation","what":"Aggregation of values by key","title":"Setting up the workflow and first steps","text":"ISAnalytics contains useful functions aggregate values contained imported matrices based key, aka single column combination columns contained association file related samples.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"typical-workflow-1","dir":"Articles","previous_headings":"Data cleaning and pre-processing > Performing data and metadata aggregation > Aggregation of values by key","what":"Typical workflow","title":"Setting up the workflow and first steps","text":"Import association file Import integration matrices via import_parallel_Vispa2Matrices() Perform aggregation function aggregate_values_by_key can perform aggregation list matrices single matrix.","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) #> # A tibble: 1,074 × 11 #>    chr   integration_locus strand GeneName GeneStrand SubjectID CellMarker #>    <chr>             <dbl> <chr>  <chr>    <chr>      <chr>     <chr>      #>  1 1               8464757 -      RERE     -          PT001     MNC        #>  2 1               8464757 -      RERE     -          PT001     MNC        #>  3 1               8607357 +      RERE     -          PT001     MNC        #>  4 1               8607357 +      RERE     -          PT001     MNC        #>  5 1               8607357 +      RERE     -          PT001     MNC        #>  6 1               8607362 -      RERE     -          PT001     MNC        #>  7 1               8850362 +      RERE     -          PT002     MNC        #>  8 1              11339120 +      UBIAD1   +          PT001     MNC        #>  9 1              11339120 +      UBIAD1   +          PT001     MNC        #> 10 1              11339120 +      UBIAD1   +          PT001     MNC        #>    Tissue TimePoint seqCount_sum fragmentEstimate_sum #>    <chr>  <chr>            <dbl>                <dbl> #>  1 BM     0030               542                 3.01 #>  2 BM     0060                 1                 1.00 #>  3 BM     0060                 1                 1.00 #>  4 BM     0180              1096                 5.01 #>  5 BM     0360               330                34.1  #>  6 BM     0180              1702                 4.01 #>  7 BM     0360               562                 3.01 #>  8 BM     0060              1605                 8.03 #>  9 PB     0060                 1                 1.00 #> 10 PB     0180                 1                 1.00 #> # ℹ 1,064 more rows"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"changing-parameters-to-obtain-different-results","dir":"Articles","previous_headings":"","what":"Setting up the workflow and first steps","title":"Setting up the workflow and first steps","text":"function several different parameters default values can changed according user preference. Changing key value can change value parameter key see fit. parameter contain one multiple columns association file want include grouping performing aggregation. default value set c(\"SubjectID\", \"CellMarker\", \"Tissue\", \"TimePoint\") (default key aggregate_metadata function). Changing lambda value lambda parameter indicates function(s) applied values aggregation. lambda must named list either functions purrr-style lambdas: like specify additional parameters function second option recommended. important note functions perform kind aggregation numeric values: means practical terms need accept vector numeric/integer values input produce SINGLE value output. Valid options purpose might : sum, mean, median, min, max . Note , specifying purrr-style lambdas (formulas), first parameter needs set .x, parameters can set usual. can also use lambda functions produce data frames lists. case variables produced data frame included final data frame. example: Changing value_cols value value_cols parameter tells function numeric columns x functions applied. Note every function contained lambda applied every column value_cols: resulting columns named “original name_function applied”. Changing group value group parameter contain variables include grouping besides key. default contains c(\"chr\", \"integration_locus\",\"strand\", \"GeneName\", \"GeneStrand\"). can change grouping see fit, don’t want add variable key, just set NULL.","code":"agg1 <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     key = c(\"SubjectID\", \"ProjectID\"),     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) #> # A tibble: 577 × 9 #>    chr   integration_locus strand GeneName GeneStrand SubjectID ProjectID #>    <chr>             <dbl> <chr>  <chr>    <chr>      <chr>     <chr>     #>  1 1               8464757 -      RERE     -          PT001     PJ01      #>  2 1               8607357 +      RERE     -          PT001     PJ01      #>  3 1               8607362 -      RERE     -          PT001     PJ01      #>  4 1               8850362 +      RERE     -          PT002     PJ01      #>  5 1              11339120 +      UBIAD1   +          PT001     PJ01      #>  6 1              12341466 -      VPS13D   +          PT002     PJ01      #>  7 1              14034054 -      PRDM2    +          PT002     PJ01      #>  8 1              16186297 -      SPEN     +          PT001     PJ01      #>  9 1              16602483 +      FBXO42   -          PT001     PJ01      #> 10 1              16602483 +      FBXO42   -          PT002     PJ01      #>    seqCount_sum fragmentEstimate_sum #>           <dbl>                <dbl> #>  1          543                 4.01 #>  2         1427                40.1  #>  3         1702                 4.01 #>  4          562                 3.01 #>  5         1607                10.0  #>  6         1843                 8.05 #>  7         1938                 3.01 #>  8         3494                16.1  #>  9         2947                 9.04 #> 10           30                 2.00 #> # ℹ 567 more rows agg2 <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     key = \"SubjectID\",     lambda = list(mean = ~ mean(.x, na.rm = TRUE)),     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) #> # A tibble: 577 × 8 #>    chr   integration_locus strand GeneName GeneStrand SubjectID seqCount_mean #>    <chr>             <dbl> <chr>  <chr>    <chr>      <chr>             <dbl> #>  1 1               8464757 -      RERE     -          PT001              272. #>  2 1               8607357 +      RERE     -          PT001              285. #>  3 1               8607362 -      RERE     -          PT001              851  #>  4 1               8850362 +      RERE     -          PT002              562  #>  5 1              11339120 +      UBIAD1   +          PT001              321. #>  6 1              12341466 -      VPS13D   +          PT002             1843  #>  7 1              14034054 -      PRDM2    +          PT002             1938  #>  8 1              16186297 -      SPEN     +          PT001              699. #>  9 1              16602483 +      FBXO42   -          PT001              982. #> 10 1              16602483 +      FBXO42   -          PT002               30  #>    fragmentEstimate_mean #>                    <dbl> #>  1                  2.01 #>  2                  8.02 #>  3                  2.01 #>  4                  3.01 #>  5                  2.01 #>  6                  8.05 #>  7                  3.01 #>  8                  3.22 #>  9                  3.01 #> 10                  2.00 #> # ℹ 567 more rows agg3 <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     key = \"SubjectID\",     lambda = list(describe = ~ list(psych::describe(.x))),     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) #> # A tibble: 577 × 8 #>    chr   integration_locus strand GeneName GeneStrand SubjectID #>    <chr>             <dbl> <chr>  <chr>    <chr>      <chr>     #>  1 1               8464757 -      RERE     -          PT001     #>  2 1               8607357 +      RERE     -          PT001     #>  3 1               8607362 -      RERE     -          PT001     #>  4 1               8850362 +      RERE     -          PT002     #>  5 1              11339120 +      UBIAD1   +          PT001     #>  6 1              12341466 -      VPS13D   +          PT002     #>  7 1              14034054 -      PRDM2    +          PT002     #>  8 1              16186297 -      SPEN     +          PT001     #>  9 1              16602483 +      FBXO42   -          PT001     #> 10 1              16602483 +      FBXO42   -          PT002     #>    seqCount_describe fragmentEstimate_describe #>    <list>            <list>                    #>  1 <psych [1 × 13]>  <psych [1 × 13]>          #>  2 <psych [1 × 13]>  <psych [1 × 13]>          #>  3 <psych [1 × 13]>  <psych [1 × 13]>          #>  4 <psych [1 × 13]>  <psych [1 × 13]>          #>  5 <psych [1 × 13]>  <psych [1 × 13]>          #>  6 <psych [1 × 13]>  <psych [1 × 13]>          #>  7 <psych [1 × 13]>  <psych [1 × 13]>          #>  8 <psych [1 × 13]>  <psych [1 × 13]>          #>  9 <psych [1 × 13]>  <psych [1 × 13]>          #> 10 <psych [1 × 13]>  <psych [1 × 13]>          #> # ℹ 567 more rows agg4 <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     key = \"SubjectID\",     lambda = list(sum = sum, mean = mean),     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) #> # A tibble: 577 × 10 #>    chr   integration_locus strand GeneName GeneStrand SubjectID seqCount_sum #>    <chr>             <dbl> <chr>  <chr>    <chr>      <chr>            <dbl> #>  1 1               8464757 -      RERE     -          PT001              543 #>  2 1               8607357 +      RERE     -          PT001             1427 #>  3 1               8607362 -      RERE     -          PT001             1702 #>  4 1               8850362 +      RERE     -          PT002              562 #>  5 1              11339120 +      UBIAD1   +          PT001             1607 #>  6 1              12341466 -      VPS13D   +          PT002             1843 #>  7 1              14034054 -      PRDM2    +          PT002             1938 #>  8 1              16186297 -      SPEN     +          PT001             3494 #>  9 1              16602483 +      FBXO42   -          PT001             2947 #> 10 1              16602483 +      FBXO42   -          PT002               30 #>    seqCount_mean fragmentEstimate_sum fragmentEstimate_mean #>            <dbl>                <dbl>                 <dbl> #>  1          272.                 4.01                  2.01 #>  2          285.                40.1                   8.02 #>  3          851                  4.01                  2.01 #>  4          562                  3.01                  3.01 #>  5          321.                10.0                   2.01 #>  6         1843                  8.05                  8.05 #>  7         1938                  3.01                  3.01 #>  8          699.                16.1                   3.22 #>  9          982.                 9.04                  3.01 #> 10           30                  2.00                  2.00 #> # ℹ 567 more rows agg5 <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     key = \"SubjectID\",     lambda = list(sum = sum, mean = mean),     group = c(mandatory_IS_vars()),     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) #> # A tibble: 577 × 8 #>    chr   integration_locus strand SubjectID seqCount_sum seqCount_mean #>    <chr>             <dbl> <chr>  <chr>            <dbl>         <dbl> #>  1 1               8464757 -      PT001              543          272. #>  2 1               8607357 +      PT001             1427          285. #>  3 1               8607362 -      PT001             1702          851  #>  4 1               8850362 +      PT002              562          562  #>  5 1              11339120 +      PT001             1607          321. #>  6 1              12341466 -      PT002             1843         1843  #>  7 1              14034054 -      PT002             1938         1938  #>  8 1              16186297 -      PT001             3494          699. #>  9 1              16602483 +      PT001             2947          982. #> 10 1              16602483 +      PT002               30           30  #>    fragmentEstimate_sum fragmentEstimate_mean #>                   <dbl>                 <dbl> #>  1                 4.01                  2.01 #>  2                40.1                   8.02 #>  3                 4.01                  2.01 #>  4                 3.01                  3.01 #>  5                10.0                   2.01 #>  6                 8.05                  8.05 #>  7                 3.01                  3.01 #>  8                16.1                   3.22 #>  9                 9.04                  3.01 #> 10                 2.00                  2.00 #> # ℹ 567 more rows"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"analysis-use-case-example-shared-integration-sites","dir":"Articles","previous_headings":"","what":"Analysis use-case example: shared integration sites","title":"Setting up the workflow and first steps","text":"integration site always characterized triple values: (chr, integration_locus, strand), hence attributes always present integration matrices. can aggregate data different ways according needs, obtaining therefore different groups. group associated set integration sites. NOTE: aggregating data mandatory, since sharing functions ISAnalytics count distinct integration sites require quantification. important thing columns included specified key also included input matrices. integration site shared two groups triple observed groups considered.","code":"## Aggregation by standard key agg <- aggregate_values_by_key(integration_matrices,     association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) agg <- agg |> dplyr::filter(TimePoint %in% c(\"0030\", \"0060\")) #> # A tibble: 419 × 11 #>    chr   integration_locus strand GeneName GeneStrand SubjectID CellMarker #>    <chr>             <dbl> <chr>  <chr>    <chr>      <chr>     <chr>      #>  1 1               8464757 -      RERE     -          PT001     MNC        #>  2 1               8464757 -      RERE     -          PT001     MNC        #>  3 1               8607357 +      RERE     -          PT001     MNC        #>  4 1              11339120 +      UBIAD1   +          PT001     MNC        #>  5 1              11339120 +      UBIAD1   +          PT001     MNC        #>  6 1              16186297 -      SPEN     +          PT001     MNC        #>  7 1              16186297 -      SPEN     +          PT001     MNC        #>  8 1              16602483 +      FBXO42   -          PT001     MNC        #>  9 1              25337264 -      MIR4425  +          PT002     MNC        #> 10 1              25337264 -      MIR4425  +          PT002     MNC        #>    Tissue TimePoint seqCount_sum fragmentEstimate_sum #>    <chr>  <chr>            <dbl>                <dbl> #>  1 BM     0030               542                 3.01 #>  2 BM     0060                 1                 1.00 #>  3 BM     0060                 1                 1.00 #>  4 BM     0060              1605                 8.03 #>  5 PB     0060                 1                 1.00 #>  6 BM     0030                 1                 1.00 #>  7 PB     0060                 1                 1.00 #>  8 BM     0060              2947                 9.04 #>  9 BM     0030                23                 9.14 #> 10 PB     0060                36                 7.07 #> # ℹ 409 more rows"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"automated-sharing-counts","dir":"Articles","previous_headings":"Analysis use-case example: shared integration sites","what":"Automated sharing counts","title":"Setting up the workflow and first steps","text":"ISAnalytics provides function is_sharing() computing automated sharing counts. function several arguments can tuned according user needs.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"scenario-1-single-input-data-frame-and-single-grouping-key","dir":"Articles","previous_headings":"Analysis use-case example: shared integration sites","what":"SCENARIO 1: single input data frame and single grouping key","title":"Setting up the workflow and first steps","text":"configuration set: single input data frame: agg single grouping key setting argument grouping_key. specific case, groups identified unique combination SubjectID, CellMarker, Tissue TimePoint n_comp represents number comparisons compute: 2 means ’re interested knowing sharing PAIRS distinct groups want keep counts distinct integration sites group setting is_count TRUE relative_is_sharing set TRUE adds sharing expressed percentage, precisely adds column on_g1 calculated absolute number shared integrations divided cardinality first group, on_g2 analogous computed cardinality second group finally on_union computed cardinality union two groups. setting argument minimal TRUE tell function avoid redundant comparisons: way combinations permutations included output table include_self_comp adds rows table labelled group: rows always 100% sharing groups. scenarios useful, now set FALSE since don’t need keep_genomic_coord allows us keep genomic coordinates shared integration sites separate table","code":"sharing_1 <- is_sharing(agg,     group_key = c(         \"SubjectID\", \"CellMarker\",         \"Tissue\", \"TimePoint\"     ),     n_comp = 2,     is_count = TRUE,     relative_is_sharing = TRUE,     minimal = TRUE,     include_self_comp = FALSE,     keep_genomic_coord = TRUE ) sharing_1 #> # A tibble: 28 × 10 #>    g1           g2    shared count_g1 count_g2 count_union  on_g1 on_g2 on_union #>    <chr>        <chr>  <int>    <int>    <int>       <int>  <dbl> <dbl>    <dbl> #>  1 PT001_MNC_B… PT00…     21       54      114         147 38.9   18.4    14.3   #>  2 PT001_MNC_B… PT00…      7       54       28          75 13.0   25       9.33  #>  3 PT001_MNC_B… PT00…      8       54       59         105 14.8   13.6     7.62  #>  4 PT001_MNC_B… PT00…      0       54       98         152  0      0       0     #>  5 PT001_MNC_B… PT00…      1       54       33          86  1.85   3.03    1.16  #>  6 PT001_MNC_B… PT00…      0       54       15          69  0      0       0     #>  7 PT001_MNC_B… PT00…      0       54       18          72  0      0       0     #>  8 PT001_MNC_B… PT00…      7      114       28         135  6.14  25       5.19  #>  9 PT001_MNC_B… PT00…     29      114       59         144 25.4   49.2    20.1   #> 10 PT001_MNC_B… PT00…      1      114       98         211  0.877  1.02    0.474 #> # ℹ 18 more rows #> # ℹ 1 more variable: is_coord <list>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"changing-the-number-of-comparisons","dir":"Articles","previous_headings":"Analysis use-case example: shared integration sites > SCENARIO 1: single input data frame and single grouping key","what":"Changing the number of comparisons","title":"Setting up the workflow and first steps","text":"Changing n_comp 3 means want calculate sharing 3 different groups. Note shared column contains counts integrations shared groups, equivalent set intersection. Beware fact comparisons requested time computation requires.","code":"sharing_1_a <- is_sharing(agg,     group_key = c(         \"SubjectID\", \"CellMarker\",         \"Tissue\", \"TimePoint\"     ),     n_comp = 3,     is_count = TRUE,     relative_is_sharing = TRUE,     minimal = TRUE,     include_self_comp = FALSE,     keep_genomic_coord = TRUE ) sharing_1_a #> # A tibble: 56 × 13 #>    g1      g2    g3    shared count_g1 count_g2 count_g3 count_union on_g1 on_g2 #>    <chr>   <chr> <chr>  <int>    <int>    <int>    <int>       <int> <dbl> <dbl> #>  1 PT001_… PT00… PT00…      5       54      114       28         166  9.26  4.39 #>  2 PT001_… PT00… PT00…      6       54      114       59         175 11.1   5.26 #>  3 PT001_… PT00… PT00…      0       54      114       98         244  0     0    #>  4 PT001_… PT00… PT00…      0       54      114       33         179  0     0    #>  5 PT001_… PT00… PT00…      0       54      114       15         161  0     0    #>  6 PT001_… PT00… PT00…      0       54      114       18         165  0     0    #>  7 PT001_… PT00… PT00…      1       54       28       59         117  1.85  3.57 #>  8 PT001_… PT00… PT00…      0       54       28       98         173  0     0    #>  9 PT001_… PT00… PT00…      0       54       28       33         107  0     0    #> 10 PT001_… PT00… PT00…      0       54       28       15          90  0     0    #> # ℹ 46 more rows #> # ℹ 3 more variables: on_g3 <dbl>, on_union <dbl>, is_coord <list>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"a-case-when-it-is-useful-to-set-minimal-false","dir":"Articles","previous_headings":"Analysis use-case example: shared integration sites > SCENARIO 1: single input data frame and single grouping key","what":"A case when it is useful to set minimal = FALSE","title":"Setting up the workflow and first steps","text":"Setting minimal = FALSE produces possible permutations groups corresponding values. combination include_self_comp = TRUE, useful want know sharing pairs groups plot results heatmap. function sharing_heatmap() automatically plots sharing 2 groups. several arguments function allow us obtain heatmaps absolute sharing values relative (percentage) values.    Beware fact calculating permutations takes longer calculating distinct combinations, therefore don’t need results plotted 2 groups compare stick minimal = TRUE include_self_comp = FALSE.","code":"sharing_1_b <- is_sharing(agg,     group_key = c(         \"SubjectID\", \"CellMarker\",         \"Tissue\", \"TimePoint\"     ),     n_comp = 2,     is_count = TRUE,     relative_is_sharing = TRUE,     minimal = FALSE,     include_self_comp = TRUE ) sharing_1_b #> # A tibble: 64 × 9 #>    g1            g2    shared count_g1 count_g2 count_union on_g1 on_g2 on_union #>    <chr>         <chr>  <int>    <int>    <int>       <int> <dbl> <dbl>    <dbl> #>  1 PT001_MNC_BM… PT00…     54       54       54          54 100   100      100   #>  2 PT001_MNC_BM… PT00…    114      114      114         114 100   100      100   #>  3 PT001_MNC_PB… PT00…     59       59       59          59 100   100      100   #>  4 PT002_MNC_BM… PT00…     98       98       98          98 100   100      100   #>  5 PT002_MNC_PB… PT00…     18       18       18          18 100   100      100   #>  6 PT002_MNC_PB… PT00…     15       15       15          15 100   100      100   #>  7 PT001_MNC_PB… PT00…     28       28       28          28 100   100      100   #>  8 PT002_MNC_BM… PT00…     33       33       33          33 100   100      100   #>  9 PT001_MNC_BM… PT00…     21       54      114         147  38.9  18.4     14.3 #> 10 PT001_MNC_BM… PT00…     21      114       54         147  18.4  38.9     14.3 #> # ℹ 54 more rows heatmaps <- sharing_heatmap(sharing_1_b) heatmaps$absolute heatmaps$on_g1 heatmaps$on_union"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"scenario-2-single-input-data-frame-and-multiple-grouping-keys","dir":"Articles","previous_headings":"Analysis use-case example: shared integration sites > SCENARIO 1: single input data frame and single grouping key","what":"SCENARIO 2: single input data frame and multiple grouping keys","title":"Setting up the workflow and first steps","text":"first scenario, groups homogeneous, , grouped key. scenario want start data contained just one data frame want compare sets integrations grouped differently. give input list keys argument group_keys. things keep mind case: arguments group_key (notice absence plural), n_comp include_self_comp ignored: number comparisons automatically detected counting provided keys self comparison doesn’t make sense since group labels different provide list identical keys just one key fall back scenario 1","code":"sharing_2 <- is_sharing(agg,     group_keys = list(         g1 = c(             \"SubjectID\", \"CellMarker\",             \"Tissue\", \"TimePoint\"         ),         g2 = c(\"SubjectID\", \"CellMarker\"),         g3 = c(\"CellMarker\", \"Tissue\")     ) ) sharing_2 #> # A tibble: 32 × 12 #>    g1    g2    g3    shared count_g1 count_g2 count_g3 count_union  on_g1  on_g2 #>    <chr> <chr> <chr>  <int>    <int>    <int>    <int>       <int>  <dbl>  <dbl> #>  1 PT00… PT00… MNC_…     54       54      186      271         310 100    29.0   #>  2 PT00… PT00… MNC_…     14       54      186      103         211  25.9   7.53  #>  3 PT00… PT00… MNC_…      1       54      137      271         281   1.85  0.730 #>  4 PT00… PT00… MNC_…      0       54      137      103         252   0     0     #>  5 PT00… PT00… MNC_…    114      114      186      271         310 100    61.3   #>  6 PT00… PT00… MNC_…     35      114      186      103         211  30.7  18.8   #>  7 PT00… PT00… MNC_…      2      114      137      271         281   1.75  1.46  #>  8 PT00… PT00… MNC_…      2      114      137      103         292   1.75  1.46  #>  9 PT00… PT00… MNC_…      9       28      186      271         310  32.1   4.84  #> 10 PT00… PT00… MNC_…     28       28      186      103         211 100    15.1   #> # ℹ 22 more rows #> # ℹ 2 more variables: on_g3 <dbl>, on_union <dbl>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"scenario-3-multiple-input-data-frame-and-single-grouping-key","dir":"Articles","previous_headings":"Analysis use-case example: shared integration sites > SCENARIO 1: single input data frame and single grouping key","what":"SCENARIO 3: multiple input data frame and single grouping key","title":"Setting up the workflow and first steps","text":"Providing multiple input data frames grouping key effective way reduce number comparisons performed. Let’s make example: suppose ’re interested comparing groups labelled unique combination SubjectID, CellMarker, Tissue TimePoint, time want first group contain integrations relative PT001_MNC_BM_0030 second group contain integrations relative PT001_MNC_BM_0060. ’re going filter original data frame order obtain relevant data 2 separated tables proceed calling function. arguments n_comp include_self_comp ignored: number comparisons equal number data frames input. handle special limit cases, output group ids appended dash number (-1, -2, …) indicates data frame origin: useful case group ids duplicated inputs. understand better let’s make example: can see, IDs group 1 group 2 duplicated without suffix impossible know one came data frame. way know group “MNC_BM-1” comes table 1 54 ISs, “MNC_BM-2” comes second input table 114 ISs.","code":"first_sample <- agg |>     dplyr::filter(         SubjectID == \"PT001\", CellMarker == \"MNC\", Tissue == \"BM\",         TimePoint == \"0030\"     ) second_sample <- agg |>     dplyr::filter(         SubjectID == \"PT001\", CellMarker == \"MNC\", Tissue == \"BM\",         TimePoint == \"0060\"     ) sharing_3 <- is_sharing(first_sample, second_sample,     group_key = c(         \"SubjectID\", \"CellMarker\",         \"Tissue\", \"TimePoint\"     ),     is_count = TRUE,     relative_is_sharing = TRUE,     minimal = TRUE ) sharing_3 #> # A tibble: 1 × 9 #>   g1             g2    shared count_g1 count_g2 count_union on_g1 on_g2 on_union #>   <chr>          <chr>  <int>    <int>    <int>       <int> <dbl> <dbl>    <dbl> #> 1 PT001_MNC_BM_… PT00…     21       54      114         147  38.9  18.4     14.3 sharing_3_a <- is_sharing(     first_sample, second_sample,     group_key = c(         \"CellMarker\", \"Tissue\"     ),     is_count = TRUE,     relative_is_sharing = TRUE,     minimal = FALSE ) sharing_3_a #> # A tibble: 2 × 9 #>   g1       g2       shared count_g1 count_g2 count_union on_g1 on_g2 on_union #>   <chr>    <chr>     <int>    <int>    <int>       <int> <dbl> <dbl>    <dbl> #> 1 MNC_BM-1 MNC_BM-2     21       54      114         147  38.9  18.4     14.3 #> 2 MNC_BM-2 MNC_BM-1     21      114       54         147  18.4  38.9     14.3"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"scenario-4-multiple-input-data-frame-and-multiple-grouping-keys","dir":"Articles","previous_headings":"Analysis use-case example: shared integration sites > SCENARIO 1: single input data frame and single grouping key","what":"SCENARIO 4: multiple input data frame and multiple grouping keys","title":"Setting up the workflow and first steps","text":"Finally, general scenario multiple data frames multiple keys. case number data frames must equal number provided keys grouping keys applied order ( data frame 1 grouped key 1, data frame 2 grouped key 2, ). Notice example keys g1 g3 , meaning labels groups actually , however remember groups contain different set integration sites since come different data frames.","code":"df1 <- agg |>     dplyr::filter(TimePoint == \"0030\") df2 <- agg |>     dplyr::filter(TimePoint == \"0060\") df3 <- agg |>     dplyr::filter(Tissue == \"BM\")  keys <- list(     g1 = c(\"SubjectID\", \"CellMarker\", \"Tissue\"),     g2 = c(\"SubjectID\", \"Tissue\"),     g3 = c(\"SubjectID\", \"CellMarker\", \"Tissue\") )  sharing_4 <- is_sharing(df1, df2, df3, group_keys = keys) sharing_4 #> # A tibble: 32 × 12 #>    g1      g2    g3    shared count_g1 count_g2 count_g3 count_union on_g1 on_g2 #>    <chr>   <chr> <chr>  <int>    <int>    <int>    <int>       <int> <dbl> <dbl> #>  1 PT001_… PT00… PT00…     21       54      114      147         147 38.9  18.4  #>  2 PT001_… PT00… PT00…      0       54      114      126         271  0     0    #>  3 PT001_… PT00… PT00…      8       54       59      147         175 14.8  13.6  #>  4 PT001_… PT00… PT00…      0       54       59      126         229  0     0    #>  5 PT001_… PT00… PT00…      1       54       33      147         179  1.85  3.03 #>  6 PT001_… PT00… PT00…      1       54       33      126         179  1.85  3.03 #>  7 PT001_… PT00… PT00…      0       54       18      147         165  0     0    #>  8 PT001_… PT00… PT00…      0       54       18      126         185  0     0    #>  9 PT001_… PT00… PT00…      7       28      114      147         166 25     6.14 #> 10 PT001_… PT00… PT00…      0       28      114      126         260  0     0    #> # ℹ 22 more rows #> # ℹ 2 more variables: on_g3 <dbl>, on_union <dbl>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"plotting-sharing-results","dir":"Articles","previous_headings":"Analysis use-case example: shared integration sites","what":"Plotting sharing results","title":"Setting up the workflow and first steps","text":"2 comparisons convenient plot venn euler diagrams. ISAnalytics fast way functions is_sharing() sharing_venn(). argument table_for_venn = TRUE add new column truth_tbl_venn contains corresponding truth tables row. Say ’re interested plotting just first row sharing data frame. can call function sharing_venn specify row_range argument index 1. Note function requires package eulerr work. argument euler indicates function produce euler venn diagrams instead. obtained lists euler/venn objects can plot simply calling function plot():   several options can set, please refer eulerr docs.","code":"sharing_5 <- is_sharing(agg,     group_keys = list(         g1 = c(             \"SubjectID\", \"CellMarker\",             \"Tissue\", \"TimePoint\"         ),         g2 = c(\"SubjectID\", \"CellMarker\"),         g3 = c(\"CellMarker\", \"Tissue\")     ), table_for_venn = TRUE ) sharing_5 #> # A tibble: 32 × 13 #>    g1    g2    g3    shared count_g1 count_g2 count_g3 count_union  on_g1  on_g2 #>    <chr> <chr> <chr>  <int>    <int>    <int>    <int>       <int>  <dbl>  <dbl> #>  1 PT00… PT00… MNC_…     54       54      186      271         310 100    29.0   #>  2 PT00… PT00… MNC_…     14       54      186      103         211  25.9   7.53  #>  3 PT00… PT00… MNC_…      1       54      137      271         281   1.85  0.730 #>  4 PT00… PT00… MNC_…      0       54      137      103         252   0     0     #>  5 PT00… PT00… MNC_…    114      114      186      271         310 100    61.3   #>  6 PT00… PT00… MNC_…     35      114      186      103         211  30.7  18.8   #>  7 PT00… PT00… MNC_…      2      114      137      271         281   1.75  1.46  #>  8 PT00… PT00… MNC_…      2      114      137      103         292   1.75  1.46  #>  9 PT00… PT00… MNC_…      9       28      186      271         310  32.1   4.84  #> 10 PT00… PT00… MNC_…     28       28      186      103         211 100    15.1   #> # ℹ 22 more rows #> # ℹ 3 more variables: on_g3 <dbl>, on_union <dbl>, truth_tbl_venn <list> sharing_plots1 <- sharing_venn(sharing_5, row_range = 1, euler = TRUE) sharing_plots2 <- sharing_venn(sharing_5, row_range = 1, euler = FALSE) plot(sharing_plots1[[1]]) plot(sharing_plots2[[1]])"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"reproducibility","dir":"Articles","previous_headings":"","what":"Reproducibility","title":"Setting up the workflow and first steps","text":"R session information.","code":"#> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.0 (2023-04-21) #>  os       Ubuntu 22.04.2 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2023-05-09 #>  pandoc   2.19.2 @ /usr/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package       * version date (UTC) lib source #>  backports       1.4.1   2021-12-13 [1] RSPM #>  bibtex          0.5.1   2023-01-26 [1] RSPM #>  BiocManager     1.30.20 2023-02-24 [1] RSPM #>  BiocParallel    1.34.1  2023-05-05 [1] Bioconductor #>  BiocStyle     * 2.28.0  2023-04-25 [1] Bioconductor #>  bit             4.0.5   2022-11-15 [1] RSPM #>  bit64           4.0.5   2020-08-30 [1] RSPM #>  bookdown        0.33    2023-03-06 [1] RSPM #>  bslib           0.4.2   2022-12-16 [1] RSPM #>  cachem          1.0.8   2023-05-01 [1] RSPM #>  cellranger      1.1.0   2016-07-27 [1] RSPM #>  cli             3.6.1   2023-03-23 [1] RSPM #>  codetools       0.2-19  2023-02-01 [3] CRAN (R 4.3.0) #>  colorspace      2.1-0   2023-01-23 [1] RSPM #>  crayon          1.5.2   2022-09-29 [1] RSPM #>  crosstalk       1.2.0   2021-11-04 [1] RSPM #>  curl            5.0.0   2023-01-12 [1] RSPM #>  data.table      1.14.8  2023-02-17 [1] RSPM #>  datamods        1.4.0   2022-11-24 [1] RSPM #>  desc            1.4.2   2022-09-08 [1] RSPM #>  digest          0.6.31  2022-12-11 [1] RSPM #>  doFuture        1.0.0   2023-03-24 [1] RSPM #>  dplyr           1.1.2   2023-04-20 [1] RSPM #>  DT            * 0.27    2023-01-17 [1] RSPM #>  ellipsis        0.3.2   2021-04-29 [1] RSPM #>  eulerr          7.0.0   2022-12-10 [1] RSPM #>  evaluate        0.21    2023-05-05 [1] RSPM #>  fansi           1.0.4   2023-01-22 [1] RSPM #>  farver          2.1.1   2022-07-06 [1] RSPM #>  fastmap         1.1.1   2023-02-24 [1] RSPM #>  forcats         1.0.0   2023-01-29 [1] RSPM #>  foreach         1.5.2   2022-02-02 [1] RSPM #>  foreign         0.8-84  2022-12-06 [3] CRAN (R 4.3.0) #>  fs              1.6.2   2023-04-25 [1] RSPM #>  future          1.32.0  2023-03-07 [1] RSPM #>  future.apply    1.10.0  2022-11-05 [1] RSPM #>  generics        0.1.3   2022-07-05 [1] RSPM #>  ggplot2         3.4.2   2023-04-03 [1] RSPM #>  globals         0.16.2  2022-11-21 [1] RSPM #>  glue            1.6.2   2022-02-24 [1] RSPM #>  gtable          0.3.3   2023-03-21 [1] RSPM #>  gtools          3.9.4   2022-11-27 [1] RSPM #>  haven           2.5.2   2023-02-28 [1] RSPM #>  highr           0.10    2022-12-22 [1] RSPM #>  hms             1.1.3   2023-03-21 [1] RSPM #>  htmltools       0.5.5   2023-03-23 [1] RSPM #>  htmlwidgets     1.6.2   2023-03-17 [1] RSPM #>  httpuv          1.6.9   2023-02-14 [1] RSPM #>  httr            1.4.5   2023-02-24 [1] RSPM #>  ISAnalytics   * 1.11.1  2023-05-09 [1] local #>  iterators       1.0.14  2022-02-05 [1] RSPM #>  jquerylib       0.1.4   2021-04-26 [1] RSPM #>  jsonlite        1.8.4   2022-12-06 [1] RSPM #>  knitr           1.42    2023-01-25 [1] RSPM #>  later           1.3.1   2023-05-02 [1] RSPM #>  lattice         0.21-8  2023-04-05 [3] CRAN (R 4.3.0) #>  lifecycle       1.0.3   2022-10-07 [1] RSPM #>  listenv         0.9.0   2022-12-16 [1] RSPM #>  lubridate       1.9.2   2023-02-10 [1] RSPM #>  magrittr        2.0.3   2022-03-30 [1] RSPM #>  memoise         2.0.1   2021-11-26 [1] RSPM #>  mime            0.12    2021-09-28 [1] RSPM #>  mnormt          2.1.1   2022-09-26 [1] RSPM #>  munsell         0.5.0   2018-06-12 [1] RSPM #>  nlme            3.1-162 2023-01-31 [3] CRAN (R 4.3.0) #>  openxlsx        4.2.5.2 2023-02-06 [1] RSPM #>  parallelly      1.35.0  2023-03-23 [1] RSPM #>  phosphoricons   0.1.2   2022-04-11 [1] RSPM #>  pillar          1.9.0   2023-03-22 [1] RSPM #>  pkgconfig       2.0.3   2019-09-22 [1] RSPM #>  pkgdown         2.0.7   2022-12-14 [1] any (@2.0.7) #>  plyr            1.8.8   2022-11-11 [1] RSPM #>  polyclip        1.10-4  2022-10-20 [1] RSPM #>  polylabelr      0.2.0   2020-04-19 [1] RSPM #>  progressr       0.13.0  2023-01-10 [1] RSPM #>  promises        1.2.0.1 2021-02-11 [1] RSPM #>  psych           2.3.3   2023-03-18 [1] RSPM #>  purrr           1.0.1   2023-01-10 [1] RSPM #>  R.methodsS3     1.8.2   2022-06-13 [1] RSPM #>  R.oo            1.25.0  2022-06-12 [1] RSPM #>  R.utils         2.12.2  2022-11-11 [1] RSPM #>  R6              2.5.1   2021-08-19 [1] RSPM #>  ragg            1.2.5   2023-01-12 [1] RSPM #>  Rcpp            1.0.10  2023-01-22 [1] RSPM #>  reactable       0.4.4   2023-03-12 [1] RSPM #>  readr           2.1.4   2023-02-10 [1] RSPM #>  readxl          1.4.2   2023-02-09 [1] RSPM #>  RefManageR    * 1.4.0   2022-09-30 [1] RSPM #>  rio             0.5.29  2021-11-22 [1] RSPM #>  rlang           1.1.1   2023-04-28 [1] RSPM #>  rmarkdown       2.21    2023-03-26 [1] RSPM #>  rprojroot       2.0.3   2022-04-02 [1] RSPM #>  sass            0.4.6   2023-05-03 [1] RSPM #>  scales          1.2.1   2022-08-20 [1] RSPM #>  sessioninfo   * 1.2.2   2021-12-06 [1] RSPM #>  shiny           1.7.4   2022-12-15 [1] RSPM #>  shinybusy       0.3.1   2022-05-10 [1] RSPM #>  shinyWidgets    0.7.6   2023-01-08 [1] RSPM #>  stringi         1.7.12  2023-01-11 [1] RSPM #>  stringr         1.5.0   2022-12-02 [1] RSPM #>  systemfonts     1.0.4   2022-02-11 [1] RSPM #>  textshaping     0.3.6   2021-10-13 [1] RSPM #>  tibble          3.2.1   2023-03-20 [1] RSPM #>  tidyr           1.3.0   2023-01-24 [1] RSPM #>  tidyselect      1.2.0   2022-10-10 [1] RSPM #>  timechange      0.2.0   2023-01-11 [1] RSPM #>  tzdb            0.3.0   2022-03-28 [1] RSPM #>  utf8            1.2.3   2023-01-31 [1] RSPM #>  vctrs           0.6.2   2023-04-19 [1] RSPM #>  vroom           1.6.3   2023-04-28 [1] RSPM #>  withr           2.5.0   2022-03-03 [1] RSPM #>  writexl         1.4.2   2023-01-06 [1] RSPM #>  xfun            0.39    2023-04-20 [1] RSPM #>  xml2            1.3.4   2023-04-27 [1] RSPM #>  xtable          1.8-4   2019-04-21 [1] RSPM #>  yaml            2.3.7   2023-01-23 [1] RSPM #>  zip             2.3.0   2023-04-17 [1] RSPM #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.3.0/lib/R/site-library #>  [3] /opt/R/4.3.0/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/articles/workflow_start.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"Setting up the workflow and first steps","text":"vignette generated using BiocStyle (Oleś, 2023) knitr (Xie, 2023) rmarkdown (Allaire, Xie, Dervieux, McPherson, Luraschi, Ushey, Atkins, Wickham, Cheng, Chang, Iannone, 2023) running behind scenes. Citations made RefManageR (McLean, 2017). [1] J. Allaire, Y. Xie, C. Dervieux, et al. rmarkdown: Dynamic Documents R. R package version 2.21. 2023. URL: https://github.com/rstudio/rmarkdown. [2] S. B. Giulio Spinozzi Andrea Calabria. “VISPA2: scalable pipeline high-throughput identification annotation vector integration sites”. : BMC Bioinformatics (Nov. 25, 2017). DOI: 10.1186/s12859-017-1937-9. [3] M. W. McLean. “RefManageR: Import Manage BibTeX BibLaTeX References R”. : Journal Open Source Software (2017). DOI: 10.21105/joss.00338. [4] . Oleś. BiocStyle: Standard styles vignettes Bioconductor documents. R package version 2.28.0. 2023. DOI: 10.18129/B9.bioc.BiocStyle. URL: https://bioconductor.org/packages/BiocStyle. [5] Y. Xie. knitr: General-Purpose Package Dynamic Report Generation R. R package version 1.42. 2023. URL: https://yihui.org/knitr/.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Giulia Pais. Author, maintainer. Andrea Calabria. Author. Giulio Spinozzi. Author.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Andrea C, Giulio S, Giulia P (2023). Analyze gene therapy vector insertion sites data identified genomics next generation sequencing reads clonal tracking studies. doi:10.18129/B9.bioc.ISAnalytics, https://github.com/calabrialab/ISAnalytics - R package version 1.11.1, http://www.bioconductor.org/packages/ISAnalytics. Giulia P, Giulio S, Eugenio M, Andrea C (2022). “ISAnalytics enables longitudinal high-throughput clonal tracking studies hematopoietic stem cell gene therapy applications.” Briefings Bioinformatics, 24(1). ISSN -2577, doi:10.1093/bib/bbac551, https://academic.oup.com/bib/article-pdf/24/1/bbac551/48782955/bbac551.pdf, https://doi.org/10.1093/bib/bbac551.","code":"@Manual{,   title = {Analyze gene therapy vector insertion sites data identified from genomics next generation sequencing reads for clonal tracking studies},   author = {Calabria Andrea and Spinozzi Giulio and Pais Giulia},   year = {2023},   url = {http://www.bioconductor.org/packages/ISAnalytics},   note = {https://github.com/calabrialab/ISAnalytics - R package version 1.11.1},   doi = {10.18129/B9.bioc.ISAnalytics}, } @Article{,   title = {ISAnalytics enables longitudinal and high-throughput clonal tracking studies in hematopoietic stem cell gene therapy applications},   author = {Pais Giulia and Spinozzi Giulio and Montini Eugenio and Calabria Andrea},   year = {2022},   journal = {Briefings in Bioinformatics},   volume = {24},   number = {1},   doi = {10.1093/bib/bbac551},   url = {https://doi.org/10.1093/bib/bbac551},   abstract = {Longitudinal clonal tracking studies based on high-throughput sequencing technologies supported safety and long-term efficacy and unraveled hematopoietic reconstitution in many gene therapy applications with unprecedented resolution. However, monitoring patients over a decade-long follow-up entails a constant increase of large data volume with the emergence of critical computational challenges, unfortunately not addressed by currently available tools. Here we present ISAnalytics, a new R package for comprehensive and high-throughput clonal tracking studies using vector integration sites as markers of cellular identity. Once identified the clones externally from ISAnalytics and imported in the package, a wide range of implemented functionalities are available to users for assessing the safety and long-term efficacy of the treatment, here described in a clinical trial use case for Hurler disease, and for supporting hematopoietic stem cell biology in vivo with longitudinal analysis of clones over time, proliferation and differentiation. ISAnalytics is conceived to be metadata-driven, enabling users to focus on biological questions and hypotheses rather than on computational aspects. ISAnalytics can be fully integrated within laboratory workflows and standard procedures. Moreover, ISAnalytics is designed with efficient and scalable data structures, benchmarked with previous methods, and grants reproducibility and full analytical control through interactive web-reports and a module with Shiny interface. The implemented functionalities are flexible for all viral vector-based clonal tracking applications as well as genetic barcoding or cancer immunotherapies.},   issn = {-2577},   eprint = {https://academic.oup.com/bib/article-pdf/24/1/bbac551/48782955/bbac551.pdf}, }"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/index.html","id":"isanalytics-","dir":"","previous_headings":"","what":"Analyze gene therapy vector insertion sites data identified from genomics next generation sequencing reads for clonal tracking studies","title":"Analyze gene therapy vector insertion sites data identified from genomics next generation sequencing reads for clonal tracking studies","text":"ISAnalytics R package developed analyze gene therapy vector insertion sites data identified genomics next generation sequencing reads clonal tracking studies. gene therapy, stem cells modified using viral vectors deliver therapeutic transgene replace functional properties since genetic modification stable inherited cell progeny. retrieval mapping sequences flanking virus-host DNA junctions allows identification insertion sites (), essential monitoring evolution genetically modified cells vivo. comprehensive toolkit analysis required foster clonal trackign studies supporting assessment safety long term efficacy vivo. package aimed (1) supporting automation workflow, (2) performing base advance analysis tracking (clonal abundance, clonal expansions statistics insertional mutagenesis, etc.), (3) providing basic biology insights transduced stem cells vivo.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/index.html","id":"installation-and-options","dir":"","previous_headings":"","what":"Installation and options","title":"Analyze gene therapy vector insertion sites data identified from genomics next generation sequencing reads for clonal tracking studies","text":"ISAnalytics can installed quickly different ways: can install via Bioconductor can install via GitHub using package devtools always 2 versions package active: RELEASE latest stable version DEVEL development version, --date version new features introduced","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/index.html","id":"installation-from-bioconductor","dir":"","previous_headings":"","what":"Installation from bioconductor","title":"Analyze gene therapy vector insertion sites data identified from genomics next generation sequencing reads for clonal tracking studies","text":"RELEASE version: DEVEL version:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") BiocManager::install(\"ISAnalytics\") if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") # The following initializes usage of Bioc devel BiocManager::install(version='devel') BiocManager::install(\"ISAnalytics\")"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/index.html","id":"installation-from-github","dir":"","previous_headings":"","what":"Installation from GitHub","title":"Analyze gene therapy vector insertion sites data identified from genomics next generation sequencing reads for clonal tracking studies","text":"RELEASE: DEVEL:","code":"if (!require(devtools)) {   install.packages(\"devtools\") } devtools::install_github(\"calabrialab/ISAnalytics\",                          ref = \"RELEASE_3_17\",                          dependencies = TRUE,                          build_vignettes = TRUE) if (!require(devtools)) {   install.packages(\"devtools\") } devtools::install_github(\"calabrialab/ISAnalytics\",                          ref = \"devel\",                          dependencies = TRUE,                          build_vignettes = TRUE)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/index.html","id":"setting-options","dir":"","previous_headings":"","what":"Setting options","title":"Analyze gene therapy vector insertion sites data identified from genomics next generation sequencing reads for clonal tracking studies","text":"ISAnalytics verbose option allows functions print additional information console ’re executing. disable feature : functions also produce report user-friendly HTML format, set feature:","code":"# DISABLE options(\"ISAnalytics.verbose\" = FALSE) # ENABLE options(\"ISAnalytics.verbose\" = TRUE) # DISABLE HTML REPORTS options(\"ISAnalytics.reports\" = FALSE) # ENABLE HTML REPORTS options(\"ISAnalytics.reports\" = TRUE)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Analyze gene therapy vector insertion sites data identified from genomics next generation sequencing reads for clonal tracking studies","text":"help please contact maintainer package open issue GitHub.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_grubbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Grubbs test for Common Insertion Sites (CIS). — CIS_grubbs","title":"Grubbs test for Common Insertion Sites (CIS). — CIS_grubbs","text":"Statistical approach validation common insertion sites significance based comparison integration frequency CIS gene respect genes contained surrounding genomic regions. details please refer paper: https://ashpublications.org/blood/article/117/20/5332/21206/Lentiviral-vector-common-integration-sites-","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_grubbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grubbs test for Common Insertion Sites (CIS). — CIS_grubbs","text":"","code":"CIS_grubbs(   x,   genomic_annotation_file = \"hg19\",   grubbs_flanking_gene_bp = 1e+05,   threshold_alpha = 0.05,   by = NULL,   return_missing_as_df = TRUE,   results_as_list = TRUE )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_grubbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grubbs test for Common Insertion Sites (CIS). — CIS_grubbs","text":"x integration matrix, must include mandatory_IS_vars() columns annotation_IS_vars() columns genomic_annotation_file Database file gene annotation, see details. grubbs_flanking_gene_bp Number base pairs flanking gene threshold_alpha Significance threshold Either NULL character vector column names. NULL, function perform calculations group return list data frames results. E.g. = \"SubjectID\", CIS computed distinct SubjectID found table (\"SubjectID\" column must included input data frame). return_missing_as_df Returns genes present input df refgenes data frame? results_as_list TRUE return group computations named list, otherwise return single df additional column containing group id","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_grubbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grubbs test for Common Insertion Sites (CIS). — CIS_grubbs","text":"data frame","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_grubbs.html","id":"genomic-annotation-file","dir":"Reference","previous_headings":"","what":"Genomic annotation file","title":"Grubbs test for Common Insertion Sites (CIS). — CIS_grubbs","text":"data frame containing genes annotation specific genome. version 1.5.4 argument genomic_annotation_file accepts data frames package provided defaults. user responsible importing appropriate tabular files customization needed. annotations human genome (hg19) murine genome (mm9) already included package: use one just set argument genomic_annotation_file either \"hg19\" \"mm9\". reason user performing analysis another genome, file needs changed respecting USCS Genome Browser format, meaning input file headers include: name2, chrom, strand, min_txStart, max_txEnd, minmax_TxLen, average_TxLen, name, min_cdsStart, max_cdsEnd, minmax_CdsLen, average_CdsLen","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_grubbs.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Grubbs test for Common Insertion Sites (CIS). — CIS_grubbs","text":"function explicitly check presence tags: chromosome locus is_strand gene_symbol gene_strand","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_grubbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grubbs test for Common Insertion Sites (CIS). — CIS_grubbs","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") cis <- CIS_grubbs(integration_matrices) #> Warning: Warning: missing genes in refgenes table #> ℹ A total of 5 genes were found in the input data but not in the refgene table. This may be caused by a mismatch in the annotation phase of the matrix. Here is a summary:  #>     GeneName GeneStrand chr #> 1:    CRELD2          -  15 #> 2:      HTR4          +   6 #> 3:    UBE2D2          +  16 #> 4: LINC01133          +  19 #> 5:  PLEKHG4B          -  14 #> ℹ NOTE: missing genes will be removed from the final output! Review results carefully #> ℹ A total of 25 IS will be removed because of missing genes ( 1.48 % of total IS in input) cis #> $missing_genes #>     GeneName GeneStrand chr #> 1:    CRELD2          -  15 #> 2:      HTR4          +   6 #> 3:    UBE2D2          +  16 #> 4: LINC01133          +  19 #> 5:  PLEKHG4B          -  14 #>  #> $missing_is #> $missing_is$absolute #> [1] 25 #>  #> $missing_is$perc #> [1] 1.48 #>  #>  #> $cis #> # A tibble: 501 × 37 #>    GeneName GeneStrand chr       n       mean    sd  median trimmed   mad    min #>    <chr>    <chr>      <chr> <int>      <dbl> <dbl>   <dbl>   <dbl> <dbl>  <dbl> #>  1 ABHD16A  -          6         3  31654876     0   3.17e7  3.17e7    0  3.17e7 #>  2 ABHD2    +          15        3  89642998     0   8.96e7  8.96e7    0  8.96e7 #>  3 ACAP2    -          3         2 195107772     0   1.95e8  1.95e8    0  1.95e8 #>  4 ACOX1    -          17       10  73960093. 8844.  7.40e7  7.40e7 4236. 7.40e7 #>  5 ACSM3    +          16        4  20777188     0   2.08e7  2.08e7    0  2.08e7 #>  6 ADD1     +          4         8   2865706. 6694.  2.87e6  2.87e6 8804. 2.86e6 #>  7 ADGRA3   -          4         2  22505019     0   2.25e7  2.25e7    0  2.25e7 #>  8 ADGRB3   +          6         4  69397949     0   6.94e7  6.94e7    0  6.94e7 #>  9 ADGRG3   +          16        3  57716345     0   5.77e7  5.77e7    0  5.77e7 #> 10 AHR      +          7         2  17227687     0   1.72e7  1.72e7    0  1.72e7 #> # ℹ 491 more rows #> # ℹ 27 more variables: max <dbl>, range <dbl>, skew <dbl>, kurtosis <dbl>, #> #   n_IS_perGene <int>, min_bp_integration_locus <dbl>, #> #   max_bp_integration_locus <dbl>, IS_span_bp <dbl>, #> #   avg_bp_integration_locus <dbl>, median_bp_integration_locus <dbl>, #> #   distinct_orientations <int>, average_TxLen <dbl>, #> #   raw_gene_integration_frequency <dbl>, … #>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_grubbs_overtime.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute CIS and Grubbs test over different time points and groups. — CIS_grubbs_overtime","title":"Compute CIS and Grubbs test over different time points and groups. — CIS_grubbs_overtime","text":"Computes common insertion sites Grubbs test separate group separating different time points among group. logic applied function CIS_grubbs().","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_grubbs_overtime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute CIS and Grubbs test over different time points and groups. — CIS_grubbs_overtime","text":"","code":"CIS_grubbs_overtime(   x,   genomic_annotation_file = \"hg19\",   grubbs_flanking_gene_bp = 1e+05,   threshold_alpha = 0.05,   group = \"SubjectID\",   timepoint_col = \"TimePoint\",   as_df = TRUE,   return_missing_as_df = TRUE,   max_workers = NULL )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_grubbs_overtime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute CIS and Grubbs test over different time points and groups. — CIS_grubbs_overtime","text":"x integration matrix, must include mandatory_IS_vars() columns annotation_IS_vars() columns genomic_annotation_file Database file gene annotation, see details. grubbs_flanking_gene_bp Number base pairs flanking gene threshold_alpha Significance threshold group character vector column names identifies group. group must contain one time points. timepoint_col name column containing time points? as_df Choose result format: TRUE results returned single data frame containing column group id column time point, FALSE results returned form nested lists (one table time point group), \"group\" results returned list separated group containing single table time points. return_missing_as_df Returns genes present input df refgenes data frame? max_workers Maximum number parallel workers. NULL maximum number workers calculated automatically.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_grubbs_overtime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute CIS and Grubbs test over different time points and groups. — CIS_grubbs_overtime","text":"list results optionally missing genes info","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_grubbs_overtime.html","id":"genomic-annotation-file","dir":"Reference","previous_headings":"","what":"Genomic annotation file","title":"Compute CIS and Grubbs test over different time points and groups. — CIS_grubbs_overtime","text":"data frame containing genes annotation specific genome. version 1.5.4 argument genomic_annotation_file accepts data frames package provided defaults. user responsible importing appropriate tabular files customization needed. annotations human genome (hg19) murine genome (mm9) already included package: use one just set argument genomic_annotation_file either \"hg19\" \"mm9\". reason user performing analysis another genome, file needs changed respecting USCS Genome Browser format, meaning input file headers include: name2, chrom, strand, min_txStart, max_txEnd, minmax_TxLen, average_TxLen, name, min_cdsStart, max_cdsEnd, minmax_CdsLen, average_CdsLen","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_grubbs_overtime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute CIS and Grubbs test over different time points and groups. — CIS_grubbs_overtime","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) cis_overtime <- CIS_grubbs_overtime(aggreg) #> Warning: Warning: missing genes in refgenes table #> ℹ A total of 5 genes were found in the input data but not in the refgene table. This may be caused by a mismatch in the annotation phase of the matrix. Here is a summary:  #> # A tibble: 5 × 3 #>   GeneName  GeneStrand chr   #>   <chr>     <chr>      <chr> #> 1 PLEKHG4B  -          14    #> 2 CRELD2    -          15    #> 3 UBE2D2    +          16    #> 4 LINC01133 +          19    #> 5 HTR4      +          6     #> ℹ NOTE: missing genes will be removed from the final output! Review results carefully #> ℹ A total of 25 IS will be removed because of missing genes ( 2.33 % of total IS in input) cis_overtime #> $missing_genes #> # A tibble: 5 × 3 #>   GeneName  GeneStrand chr   #>   <chr>     <chr>      <chr> #> 1 PLEKHG4B  -          14    #> 2 CRELD2    -          15    #> 3 UBE2D2    +          16    #> 4 LINC01133 +          19    #> 5 HTR4      +          6     #>  #> $missing_is #> $missing_is$absolute #> [1] 25 #>  #> $missing_is$perc #> [1] 2.33 #>  #>  #> $cis #> # A tibble: 932 × 39 #>    GeneName GeneStrand chr       n      mean    sd   median trimmed   mad    min #>    <chr>    <chr>      <chr> <int>     <dbl> <dbl>    <dbl>   <dbl> <dbl>  <dbl> #>  1 ABHD2    +          15        1  89642998    NA   8.96e7  8.96e7     0 8.96e7 #>  2 ACAP2    -          3         1 195107772    NA   1.95e8  1.95e8     0 1.95e8 #>  3 ACOX1    -          17        1  73953431    NA   7.40e7  7.40e7     0 7.40e7 #>  4 ADD1     +          4         1   2859237    NA   2.86e6  2.86e6     0 2.86e6 #>  5 ANKEF1   +          20        1  10028583    NA   1.00e7  1.00e7     0 1.00e7 #>  6 ANKRD52  -          12        1  56647382    NA   5.66e7  5.66e7     0 5.66e7 #>  7 ASAP1    -          8         1 131310762    NA   1.31e8  1.31e8     0 1.31e8 #>  8 ATF1     +          12        1  51189341    NA   5.12e7  5.12e7     0 5.12e7 #>  9 ATF7     -          12        1  53987984    NA   5.40e7  5.40e7     0 5.40e7 #> 10 C6orf106 -          6         1  34643226    NA   3.46e7  3.46e7     0 3.46e7 #> # ℹ 922 more rows #> # ℹ 29 more variables: max <dbl>, range <dbl>, skew <dbl>, kurtosis <dbl>, #> #   n_IS_perGene <int>, min_bp_integration_locus <dbl>, #> #   max_bp_integration_locus <dbl>, IS_span_bp <dbl>, #> #   avg_bp_integration_locus <dbl>, median_bp_integration_locus <dbl>, #> #   distinct_orientations <int>, average_TxLen <dbl>, #> #   raw_gene_integration_frequency <dbl>, … #>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_volcano_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Trace volcano plot for computed CIS data. — CIS_volcano_plot","title":"Trace volcano plot for computed CIS data. — CIS_volcano_plot","text":"Traces volcano plot frequency CIS results.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_volcano_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trace volcano plot for computed CIS data. — CIS_volcano_plot","text":"","code":"CIS_volcano_plot(   x,   onco_db_file = \"proto_oncogenes\",   tumor_suppressors_db_file = \"tumor_suppressors\",   species = \"human\",   known_onco = known_clinical_oncogenes(),   suspicious_genes = clinical_relevant_suspicious_genes(),   significance_threshold = 0.05,   annotation_threshold_ontots = 0.1,   highlight_genes = NULL,   title_prefix = NULL,   return_df = FALSE )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_volcano_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trace volcano plot for computed CIS data. — CIS_volcano_plot","text":"x Either simple integration matrix data frame resulting call CIS_grubbs add_standard_padjust = TRUE onco_db_file Uniprot file proto-oncogenes (see details). different default, supplied path file. tumor_suppressors_db_file Uniprot file tumor-suppressor genes. different default, supplied path file. species One \"human\", \"mouse\" \"\" known_onco Data frame known oncogenes. See details. suspicious_genes Data frame clinical relevant suspicious genes. See details. significance_threshold significance threshold annotation_threshold_ontots Value genes annotated colorful labels highlight_genes Either NULL character vector genes highlighted plot even threshold title_prefix string character vector displayed title - usually project name characterizing info. vector supplied, concatenated single string via paste() return_df Return data frame used generate plot? can useful user wants manually modify plot ggplot2. TRUE function returns list containing plot data frame.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_volcano_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trace volcano plot for computed CIS data. — CIS_volcano_plot","text":"plot list containing plot data frame","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_volcano_plot.html","id":"input-data-frame","dir":"Reference","previous_headings":"","what":"Input data frame","title":"Trace volcano plot for computed CIS data. — CIS_volcano_plot","text":"Users can supply x either simple integration matrix data frame resulting call CIS_grubbs. first case internal call function CIS_grubbs() performed.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_volcano_plot.html","id":"oncogene-and-tumor-suppressor-genes-files","dir":"Reference","previous_headings":"","what":"Oncogene and tumor suppressor genes files","title":"Trace volcano plot for computed CIS data. — CIS_volcano_plot","text":"files included package user convenience simply UniProt files gene annotations human mouse. details files generated use help ?tumor_suppressors, ?proto_oncogenes","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_volcano_plot.html","id":"known-oncogenes","dir":"Reference","previous_headings":"","what":"Known oncogenes","title":"Trace volcano plot for computed CIS data. — CIS_volcano_plot","text":"default values included package can accessed :   user wants change parameter input data frame must preserve column structure. goes suspicious_genes parameter (DOIReference column optional):","code":"known_clinical_oncogenes() clinical_relevant_suspicious_genes()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_volcano_plot.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Trace volcano plot for computed CIS data. — CIS_volcano_plot","text":"function explicitly check presence tags: gene_symbol","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/CIS_volcano_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trace volcano plot for computed CIS data. — CIS_volcano_plot","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") cis_plot <- CIS_volcano_plot(integration_matrices,     title_prefix = \"PJ01\" ) #> Calculating CIS_grubbs for x... #> Warning: Warning: missing genes in refgenes table #> ℹ A total of 5 genes were found in the input data but not in the refgene table. This may be caused by a mismatch in the annotation phase of the matrix. Here is a summary:  #>     GeneName GeneStrand chr #> 1:    CRELD2          -  15 #> 2:      HTR4          +   6 #> 3:    UBE2D2          +  16 #> 4: LINC01133          +  19 #> 5:  PLEKHG4B          -  14 #> ℹ NOTE: missing genes will be removed from the final output! Review results carefully #> ℹ A total of 25 IS will be removed because of missing genes ( 1.48 % of total IS in input) #> Loading annotated genes -  species selected:  #> • Homo sapiens (Human) #> Loading annotated genes -  done cis_plot"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of the estimated HSC population size for each patient. — HSC_population_plot","title":"Plot of the estimated HSC population size for each patient. — HSC_population_plot","text":"Plot estimated HSC population size patient.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of the estimated HSC population size for each patient. — HSC_population_plot","text":"","code":"HSC_population_plot(   estimates,   project_name,   timepoints = \"Consecutive\",   models = \"Mth Chao (LB)\" )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of the estimated HSC population size for each patient. — HSC_population_plot","text":"estimates estimates data frame, obtained via HSC_population_size_estimate project_name project name, included plot title timepoints time points plot? One \"\", \"Stable\" \"Consecutive\" models Name models plot (appear column estimates)","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of the estimated HSC population size for each patient. — HSC_population_plot","text":"plot","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of the estimated HSC population size for each patient. — HSC_population_plot","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) aggreg_meta <- aggregate_metadata(     association_file = association_file ) estimate <- HSC_population_size_estimate(     x = aggreg,     metadata = aggreg_meta,     stable_timepoints = c(90, 180, 360),     cell_type = \"Other\" ) #> Calculating number of IS for each group... p <- HSC_population_plot(estimate$est, \"PJ01\") p"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_size_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Hematopoietic stem cells population size estimate. — HSC_population_size_estimate","title":"Hematopoietic stem cells population size estimate. — HSC_population_size_estimate","text":"Hematopoietic stem cells population size estimate capture-recapture models.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_size_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hematopoietic stem cells population size estimate. — HSC_population_size_estimate","text":"","code":"HSC_population_size_estimate(   x,   metadata,   stable_timepoints = NULL,   aggregation_key = c(\"SubjectID\", \"CellMarker\", \"Tissue\", \"TimePoint\"),   blood_lineages = blood_lineages_default(),   timepoint_column = \"TimePoint\",   seqCount_column = \"seqCount_sum\",   fragmentEstimate_column = \"fragmentEstimate_sum\",   seqCount_threshold = 3,   fragmentEstimate_threshold = 3,   nIS_threshold = 5,   cell_type = \"MYELOID\",   tissue_type = \"PB\",   max_workers = 4 )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_size_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hematopoietic stem cells population size estimate. — HSC_population_size_estimate","text":"x aggregated integration matrix. See details. metadata aggregated association file. See details. stable_timepoints numeric vector NULL stable time points. NOTE: vector intended sequence min-max, every stable time point specified individually aggregation_key character vector indicating key used aggregating x metadata. Note x metadata always aggregated key. blood_lineages data frame containing information blood lineages. Users can supply , provided columns CellMarker CellType present. timepoint_column name time point column use? Note column must present key. seqCount_column name column x containing values sequence count quantification? fragmentEstimate_column name column x containing values fragment estimate quantification? fragment estimate present matrix, param set NULL. seqCount_threshold single numeric value. re-aggregating x, rows value greater equal kept, others discarded. fragmentEstimate_threshold single numeric value. Threshold value fragment estimate, see details. nIS_threshold single numeric value. group (row) metadata data frame count distinct integration sites strictly greater number kept, otherwise discarded. cell_type cell types include models. Note matching case-insensitive. tissue_type tissue types include models. Note matching case-insensitive. max_workers Maximum parallel workers allowed","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_size_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hematopoietic stem cells population size estimate. — HSC_population_size_estimate","text":"data frame results estimates","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_size_estimate.html","id":"input-formats","dir":"Reference","previous_headings":"","what":"Input formats","title":"Hematopoietic stem cells population size estimate. — HSC_population_size_estimate","text":"x metadata supplied function aggregated format (ideally use aggregate_metadata aggregate_values_by_key). Note aggregation_key, aka vector column names used aggregation, must contain least columns associated tags subject, cell_marker, tissue time point column (user can specify name column argument timepoint_column).","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_size_estimate.html","id":"specifying-more-than-one-group","dir":"Reference","previous_headings":"","what":"Specifying more than one group","title":"Hematopoietic stem cells population size estimate. — HSC_population_size_estimate","text":"Groups estimates computed pair cell type tissue. user wishes compute estimates one combination cell type tissue, possible specify character vectors fields cell_type tissue_type respectively, noting : Vectors must length one 2 length 1 responsibility user check whether combination exists dataset provided. Example:   Note estimates computed individually group.","code":"estimate <- HSC_population_size_estimate(     x = aggreg,     metadata = aggreg_meta,     cell_type = c(\"MYELOID\", \"T\", \"B\"),     tissue_type = \"PB\" )  # Evaluated groups will be: # - MYELOID PB # - T PB # - B PB"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_size_estimate.html","id":"on-time-points","dir":"Reference","previous_headings":"","what":"On time points","title":"Hematopoietic stem cells population size estimate. — HSC_population_size_estimate","text":"stable_timepoints vector length > 1, function look first available stable time point slice data time point onward. NULL supplied instead, means stable time points available. Note 0 time points ALWAYS discarded. Also, included analysis, group must least 2 distinct non-zero time points. NOTE: vector passed contain individual time points, just minimum maximum","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_size_estimate.html","id":"setting-a-threshold-for-fragment-estimate","dir":"Reference","previous_headings":"","what":"Setting a threshold for fragment estimate","title":"Hematopoietic stem cells population size estimate. — HSC_population_size_estimate","text":"fragment estimate present input matrix, filtering logic changes slightly: rows original matrix kept sequence count value greater equal seqCount_threshold fragment estimate value greater equal fragmentEstimate_threshold PRESENT (non-zero value). means rows miss fragment estimate, filtering logic applied sequence count. user wishes use combined filtering fragment estimate, simply set fragmentEstimate_threshold = 0.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_size_estimate.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Hematopoietic stem cells population size estimate. — HSC_population_size_estimate","text":"function explicitly check presence tags: subject tissue cell_marker","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/HSC_population_size_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hematopoietic stem cells population size estimate. — HSC_population_size_estimate","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) aggreg_meta <- aggregate_metadata(association_file = association_file) estimate <- HSC_population_size_estimate(     x = aggreg,     metadata = aggreg_meta,     fragmentEstimate_column = NULL,     stable_timepoints = c(90, 180, 360),     cell_type = \"Other\" ) #> Calculating number of IS for each group..."},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/ISAnalytics-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package ISAnalytics. — ISAnalytics-deprecated","title":"Deprecated functions in package ISAnalytics. — ISAnalytics-deprecated","text":"functions provided compatibility older versions ‘ISAnalytics’ , defunct next release.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/ISAnalytics-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deprecated functions in package ISAnalytics. — ISAnalytics-deprecated","text":"following functions deprecated made defunct; use replacement indicated : import_parallel_Vispa2Matrices_auto (defunct): import_parallel_Vispa2Matrices import_parallel_Vispa2Matrices_interactive (defunct): import_parallel_Vispa2Matrices unzip_file_system: generate_default_folder_structure cumulative_count_union (defunct): cumulative_is threshold_filter","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/ISAnalytics.html","id":null,"dir":"Reference","previous_headings":"","what":"ISAnalytics: Analyze gene therapy vector insertion sites data\nidentified from genomics next generation sequencing reads for\nclonal tracking studies — ISAnalytics","title":"ISAnalytics: Analyze gene therapy vector insertion sites data\nidentified from genomics next generation sequencing reads for\nclonal tracking studies — ISAnalytics","text":"gene therapy, stem cells modified using viral vectors deliver therapeutic transgene replace functional properties since genetic modification stable inherited cell progeny. retrieval mapping sequences flanking virus-host DNA junctions allows identification insertion sites (), essential monitoring evolution genetically modified cells vivo. comprehensive toolkit analysis required foster clonal trackign studies supporting assessment safety long term efficacy vivo. package aimed (1) supporting automation workflow, (2) performing base advance analysis tracking (clonal abundance, clonal expansions statistics insertional mutagenesis, etc.), (3) providing basic biology insights transduced stem cells vivo.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/ISAnalytics.html","id":"useful-resources","dir":"Reference","previous_headings":"","what":"Useful resources","title":"ISAnalytics: Analyze gene therapy vector insertion sites data\nidentified from genomics next generation sequencing reads for\nclonal tracking studies — ISAnalytics","text":"VISPA2: Scalable Pipeline High-Throughput Identification Annotation Vector Integration Sites","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/ISAnalytics.html","id":"vignettes","dir":"Reference","previous_headings":"","what":"Vignettes","title":"ISAnalytics: Analyze gene therapy vector insertion sites data\nidentified from genomics next generation sequencing reads for\nclonal tracking studies — ISAnalytics","text":"vignette(\"workflow_start\", package = \"ISAnalytics\")","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/NGSdataExplorer.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the shiny application NGSdataExplorer. — NGSdataExplorer","title":"Launch the shiny application NGSdataExplorer. — NGSdataExplorer","text":"Launch shiny application NGSdataExplorer.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/NGSdataExplorer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the shiny application NGSdataExplorer. — NGSdataExplorer","text":"","code":"NGSdataExplorer()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/NGSdataExplorer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch the shiny application NGSdataExplorer. — NGSdataExplorer","text":"Nothing","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/NGSdataExplorer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch the shiny application NGSdataExplorer. — NGSdataExplorer","text":"","code":"if (FALSE) { NGSdataExplorer() }"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/aggregate_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs aggregation on metadata contained in the association file. — aggregate_metadata","title":"Performs aggregation on metadata contained in the association file. — aggregate_metadata","text":"Groups metadata specified grouping keys returns summary info group. details use function: vignette(\"workflow_start\", package = \"ISAnalytics\")","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/aggregate_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs aggregation on metadata contained in the association file. — aggregate_metadata","text":"","code":"aggregate_metadata(   association_file,   grouping_keys = c(\"SubjectID\", \"CellMarker\", \"Tissue\", \"TimePoint\"),   aggregating_functions = default_meta_agg(),   import_stats = lifecycle::deprecated() )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/aggregate_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs aggregation on metadata contained in the association file. — aggregate_metadata","text":"association_file imported association file (via import_association_file) grouping_keys character vector column names form grouping operation aggregating_functions data frame containing specifications functions applied columns association file aggregation. defaults default_meta_agg. structure data frame maintained user wishes change defaults. import_stats import VISPA2 stats moved dedicated function, see import_Vispa2_stats.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/aggregate_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs aggregation on metadata contained in the association file. — aggregate_metadata","text":"aggregated data frame","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/aggregate_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs aggregation on metadata contained in the association file. — aggregate_metadata","text":"","code":"data(\"association_file\", package = \"ISAnalytics\") aggreg_meta <- aggregate_metadata(     association_file = association_file ) head(aggreg_meta) #> # A tibble: 6 × 19 #>   SubjectID CellMarker Tissue TimePoint FusionPrimerPCRDate_…¹ LinearPCRDate_min #>   <chr>     <chr>      <chr>  <chr>     <date>                 <date>            #> 1 PT001     MNC        BM     0030      2016-11-03             Inf               #> 2 PT001     MNC        BM     0060      2016-11-03             Inf               #> 3 PT001     MNC        BM     0090      2016-11-03             Inf               #> 4 PT001     MNC        BM     0180      2016-11-03             Inf               #> 5 PT001     MNC        BM     0360      2017-04-21             Inf               #> 6 PT001     MNC        PB     0030      2016-11-03             Inf               #> # ℹ abbreviated name: ¹​FusionPrimerPCRDate_min #> # ℹ 13 more variables: VCN_avg <dbl>, `ng DNA corrected_avg` <dbl>, #> #   Kapa_avg <dbl>, `ng DNA corrected_sum` <dbl>, ulForPool_sum <dbl>, #> #   BARCODE_MUX_sum <int>, TRIMMING_FINAL_LTRLC_sum <int>, LV_MAPPED_sum <int>, #> #   BWA_MAPPED_OVERALL_sum <int>, ISS_MAPPED_OVERALL_sum <int>, #> #   PCRMethod <chr>, NGSTechnology <chr>, DNAnumber <chr>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/aggregate_values_by_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregates matrices values based on specified key. — aggregate_values_by_key","title":"Aggregates matrices values based on specified key. — aggregate_values_by_key","text":"Performs aggregation values contained integration matrices based key specified lambda. details use function: vignette(\"workflow_start\", package = \"ISAnalytics\")","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/aggregate_values_by_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregates matrices values based on specified key. — aggregate_values_by_key","text":"","code":"aggregate_values_by_key(   x,   association_file,   value_cols = \"Value\",   key = c(\"SubjectID\", \"CellMarker\", \"Tissue\", \"TimePoint\"),   lambda = list(sum = ~sum(.x, na.rm = TRUE)),   group = c(mandatory_IS_vars(), annotation_IS_vars()),   join_af_by = \"CompleteAmplificationID\" )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/aggregate_values_by_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregates matrices values based on specified key. — aggregate_values_by_key","text":"x single integration matrix list imported integration matrices association_file imported association file value_cols character vector containing names columns apply given lambdas. Must numeric integer columns. key string character vector column names association file take key lambda named list functions purrr-style lambdas. See details section. group variables include grouping besides key, can set NULL join_af_by character vector representing joining key matrix metadata. Useful re-aggregate already aggregated matrices.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/aggregate_values_by_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregates matrices values based on specified key. — aggregate_values_by_key","text":"list data frames single data frame aggregated according specified arguments","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/aggregate_values_by_key.html","id":"setting-the-lambda-parameter","dir":"Reference","previous_headings":"","what":"Setting the lambda parameter","title":"Aggregates matrices values based on specified key. — aggregate_values_by_key","text":"lambda parameter always contain named list either functions purrr-style lambdas. also possible specify namespace function ways, example:   Using purrr-style lambdas allows specify arguments functions, keeping mind first parameter always .x:   also possible use custom user-defined functions, keeping mind symbol evaluated calling environment, example function called global environment lambda contains \"foo\" function, \"foo\" evaluated global environment.","code":"lambda = list(sum = sum, desc = psych::describe) lambda = list(sum = ~sum(.x, na.rm = TRUE)) foo <- function(x) {   sum(x) }  lambda = list(sum = ~sum(.x, na.rm = TRUE), foo = foo)  # Or with lambda notation lambda = list(sum = ~sum(.x, na.rm = TRUE), foo = ~foo(.x))"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/aggregate_values_by_key.html","id":"constraints-on-aggregation-functions","dir":"Reference","previous_headings":"","what":"Constraints on aggregation functions","title":"Aggregates matrices values based on specified key. — aggregate_values_by_key","text":"Functions passed lambda parameters must respect constraints properly work user responsibility ensure . Functions accept input numeric integer vector Function return single value list/data frame: list data frame returned result, columns added final data frame.","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/aggregate_values_by_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregates matrices values based on specified key. — aggregate_values_by_key","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) head(aggreg) #> # A tibble: 6 × 11 #>   chr   integration_locus strand GeneName GeneStrand SubjectID CellMarker Tissue #>   <chr>             <dbl> <chr>  <chr>    <chr>      <chr>     <chr>      <chr>  #> 1 1               8464757 -      RERE     -          PT001     MNC        BM     #> 2 1               8464757 -      RERE     -          PT001     MNC        BM     #> 3 1               8607357 +      RERE     -          PT001     MNC        BM     #> 4 1               8607357 +      RERE     -          PT001     MNC        BM     #> 5 1               8607357 +      RERE     -          PT001     MNC        BM     #> 6 1               8607362 -      RERE     -          PT001     MNC        BM     #> # ℹ 3 more variables: TimePoint <chr>, seqCount_sum <dbl>, #> #   fragmentEstimate_sum <dbl>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/annotation_issues.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for genomic annotation problems in IS matrices. — annotation_issues","title":"Check for genomic annotation problems in IS matrices. — annotation_issues","text":"helper function checks individual integration site, identified mandatory_IS_vars(), annotated two distinct gene symbols.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/annotation_issues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for genomic annotation problems in IS matrices. — annotation_issues","text":"","code":"annotation_issues(matrix)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/annotation_issues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for genomic annotation problems in IS matrices. — annotation_issues","text":"matrix Either single matrix list matrices, ideally obtained via import_parallel_Vispa2Matrices() import_single_Vispa2Matrix()","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/annotation_issues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for genomic annotation problems in IS matrices. — annotation_issues","text":"Either NULL issues detected 1 data frames genomic coordinates number distinct genes associated","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/annotation_issues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for genomic annotation problems in IS matrices. — annotation_issues","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") annotation_issues(integration_matrices) #> No annotation issues found #> NULL"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/as_sparse_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts tidy integration matrices in the original sparse matrix\nform. — as_sparse_matrix","title":"Converts tidy integration matrices in the original sparse matrix\nform. — as_sparse_matrix","text":"function particularly useful sparse matrix structure needed specific function (mainly packages).","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/as_sparse_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts tidy integration matrices in the original sparse matrix\nform. — as_sparse_matrix","text":"","code":"as_sparse_matrix(   x,   single_value_col = \"Value\",   fragmentEstimate = \"fragmentEstimate\",   seqCount = \"seqCount\",   barcodeCount = \"barcodeCount\",   cellCount = \"cellCount\",   ShsCount = \"ShsCount\",   key = pcr_id_column() )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/as_sparse_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts tidy integration matrices in the original sparse matrix\nform. — as_sparse_matrix","text":"x single tidy integration matrix list integration matrices. Supports also multi-quantification matrices obtained via comparison_matrix single_value_col Name column containing values providing single-quantification matrix fragmentEstimate multi-quantification matrix support: name fragment estimate values column seqCount multi-quantification matrix support: name sequence count values column barcodeCount multi-quantification matrix support: name barcode count values column cellCount multi-quantification matrix support: name cell count values column ShsCount multi-quantification matrix support: name Shs Count values column key name sample identifier fields (aggregated matrices can vector 1 element)","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/as_sparse_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts tidy integration matrices in the original sparse matrix\nform. — as_sparse_matrix","text":"Depending input, 2 possible outputs: single sparse matrix (data frame) input single quantification matrix list sparse matrices divided quantification input single multi-quantification matrix list matrices","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/as_sparse_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts tidy integration matrices in the original sparse matrix\nform. — as_sparse_matrix","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") sparse <- as_sparse_matrix(integration_matrices)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/association_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of association file. — association_file","title":"Example of association file. — association_file","text":"file simple example association file. Use reference properly fill . generate empty association file fill see generate_blank_association_file() function.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/association_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of association file. — association_file","text":"","code":"data(\"association_file\")"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/association_file.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of association file. — association_file","text":"object class data.table (inherits data.frame) 53 rows 83 columns.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/association_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example of association file. — association_file","text":"data obtained manually simulating real research data.","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/available_outlier_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector containing all the names of the currently supported\noutliers tests that can be called in the function outlier_filter. — available_outlier_tests","title":"A character vector containing all the names of the currently supported\noutliers tests that can be called in the function outlier_filter. — available_outlier_tests","text":"character vector containing names currently supported outliers tests can called function outlier_filter.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/available_outlier_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector containing all the names of the currently supported\noutliers tests that can be called in the function outlier_filter. — available_outlier_tests","text":"","code":"available_outlier_tests()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/available_outlier_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector containing all the names of the currently supported\noutliers tests that can be called in the function outlier_filter. — available_outlier_tests","text":"character vector","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/available_outlier_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A character vector containing all the names of the currently supported\noutliers tests that can be called in the function outlier_filter. — available_outlier_tests","text":"","code":"available_outlier_tests() #> [1] \"outliers_by_pool_fragments\""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/available_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"All available tags for dynamic vars look-up tables. — available_tags","title":"All available tags for dynamic vars look-up tables. — available_tags","text":"Contains information associated critical tags used dynamic vars system. know see vignette(\"workflow_start\", package=\"ISAnalytics\").","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/available_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All available tags for dynamic vars look-up tables. — available_tags","text":"","code":"available_tags()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/available_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All available tags for dynamic vars look-up tables. — available_tags","text":"data frame","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/available_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All available tags for dynamic vars look-up tables. — available_tags","text":"","code":"available_tags() #> # A tibble: 27 × 4 #>    tag         needed_in description                                dyn_vars_tbl #>    <chr>       <list>    <chr>                                      <chr>        #>  1 chromosome  <chr [3]> Number of the chromosome                   mand_vars    #>  2 locus       <chr [3]> The locus at which the integration occurs  mand_vars    #>  3 is_strand   <chr [2]> The DNA strand in which the integration o… mand_vars    #>  4 gene_symbol <chr [5]> The symbol of the gene                     annot_vars   #>  5 gene_strand <chr [2]> The strand of the gene                     annot_vars   #>  6 project_id  <chr [6]> Unique identifier of a project             af_vars      #>  7 pool_id     <chr [3]> Unique identifier of a sequencing pool     af_vars      #>  8 fusion_id   <chr [1]> Identification code/number of the barcode… af_vars      #>  9 tag_seq     <chr [3]> The barcode tag sequence                   af_vars      #> 10 subject     <chr [2]> Unique identifier of a study subject (usu… af_vars      #> # ℹ 17 more rows"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/blood_lineages_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default blood lineages info — blood_lineages_default","title":"Default blood lineages info — blood_lineages_default","text":"default table info relative different blood lineages associated cell markers can supplied parameter HSC_population_size_estimate","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/blood_lineages_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default blood lineages info — blood_lineages_default","text":"","code":"blood_lineages_default()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/blood_lineages_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default blood lineages info — blood_lineages_default","text":"data frame","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/blood_lineages_default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default blood lineages info — blood_lineages_default","text":"","code":"blood_lineages_default() #> # A tibble: 47 × 6 #>    CellMarker Keywords CellType  HematoLineage SuperGroup LineageByPurity #>    <chr>      <chr>    <chr>     <chr>         <chr>      <chr>           #>  1 CD13       MYELO    Myeloid   Myeloid       CD13       Myeloid         #>  2 CD14       MYELO    Myeloid   Myeloid       CD14       Myeloid         #>  3 CD15       MYELO    Myeloid   Myeloid       CD15       Myeloid         #>  4 CD19       B        B         Lymphoid      CD19       Lymphoid        #>  5 CD3        T        T         Lymphoid      CD3        Lymphoid        #>  6 CD34       CD34     CD34      CD34          CD34       CD34            #>  7 CD34Molmed CD34     Other     Other         Other      Other           #>  8 CD34NEG    CD34     Other     Other         Other      Other           #>  9 CD36       TE       Erythroid Erythroid     CD36       Erythroid       #> 10 CD4        T        T         Lymphoid      CD3        Lymphoid        #> # ℹ 37 more rows"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/circos_genomic_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Trace a circos plot of genomic densities. — circos_genomic_density","title":"Trace a circos plot of genomic densities. — circos_genomic_density","text":"functionality suggested package circlize required. Please note function simple wrapper basic circlize functions, -depth explanation functions work additional arguments please refer official documentation Circular Visualization R","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/circos_genomic_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trace a circos plot of genomic densities. — circos_genomic_density","text":"","code":"circos_genomic_density(   data,   gene_labels = NULL,   label_col = NULL,   cytoband_specie = \"hg19\",   track_colors = \"navyblue\",   grDevice = c(\"png\", \"pdf\", \"svg\", \"jpeg\", \"bmp\", \"tiff\", \"default\"),   file_path = getwd(),   ... )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/circos_genomic_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trace a circos plot of genomic densities. — circos_genomic_density","text":"data Either single integration matrix list integration matrices. list provided, separate density track data frame plotted. gene_labels Either NULL data frame bed format. See details. label_col Numeric index column gene_labels contains actual labels. Relevant gene_labels set NULL. cytoband_specie Specie initializing cytoband track_colors Colors give density tracks. one integration matrix provided data length. Values recycled length track_colors smaller length input data. grDevice graphical device plot traced. default, executing RStudio viewer. file_path device default chosen, path disk file saved. Defaults {current directory}/circos_plot.{device}. ... Additional named arguments pass chosen device, circlize::circos.par(), circlize::circos.genomicDensity() circlize::circos.genomicLabels()","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/circos_genomic_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trace a circos plot of genomic densities. — circos_genomic_density","text":"NULL","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/circos_genomic_density.html","id":"providing-genomic-labels","dir":"Reference","previous_headings":"","what":"Providing genomic labels","title":"Trace a circos plot of genomic densities. — circos_genomic_density","text":"genomic labels plotted alongside genomic density tracks, user provide simple data frame standard bed format, namely chr, start, end plus column containing labels. NOTE: user decides plot default device (viewer RStudio), must ensure enough space elements plotted, otherwise error message thrown.","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/circos_genomic_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trace a circos plot of genomic densities. — circos_genomic_density","text":"","code":"# \\donttest{ data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) by_subj <- aggreg |>     dplyr::group_by(.data$SubjectID) |>     dplyr::group_split() circos_genomic_density(by_subj,     track_colors = c(\"navyblue\", \"gold\"),     grDevice = \"default\", track.height = 0.1 )  # }"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/clinical_relevant_suspicious_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical relevant suspicious genes (for mouse and human). — clinical_relevant_suspicious_genes","title":"Clinical relevant suspicious genes (for mouse and human). — clinical_relevant_suspicious_genes","text":"Clinical relevant suspicious genes (mouse human).","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/clinical_relevant_suspicious_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical relevant suspicious genes (for mouse and human). — clinical_relevant_suspicious_genes","text":"","code":"clinical_relevant_suspicious_genes()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/clinical_relevant_suspicious_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical relevant suspicious genes (for mouse and human). — clinical_relevant_suspicious_genes","text":"data frame","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/clinical_relevant_suspicious_genes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clinical relevant suspicious genes (for mouse and human). — clinical_relevant_suspicious_genes","text":"","code":"clinical_relevant_suspicious_genes() #> # A tibble: 6 × 3 #>   GeneName ClinicalRelevance DOIReference                                 #>   <chr>    <lgl>             <chr>                                        #> 1 DNMT3A   TRUE              https://doi.org/10.1182/blood-2018-01-829937 #> 2 TET2     TRUE              https://doi.org/10.1182/blood-2018-01-829937 #> 3 ASXL1    TRUE              https://doi.org/10.1182/blood-2018-01-829937 #> 4 JAK2     TRUE              https://doi.org/10.1182/blood-2018-01-829937 #> 5 CBL      TRUE              https://doi.org/10.1182/blood-2018-01-829937 #> 6 TP53     TRUE              https://doi.org/10.1182/blood-2018-01-829937"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/comparison_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a single integration matrix from individual quantification\nmatrices. — comparison_matrix","title":"Obtain a single integration matrix from individual quantification\nmatrices. — comparison_matrix","text":"Takes list integration matrices referring different quantification types merges single data frame multiple value columns, renamed according quantification type reference.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/comparison_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a single integration matrix from individual quantification\nmatrices. — comparison_matrix","text":"","code":"comparison_matrix(   x,   fragmentEstimate = \"fragmentEstimate\",   seqCount = \"seqCount\",   barcodeCount = \"barcodeCount\",   cellCount = \"cellCount\",   ShsCount = \"ShsCount\",   value_col_name = \"Value\" )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/comparison_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a single integration matrix from individual quantification\nmatrices. — comparison_matrix","text":"x named list integration matrices, ideally obtained via import_parallel_Vispa2Matrices. Names must quantification types quantification_types(). fragmentEstimate name output column fragment estimate values seqCount name output column sequence count values barcodeCount name output column barcode count values cellCount name output column cell count values ShsCount name output column Shs count values value_col_name Name column containing corresponding values single matrices","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/comparison_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a single integration matrix from individual quantification\nmatrices. — comparison_matrix","text":"single data frame","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/comparison_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain a single integration matrix from individual quantification\nmatrices. — comparison_matrix","text":"","code":"sc <- tibble::tribble(     ~chr, ~integration_locus, ~strand, ~CompleteAmplificationID, ~Value,     \"1\", 45324, \"+\", \"ID1\", 543,     \"2\", 52423, \"-\", \"ID1\", 42,     \"6\", 54623, \"-\", \"ID2\", 67,     \"X\", 12314, \"+\", \"ID3\", 8 ) fe <- tibble::tribble(     ~chr, ~integration_locus, ~strand, ~CompleteAmplificationID, ~Value,     \"1\", 45324, \"+\", \"ID1\", 56.76,     \"2\", 52423, \"-\", \"ID1\", 78.32,     \"6\", 54623, \"-\", \"ID2\", 123.45,     \"X\", 12314, \"+\", \"ID3\", 5.34 ) comparison_matrix(list(     fragmentEstimate = fe,     seqCount = sc )) #> # A tibble: 4 × 6 #>   chr   integration_locus strand CompleteAmplificationID fragmentEstimate #>   <chr>             <dbl> <chr>  <chr>                              <dbl> #> 1 1                 45324 +      ID1                                56.8  #> 2 2                 52423 -      ID1                                78.3  #> 3 6                 54623 -      ID2                               123.   #> 4 X                 12314 +      ID3                                 5.34 #> # ℹ 1 more variable: seqCount <dbl>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the abundance for every integration event in the input data frame. — compute_abundance","title":"Computes the abundance for every integration event in the input data frame. — compute_abundance","text":"Abundance obtained every integration event calculating ratio single value total value given group.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the abundance for every integration event in the input data frame. — compute_abundance","text":"","code":"compute_abundance(   x,   columns = c(\"fragmentEstimate_sum\"),   percentage = TRUE,   key = c(\"SubjectID\", \"CellMarker\", \"Tissue\", \"TimePoint\"),   keep_totals = FALSE )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the abundance for every integration event in the input data frame. — compute_abundance","text":"x integration matrix - aka data frame includes mandatory_IS_vars() columns. matrix can either aggregated (via aggregate_values_by_key()) . columns character vector column names process, must numeric integer columns percentage Add abundance percentage? key key group calculating totals keep_totals value TRUE, FALSE df. TRUE, intermediate totals group kept output data frame dedicated column trailing \"_tot\". FALSE, totals included output data frame. df, totals returned user separate data frame, together abundance data frame.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the abundance for every integration event in the input data frame. — compute_abundance","text":"Either single data frame computed abundance values list 2 data frames (abundance_df, quant_totals)","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_abundance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes the abundance for every integration event in the input data frame. — compute_abundance","text":"Abundance computed upon user selected columns columns parameter. column corresponding relative abundance column (optionally percentage abundance column) produced.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_abundance.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Computes the abundance for every integration event in the input data frame. — compute_abundance","text":"function explicitly check presence tags: columns declared mandatory_IS_vars()","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the abundance for every integration event in the input data frame. — compute_abundance","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") abund <- compute_abundance(     x = integration_matrices,     columns = \"fragmentEstimate\",     key = \"CompleteAmplificationID\" ) head(abund) #>    chr integration_locus strand     GeneName GeneStrand #> 1:  16          68164148      +       NFATC3          + #> 2:   4         129390130      + LOC100507487          + #> 3:   5          84009671      -        EDIL3          - #> 4:  12          54635693      -         CBX5          - #> 5:   5          84009671      -        EDIL3          - #> 6:  12          54635693      -         CBX5          - #>                                                 CompleteAmplificationID #> 1: PJ01_POOL01_LTR75LC38_PT001_PT001-103_lenti_GLOBE_PB_1_SLiM_0060_MNC #> 2:  PJ01_POOL01_LTR53LC32_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #> 3:  PJ01_POOL01_LTR53LC32_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #> 4:  PJ01_POOL01_LTR83LC66_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #> 5:  PJ01_POOL01_LTR83LC66_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #> 6:  PJ01_POOL01_LTR27LC94_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #>    seqCount fragmentEstimate fragmentEstimate_RelAbundance #> 1:      182        102.94572                     0.5120030 #> 2:    23219         68.73747                     0.1472510 #> 3:    20205         67.12349                     0.1437935 #> 4:    13269         65.15760                     0.1461826 #> 5:    14748         61.46981                     0.1379090 #> 6:    12588         60.84781                     0.1718091 #>    fragmentEstimate_PercAbundance #> 1:                       51.20030 #> 2:                       14.72510 #> 3:                       14.37935 #> 4:                       14.61826 #> 5:                       13.79090 #> 6:                       17.18091"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_near_integrations.html","id":null,"dir":"Reference","previous_headings":"","what":"Scans input matrix to find and merge near integration sites. — compute_near_integrations","title":"Scans input matrix to find and merge near integration sites. — compute_near_integrations","text":"function scans input integration matrix detect eventual integration sites \"near\" merges single integration sites adjusting values needed.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_near_integrations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scans input matrix to find and merge near integration sites. — compute_near_integrations","text":"","code":"compute_near_integrations(   x,   threshold = 4,   is_identity_tags = c(\"chromosome\", \"is_strand\"),   keep_criteria = c(\"max_value\", \"keep_first\"),   value_columns = c(\"seqCount\", \"fragmentEstimate\"),   max_value_column = \"seqCount\",   sample_id_column = pcr_id_column(),   additional_agg_lambda = list(.default = default_rec_agg_lambdas()),   max_workers = 4,   map_as_file = TRUE,   file_path = default_report_path(),   strand_specific = lifecycle::deprecated() )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_near_integrations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scans input matrix to find and merge near integration sites. — compute_near_integrations","text":"x integration matrix threshold single integer represents absolute number bases two integrations considered distinct. threshold set 3 means, provided fields chr strand , integrations sites least 3 bases considered distinct. is_identity_tags Character vector tags identify integration event distinct (except \"locus\"). See details. keep_criteria scanning, integration kept? 2 possible choices parameter : \"max_value\": keep integration site highest value (collapse values integration). \"keep_first\": keeps first integration value_columns Character vector, contains names numeric experimental columns max_value_column column considered searching maximum value sample_id_column name column containing sample identifier additional_agg_lambda named list containing aggregating functions additional columns. See details. max_workers Maximum parallel workers allowed map_as_file Produce recalibration map .tsv file? file_path String representing path file saved. Must folder. Relevant map_as_file TRUE. strand_specific Deprecated, use is_identity_tags","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_near_integrations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scans input matrix to find and merge near integration sites. — compute_near_integrations","text":"integration matrix less number rows","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_near_integrations.html","id":"the-concept-of-near-","dir":"Reference","previous_headings":"","what":"The concept of \"near\"","title":"Scans input matrix to find and merge near integration sites. — compute_near_integrations","text":"integration event uniquely identified fields specified mandatory_IS_vars() look-table. can happen find formally distinct (different combination values fields), considered distinct practice, since represent integration event - may due artefacts putative locus merging multiple sequencing libraries. say integration event IS1 near another integration event IS2 absolute difference loci strictly lower set threshold.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_near_integrations.html","id":"the-is-identity","dir":"Reference","previous_headings":"","what":"The IS identity","title":"Scans input matrix to find and merge near integration sites. — compute_near_integrations","text":"also another aspect considered. Since algorithm based sliding window mechanism, groups set slide window? default, 3 fields mandatory_IS_vars(): chr, integration_locus, strand, assume fields contribute identity . means IS1 IS2 can compared chromosome strand. However, like exclude strand integration considerations IS1 IS2 can selected events fall chromosome. practical example: IS1 = (chr = \"1\", strand = \"+\", integration_locus = 14568) IS2 = (chr = \"1\", strand = \"-\", integration_locus = 14567) is_identity_tags = c(\"chromosome\", \"is_strand\") IS1 IS2 considered distinct differ strand, therefore correction applied loci either 2. is_identity_tags = c(\"chromosome\") IS1 IS2 considered near, strand irrelevant, hence one 2 change locus.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_near_integrations.html","id":"aggregating-near-is","dir":"Reference","previous_headings":"","what":"Aggregating near IS","title":"Scans input matrix to find and merge near integration sites. — compute_near_integrations","text":"fall interval evaluated according criterion selected - recalibration necessary, rows sample ID aggregated single row quantification value sum merged rows. input integration matrix contains annotation columns, additional columns part mandatory vars (see mandatory_IS_vars()) part annotation vars (see annotation_IS_vars()) sample identifier column quantification column possible specify aggregated. Defaults provided column type (character, integer, numeric...), custom functions can specified named list, names column names x values functions applied. NOTE: functions must purrr-style lambdas must perform kind aggregating operation, aka must take vector input return single value. type output match type target column. specify custom lambdas, provide defaults special element .defaults. Example:","code":"list(   numeric_col = ~ sum(.x),   char_col = ~ paste0(.x, collapse = \", \"),   .defaults = default_rec_agg_lambdas() )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_near_integrations.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Scans input matrix to find and merge near integration sites. — compute_near_integrations","text":"recommend use function combination comparison_matrix automatically perform re-calibration quantification matrices.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_near_integrations.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Scans input matrix to find and merge near integration sites. — compute_near_integrations","text":"function explicitly check presence tags: chromosome locus is_strand gene_symbol","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/compute_near_integrations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scans input matrix to find and merge near integration sites. — compute_near_integrations","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") rec <- compute_near_integrations(     x = integration_matrices, map_as_file = FALSE ) head(rec) #> # A tibble: 6 × 8 #>   chr   integration_locus strand GeneName GeneStrand CompleteAmplificationID     #>   <chr>             <dbl> <chr>  <chr>    <chr>      <chr>                       #> 1 1               8607357 +      RERE     -          PJ01_POOL01_LTR27LC94_PT00… #> 2 1               8607357 +      RERE     -          PJ01_POOL01_LTR83LC46_PT00… #> 3 1               8607357 +      RERE     -          PJ01_POOL01_LTR83LC66_PT00… #> 4 1               8607357 +      RERE     -          PJ01_POOL01_LTR53LC32_PT00… #> 5 1               8607357 +      RERE     -          PJ01_POOL02_LTR87LC74_PT00… #> 6 1               8850362 +      RERE     -          PJ01_POOL03_LTR51LC86_PT00… #> # ℹ 2 more variables: seqCount <dbl>, fragmentEstimate <dbl>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/cumulative_count_union.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrations cumulative count in time by sample — cumulative_count_union","title":"Integrations cumulative count in time by sample — cumulative_count_union","text":"function deprecated favour single function, please use cumulative_is instead.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/cumulative_count_union.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrations cumulative count in time by sample — cumulative_count_union","text":"","code":"cumulative_count_union(   x,   association_file = NULL,   timepoint_column = \"TimePoint\",   key = c(\"SubjectID\", \"CellMarker\", \"Tissue\", \"TimePoint\"),   include_tp_zero = FALSE,   zero = \"0000\",   aggregate = FALSE,   ... )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/cumulative_count_union.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrations cumulative count in time by sample — cumulative_count_union","text":"x simple integration matrix aggregated matrix (see details) association_file NULL association file x aggregate set TRUE timepoint_column name time point column? key aggregation key - must always contain timepoint_column include_tp_zero Include timepoint 0? zero 0 coded data frame? aggregate x aggregated? ... Additional parameters pass aggregate_values_by_key","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/cumulative_count_union.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrations cumulative count in time by sample — cumulative_count_union","text":"data frame","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/cumulative_count_union.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrations cumulative count in time by sample — cumulative_count_union","text":"","code":"if (FALSE) { data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) cumulative_count <- cumulative_count_union(aggreg) cumulative_count }"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/cumulative_is.html","id":null,"dir":"Reference","previous_headings":"","what":"Expands integration matrix with the cumulative IS union over time. — cumulative_is","title":"Expands integration matrix with the cumulative IS union over time. — cumulative_is","text":"Given input integration matrix can grouped time, function adds integrations groups assuming integration observed time point \"t\" also observed time point \"t+1\".","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/cumulative_is.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expands integration matrix with the cumulative IS union over time. — cumulative_is","text":"","code":"cumulative_is(   x,   key = c(\"SubjectID\", \"CellMarker\", \"Tissue\", \"TimePoint\"),   timepoint_col = \"TimePoint\",   include_tp_zero = FALSE,   counts = TRUE,   keep_og_is = FALSE,   expand = TRUE )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/cumulative_is.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expands integration matrix with the cumulative IS union over time. — cumulative_is","text":"x integration matrix, ideally aggregated via aggregate_values_by_key() key aggregation key used timepoint_col name time point column include_tp_zero time point 0 included? counts Add cumulative counts? Logical keep_og_is Keep original set integrations separate column? expand FALSE, group, set integration sites returned separate column nested table, otherwise resulting column unnested.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/cumulative_is.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expands integration matrix with the cumulative IS union over time. — cumulative_is","text":"data frame","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/cumulative_is.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Expands integration matrix with the cumulative IS union over time. — cumulative_is","text":"function explicitly check presence tags: columns declared mandatory_IS_vars() Checks matrix annotated assessing presence annotation_IS_vars()","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/cumulative_is.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expands integration matrix with the cumulative IS union over time. — cumulative_is","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) cumulated_is <- cumulative_is(aggreg) cumulated_is #> $coordinates #> # A tibble: 2,375 × 9 #>    SubjectID CellMarker Tissue TimePoint chr   integration_locus strand GeneName #>    <chr>     <chr>      <chr>      <dbl> <chr>             <dbl> <chr>  <chr>    #>  1 PT001     MNC        BM            30 1               8464757 -      RERE     #>  2 PT001     MNC        BM            30 1              16186297 -      SPEN     #>  3 PT001     MNC        BM            30 1              40689188 +      RLF      #>  4 PT001     MNC        BM            30 1             157759338 -      FCRL1    #>  5 PT001     MNC        BM            30 1             234596545 -      TARBP1   #>  6 PT001     MNC        BM            30 10            122533902 -      WDR11-A… #>  7 PT001     MNC        BM            30 11              5306480 +      HBE1     #>  8 PT001     MNC        BM            30 11             64633964 +      EHD1     #>  9 PT001     MNC        BM            30 11             65949729 -      PACS1    #> 10 PT001     MNC        BM            30 11             72097513 +      CLPB     #> # ℹ 2,365 more rows #> # ℹ 1 more variable: GeneStrand <chr> #>  #> $counts #> # A tibble: 20 × 5 #>    SubjectID CellMarker Tissue TimePoint is_n_cumulative #>    <chr>     <chr>      <chr>      <dbl>           <int> #>  1 PT001     MNC        BM            30              54 #>  2 PT001     MNC        BM            60             147 #>  3 PT001     MNC        BM            90             179 #>  4 PT001     MNC        BM           180             240 #>  5 PT001     MNC        BM           360             240 #>  6 PT001     MNC        PB            30              28 #>  7 PT001     MNC        PB            60              77 #>  8 PT001     MNC        PB            90             104 #>  9 PT001     MNC        PB           180             121 #> 10 PT001     MNC        PB           360             121 #> 11 PT002     MNC        BM            30              98 #> 12 PT002     MNC        BM            60             126 #> 13 PT002     MNC        BM            90             141 #> 14 PT002     MNC        BM           180             184 #> 15 PT002     MNC        BM           360             265 #> 16 PT002     MNC        PB            30              15 #> 17 PT002     MNC        PB            60              26 #> 18 PT002     MNC        PB            90              38 #> 19 PT002     MNC        PB           180              62 #> 20 PT002     MNC        PB           360             109 #>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/date_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"Possible choices for the dates_format parameter in\nimport_association_file,\nimport_parallel_vispa2Matrices_interactive and\nimport_parallel_vispa2Matrices_auto. — date_formats","title":"Possible choices for the dates_format parameter in\nimport_association_file,\nimport_parallel_vispa2Matrices_interactive and\nimport_parallel_vispa2Matrices_auto. — date_formats","text":"options correspond lubridate functions, see dedicated package documentation.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/date_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Possible choices for the dates_format parameter in\nimport_association_file,\nimport_parallel_vispa2Matrices_interactive and\nimport_parallel_vispa2Matrices_auto. — date_formats","text":"","code":"date_formats()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/date_formats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Possible choices for the dates_format parameter in\nimport_association_file,\nimport_parallel_vispa2Matrices_interactive and\nimport_parallel_vispa2Matrices_auto. — date_formats","text":"character vector","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/date_formats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Possible choices for the dates_format parameter in\nimport_association_file,\nimport_parallel_vispa2Matrices_interactive and\nimport_parallel_vispa2Matrices_auto. — date_formats","text":"","code":"date_formats() #>  [1] \"ymd\"     \"ydm\"     \"mdy\"     \"myd\"     \"dmy\"     \"dym\"     \"yq\"      #>  [8] \"ym\"      \"my\"      \"ymd_hms\" \"ymd_hm\"  \"ymd_h\"   \"dmy_hms\" \"dmy_hm\"  #> [15] \"dmy_h\"   \"mdy_hms\" \"mdy_hm\"  \"mdy_h\"   \"ydm_hms\" \"ydm_hm\"  \"ydm_h\""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_af_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Default transformations to apply to association file columns. — default_af_transform","title":"Default transformations to apply to association file columns. — default_af_transform","text":"list default transformations apply association file columns importing via import_association_file()","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_af_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default transformations to apply to association file columns. — default_af_transform","text":"","code":"default_af_transform(convert_tp)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_af_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default transformations to apply to association file columns. — default_af_transform","text":"convert_tp value argument convert_tp call import_association_file()","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_af_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default transformations to apply to association file columns. — default_af_transform","text":"named list lambdas","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_af_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default transformations to apply to association file columns. — default_af_transform","text":"","code":"default_af_transform(TRUE) #> $TimepointMonths #> ~stringr::str_pad(as.character(.x), pad = \"0\", side = \"left\",  #>     width = max(nchar(as.character(.x))) + 1) #> <environment: 0x563954ec3908> #>  #> $TimepointYears #> ~stringr::str_pad(as.character(.x), pad = \"0\", side = \"left\",  #>     width = max(nchar(as.character(.x))) + 1) #> <environment: 0x563954ec3908> #>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_iss_file_prefixes.html","id":null,"dir":"Reference","previous_headings":"","what":"Default regex prefixes for Vispa2 stats files. — default_iss_file_prefixes","title":"Default regex prefixes for Vispa2 stats files. — default_iss_file_prefixes","text":"Note element regular expression.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_iss_file_prefixes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default regex prefixes for Vispa2 stats files. — default_iss_file_prefixes","text":"","code":"default_iss_file_prefixes()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_iss_file_prefixes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default regex prefixes for Vispa2 stats files. — default_iss_file_prefixes","text":"character vector regexes","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_iss_file_prefixes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default regex prefixes for Vispa2 stats files. — default_iss_file_prefixes","text":"","code":"default_iss_file_prefixes() #> [1] \"stats\\\\.sequence.\" \"stats\\\\.matrix.\""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_meta_agg.html","id":null,"dir":"Reference","previous_headings":"","what":"Default metadata aggregation function table — default_meta_agg","title":"Default metadata aggregation function table — default_meta_agg","text":"default columns-function specifications aggregate_metadata","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_meta_agg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default metadata aggregation function table — default_meta_agg","text":"","code":"default_meta_agg()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_meta_agg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default metadata aggregation function table — default_meta_agg","text":"data frame","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_meta_agg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default metadata aggregation function table — default_meta_agg","text":"data frame contains four columns: Column: holds name column association file processed Function: contains either name function (e.g. mean) purrr-style lambda (e.g. ~ mean(.x, na.rm = TRUE)). function applied corresponding column specified Column Args: optional additional arguments pass corresponding function. relevant corresponding Function simple function purrr-style lambda. Output_colname: glue specification used determine unique output column name. See glue details.","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_meta_agg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default metadata aggregation function table — default_meta_agg","text":"","code":"default_meta_agg() #> # A tibble: 15 × 4 #>    Column               Function  Args  Output_colname #>    <chr>                <list>    <lgl> <chr>          #>  1 FusionPrimerPCRDate  <formula> NA    {.col}_min     #>  2 LinearPCRDate        <formula> NA    {.col}_min     #>  3 VCN                  <formula> NA    {.col}_avg     #>  4 ng DNA corrected     <formula> NA    {.col}_avg     #>  5 Kapa                 <formula> NA    {.col}_avg     #>  6 ng DNA corrected     <formula> NA    {.col}_sum     #>  7 ulForPool            <formula> NA    {.col}_sum     #>  8 BARCODE_MUX          <formula> NA    {.col}_sum     #>  9 TRIMMING_FINAL_LTRLC <formula> NA    {.col}_sum     #> 10 LV_MAPPED            <formula> NA    {.col}_sum     #> 11 BWA_MAPPED_OVERALL   <formula> NA    {.col}_sum     #> 12 ISS_MAPPED_OVERALL   <formula> NA    {.col}_sum     #> 13 PCRMethod            <formula> NA    {.col}         #> 14 NGSTechnology        <formula> NA    {.col}         #> 15 DNAnumber            <formula> NA    {.col}"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_rec_agg_lambdas.html","id":null,"dir":"Reference","previous_headings":"","what":"Defaults for column aggregations in compute_near_integrations(). — default_rec_agg_lambdas","title":"Defaults for column aggregations in compute_near_integrations(). — default_rec_agg_lambdas","text":"Defaults column aggregations compute_near_integrations().","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_rec_agg_lambdas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defaults for column aggregations in compute_near_integrations(). — default_rec_agg_lambdas","text":"","code":"default_rec_agg_lambdas()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_rec_agg_lambdas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defaults for column aggregations in compute_near_integrations(). — default_rec_agg_lambdas","text":"named list lambdas","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_rec_agg_lambdas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defaults for column aggregations in compute_near_integrations(). — default_rec_agg_lambdas","text":"","code":"default_rec_agg_lambdas() #> $character #> ~paste0(.x, collapse = \";\") #> <environment: 0x56394c26be38> #>  #> $integer #> ~sum(.x, na.rm = TRUE) #> <environment: 0x56394c26be38> #>  #> $double #> ~sum(.x, na.rm = TRUE) #> <environment: 0x56394c26be38> #>  #> $logical #> ~all(.x) #> <environment: 0x56394c26be38> #>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_report_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Default folder for saving ISAnalytics reports. Supplied as default\nargument for several functions. — default_report_path","title":"Default folder for saving ISAnalytics reports. Supplied as default\nargument for several functions. — default_report_path","text":"Default folder saving ISAnalytics reports. Supplied default argument several functions.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_report_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default folder for saving ISAnalytics reports. Supplied as default\nargument for several functions. — default_report_path","text":"","code":"default_report_path()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_report_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default folder for saving ISAnalytics reports. Supplied as default\nargument for several functions. — default_report_path","text":"path","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_report_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default folder for saving ISAnalytics reports. Supplied as default\nargument for several functions. — default_report_path","text":"","code":"default_report_path() #> /home/runner/ISAnalytics_reports"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"A set of pre-defined functions for sample_statistics. — default_stats","title":"A set of pre-defined functions for sample_statistics. — default_stats","text":"set pre-defined functions sample_statistics.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A set of pre-defined functions for sample_statistics. — default_stats","text":"","code":"default_stats()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A set of pre-defined functions for sample_statistics. — default_stats","text":"named list functions/purrr-style lambdas","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/default_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A set of pre-defined functions for sample_statistics. — default_stats","text":"","code":"default_stats() #> $sum #> ~sum(.x, na.rm = TRUE) #> <environment: 0x56394d3edd78> #>  #> $count #> function (x)  .Primitive(\"length\") #>  #> $shannon #> ~vegan::diversity(.x, index = \"shannon\") #> <environment: 0x56394d3edd78> #>  #> $simpson #> ~vegan::diversity(.x, index = \"simpson\") #> <environment: 0x56394d3edd78> #>  #> $invsimpson #> ~vegan::diversity(.x, index = \"invsimpson\") #> <environment: 0x56394d3edd78> #>  #> $describe #> ~tibble::as_tibble(psych::describe(.x)) #> <environment: 0x56394d3edd78> #>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/enable_progress_bars.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable global progress bars for ISAnalytics functions. — enable_progress_bars","title":"Enable global progress bars for ISAnalytics functions. — enable_progress_bars","text":"simple wrapper around functions package progressr. customize appearance progress bar, please refer progressr documentation.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/enable_progress_bars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable global progress bars for ISAnalytics functions. — enable_progress_bars","text":"","code":"enable_progress_bars()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/enable_progress_bars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enable global progress bars for ISAnalytics functions. — enable_progress_bars","text":"NULL","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/enable_progress_bars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enable global progress bars for ISAnalytics functions. — enable_progress_bars","text":"","code":"enable_progress_bars() #> Error in globalCallingHandlers(condition = global_progression_handler): should not be called with handlers on the stack progressr::handlers(global = FALSE) # Deactivate #> Error in globalCallingHandlers(NULL): should not be called with handlers on the stack"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/export_ISA_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a dynamic vars settings profile. — export_ISA_settings","title":"Export a dynamic vars settings profile. — export_ISA_settings","text":"function allows exporting currently set dynamic vars json format can quickly imported later. Dynamic variables need properly set via setter functions calling function. details, refer dedicated vignette vignette(\"workflow_start\", package=\"ISAnalytics\").","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/export_ISA_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a dynamic vars settings profile. — export_ISA_settings","text":"","code":"export_ISA_settings(folder, setting_profile_name)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/export_ISA_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a dynamic vars settings profile. — export_ISA_settings","text":"folder path folder file saved. folder exist, gets created automatically setting_profile_name name settings profile","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/export_ISA_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a dynamic vars settings profile. — export_ISA_settings","text":"NULL","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/export_ISA_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a dynamic vars settings profile. — export_ISA_settings","text":"","code":"tmp_folder <- tempdir() export_ISA_settings(tmp_folder, \"DEFAULT\") #> Settings profile correctly saved #> ℹ Saved at: /tmp/Rtmp4dK4Uf/DEFAULT_ISAsettings.json"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/fisher_scatterplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot results of gene frequency Fisher's exact test. — fisher_scatterplot","title":"Plot results of gene frequency Fisher's exact test. — fisher_scatterplot","text":"Plots results Fisher's exact test gene frequency obtained via gene_frequency_fisher() scatterplot.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/fisher_scatterplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot results of gene frequency Fisher's exact test. — fisher_scatterplot","text":"","code":"fisher_scatterplot(   fisher_df,   p_value_col = \"Fisher_p_value_fdr\",   annot_threshold = 0.05,   annot_color = \"red\",   gene_sym_col = \"GeneName\",   do_not_highlight = NULL,   keep_not_highlighted = TRUE )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/fisher_scatterplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot results of gene frequency Fisher's exact test. — fisher_scatterplot","text":"fisher_df Test results obtained via gene_frequency_fisher() p_value_col Name column containing p-value consider annot_threshold Annotate different color point significance threshold. Single numerical value. annot_color color points threshold annotated gene_sym_col name column containing gene symbol do_not_highlight Either NULL, character vector, expression purrr-style lambda. Tells function ignore highlighting labeling genes even p-value threshold. See details. keep_not_highlighted present, highlighted genes treated? set TRUE points plotted colored chosen color scale. set FALSE points removed entirely plot.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/fisher_scatterplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot results of gene frequency Fisher's exact test. — fisher_scatterplot","text":"plot","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/fisher_scatterplot.html","id":"specifying-genes-to-avoid-highlighting","dir":"Reference","previous_headings":"","what":"Specifying genes to avoid highlighting","title":"Plot results of gene frequency Fisher's exact test. — fisher_scatterplot","text":"cases, users might want avoid highlighting certain genes even p-value threshold. , use argument do_not_highlight: character vectors appropriate specific genes excluded, expressions lambdas allow finer control. example can supply:   expression, genes p-value < threshold start \"MIR\" average_TxLen_1 lower 300 excluded highlighted points. NOTE: keep mind expressions evaluated inside dplyr::filter context. Similarly, lambdas passed filtering function operate column containing gene symbol.","code":"expr <- rlang::expr(!stringr::str_starts(GeneName, \"MIR\") &                       average_TxLen_1 >= 300) lambda <- ~ stringr::str_starts(.x, \"MIR\")"},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/fisher_scatterplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot results of gene frequency Fisher's exact test. — fisher_scatterplot","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) cis <- CIS_grubbs(aggreg, by = \"SubjectID\") #> Warning: Warning: missing genes in refgenes table #> ℹ A total of 5 genes were found in the input data but not in the refgene table. This may be caused by a mismatch in the annotation phase of the matrix. Here is a summary:  #> # A tibble: 5 × 3 #>   GeneName  GeneStrand chr   #>   <chr>     <chr>      <chr> #> 1 PLEKHG4B  -          14    #> 2 CRELD2    -          15    #> 3 UBE2D2    +          16    #> 4 LINC01133 +          19    #> 5 HTR4      +          6     #> ℹ NOTE: missing genes will be removed from the final output! Review results carefully #> ℹ A total of 25 IS will be removed because of missing genes ( 2.33 % of total IS in input) fisher <- gene_frequency_fisher(cis$cis$PT001, cis$cis$PT002,     min_is_per_gene = 2 ) fisher_scatterplot(fisher)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/gene_frequency_fisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Fisher's exact test on gene frequencies. — gene_frequency_fisher","title":"Compute Fisher's exact test on gene frequencies. — gene_frequency_fisher","text":"Provided 2 data frames calculations CIS, via CIS_grubbs(), computes Fisher's exact test. Results can plotted via fisher_scatterplot().","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/gene_frequency_fisher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Fisher's exact test on gene frequencies. — gene_frequency_fisher","text":"","code":"gene_frequency_fisher(   cis_x,   cis_y,   min_is_per_gene = 3,   gene_set_method = c(\"intersection\", \"union\"),   onco_db_file = \"proto_oncogenes\",   tumor_suppressors_db_file = \"tumor_suppressors\",   species = \"human\",   known_onco = known_clinical_oncogenes(),   suspicious_genes = clinical_relevant_suspicious_genes(),   significance_threshold = 0.05,   remove_unbalanced_0 = TRUE )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/gene_frequency_fisher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Fisher's exact test on gene frequencies. — gene_frequency_fisher","text":"cis_x data frame obtained via CIS_grubbs() cis_y data frame obtained via CIS_grubbs() min_is_per_gene Used pre-filtering purposes. Genes number distinct integration less number filtered prior calculations. Single numeric integer. gene_set_method One \"intersection\" \"union\". merging 2 data frames, intersection perform inner join operation, union perform full join operation. onco_db_file Uniprot file proto-oncogenes (see details). different default, supplied path file. tumor_suppressors_db_file Uniprot file tumor-suppressor genes. different default, supplied path file. species One \"human\", \"mouse\" \"\" known_onco Data frame known oncogenes. See details. suspicious_genes Data frame clinical relevant suspicious genes. See details. significance_threshold Significance threshold Fisher's test p-value remove_unbalanced_0 Remove final output pairs one group number non-missing group less mean number group","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/gene_frequency_fisher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Fisher's exact test on gene frequencies. — gene_frequency_fisher","text":"data frame","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/gene_frequency_fisher.html","id":"oncogene-and-tumor-suppressor-genes-files","dir":"Reference","previous_headings":"","what":"Oncogene and tumor suppressor genes files","title":"Compute Fisher's exact test on gene frequencies. — gene_frequency_fisher","text":"files included package user convenience simply UniProt files gene annotations human mouse. details files generated use help ?tumor_suppressors, ?proto_oncogenes","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/gene_frequency_fisher.html","id":"known-oncogenes","dir":"Reference","previous_headings":"","what":"Known oncogenes","title":"Compute Fisher's exact test on gene frequencies. — gene_frequency_fisher","text":"default values included package can accessed :   user wants change parameter input data frame must preserve column structure. goes suspicious_genes parameter (DOIReference column optional):","code":"known_clinical_oncogenes() clinical_relevant_suspicious_genes()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/gene_frequency_fisher.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Compute Fisher's exact test on gene frequencies. — gene_frequency_fisher","text":"function explicitly check presence tags: gene_symbol","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/gene_frequency_fisher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Fisher's exact test on gene frequencies. — gene_frequency_fisher","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) cis <- CIS_grubbs(aggreg, by = \"SubjectID\") #> Warning: Warning: missing genes in refgenes table #> ℹ A total of 5 genes were found in the input data but not in the refgene table. This may be caused by a mismatch in the annotation phase of the matrix. Here is a summary:  #> # A tibble: 5 × 3 #>   GeneName  GeneStrand chr   #>   <chr>     <chr>      <chr> #> 1 PLEKHG4B  -          14    #> 2 CRELD2    -          15    #> 3 UBE2D2    +          16    #> 4 LINC01133 +          19    #> 5 HTR4      +          6     #> ℹ NOTE: missing genes will be removed from the final output! Review results carefully #> ℹ A total of 25 IS will be removed because of missing genes ( 2.33 % of total IS in input) fisher <- gene_frequency_fisher(cis$cis$PT001, cis$cis$PT002,     min_is_per_gene = 2 ) fisher #> # A tibble: 1 × 28 #>   GeneName n_IS_perGene_1 average_TxLen_1 raw_gene_integration_frequency_1 #>   <chr>             <int>           <dbl>                            <dbl> #> 1 KMT5B                 2          54306.                        0.0000368 #> # ℹ 24 more variables: IS_per_kbGeneLen_1 <dbl>, Sum_IS_per_kbGeneLen_1 <dbl>, #> #   IS_per_kbGeneLen_perMDepth_TPM_1 <dbl>, n_IS_perGene_2 <int>, #> #   average_TxLen_2 <dbl>, raw_gene_integration_frequency_2 <dbl>, #> #   IS_per_kbGeneLen_2 <dbl>, Sum_IS_per_kbGeneLen_2 <dbl>, #> #   IS_per_kbGeneLen_perMDepth_TPM_2 <dbl>, Onco1_TS2 <dbl>, #> #   KnownClonalExpansion <lgl>, ClinicalRelevance <lgl>, DOIReference <chr>, #> #   KnownGeneClass <chr>, CriticalForInsMut <lgl>, tot_n_IS_perGene_1 <int>, …"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_Vispa2_launch_AF.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a reduced association file for a VISPA2 run,\ngiven project and pool — generate_Vispa2_launch_AF","title":"Creates a reduced association file for a VISPA2 run,\ngiven project and pool — generate_Vispa2_launch_AF","text":"function selects appropriate columns prepares file launch VISPA2 pipeline project/pool pair specified.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_Vispa2_launch_AF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a reduced association file for a VISPA2 run,\ngiven project and pool — generate_Vispa2_launch_AF","text":"","code":"generate_Vispa2_launch_AF(association_file, project, pool, path)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_Vispa2_launch_AF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a reduced association file for a VISPA2 run,\ngiven project and pool — generate_Vispa2_launch_AF","text":"association_file imported association file (via import_association_file()) project vector characters containing project names pool vector characters containing pool names path single string representing path folder files written. folder exist created.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_Vispa2_launch_AF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a reduced association file for a VISPA2 run,\ngiven project and pool — generate_Vispa2_launch_AF","text":"NULL","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_Vispa2_launch_AF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a reduced association file for a VISPA2 run,\ngiven project and pool — generate_Vispa2_launch_AF","text":"Note: function vectorized, meaning can specify one project one pool vectors characters, must ensure : project pool vectors length correclty type names corresponding positions, example c(\"PJ01\", \"PJ01\") - c(\"POOL01\", \"POOL02\"). type pool position corresponding project match file produced since pool exist corresponding project.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_Vispa2_launch_AF.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Creates a reduced association file for a VISPA2 run,\ngiven project and pool — generate_Vispa2_launch_AF","text":"function explicitly check presence tags: cell_marker fusion_id pcr_repl_id pool_id project_id subject tag_id tissue tp_days vector_id names pools pool argument checked column corresponding pool_id tag.","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_Vispa2_launch_AF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a reduced association file for a VISPA2 run,\ngiven project and pool — generate_Vispa2_launch_AF","text":"","code":"temp <- tempdir() data(\"association_file\", package = \"ISAnalytics\") generate_Vispa2_launch_AF(association_file, \"PJ01\", \"POOL01\", temp)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_blank_association_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a blank association file. — generate_blank_association_file","title":"Create a blank association file. — generate_blank_association_file","text":"Produces blank association file start using VISPA2 ISAnalytics","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_blank_association_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a blank association file. — generate_blank_association_file","text":"","code":"generate_blank_association_file(path)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_blank_association_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a blank association file. — generate_blank_association_file","text":"path path disk file written - must file","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_blank_association_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a blank association file. — generate_blank_association_file","text":"NULL","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_blank_association_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a blank association file. — generate_blank_association_file","text":"","code":"temp <- tempfile() generate_blank_association_file(temp)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_default_folder_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a default folder structure, following VISPA2 standards — generate_default_folder_structure","title":"Generate a default folder structure, following VISPA2 standards — generate_default_folder_structure","text":"function produces folder structure file system provided path respects VISPA2 standards, package-included data.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_default_folder_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a default folder structure, following VISPA2 standards — generate_default_folder_structure","text":"","code":"generate_default_folder_structure(   type = \"correct\",   dir = tempdir(),   af = \"default\",   matrices = \"default\" )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_default_folder_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a default folder structure, following VISPA2 standards — generate_default_folder_structure","text":"type One value \"correct\", \"incorrect\" \"\". Tells function wheter produce correct structure introduce errors (mainly testing purposes). dir Path folder structure produced af Either \"default\" association file provided example package custom association file data frame matrices Either \"default\" integration matrices provided example package custom multi-quantification matrix","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_default_folder_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a default folder structure, following VISPA2 standards — generate_default_folder_structure","text":"named list containing path association file path top level folder(s) structure","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_default_folder_structure.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Generate a default folder structure, following VISPA2 standards — generate_default_folder_structure","text":"function explicitly check presence tags: project_id tag_seq vispa_concatenate","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/generate_default_folder_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a default folder structure, following VISPA2 standards — generate_default_folder_structure","text":"","code":"fs_path <- generate_default_folder_structure(type = \"correct\") fs_path #> $af #> /tmp/Rtmp4dK4Uf/asso_file.tsv #>  #> $root #> /tmp/Rtmp4dK4Uf/fs #>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_ISA_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a dynamic vars settings profile. — import_ISA_settings","title":"Import a dynamic vars settings profile. — import_ISA_settings","text":"function allows import existing dynamic vars profile json format. quick convenient way set workflow, alternative specifying lookup tables manually corresponding setter functions. details, refer dedicated vignette vignette(\"workflow_start\", package=\"ISAnalytics\").","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_ISA_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a dynamic vars settings profile. — import_ISA_settings","text":"","code":"import_ISA_settings(path)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_ISA_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a dynamic vars settings profile. — import_ISA_settings","text":"path path json file disk","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_ISA_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a dynamic vars settings profile. — import_ISA_settings","text":"NULL","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_ISA_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a dynamic vars settings profile. — import_ISA_settings","text":"","code":"tmp_folder <- tempdir() export_ISA_settings(tmp_folder, \"DEFAULT\") #> Settings profile correctly saved #> ℹ Saved at: /tmp/Rtmp4dK4Uf/DEFAULT_ISAsettings.json import_ISA_settings(fs::path(tmp_folder, \"DEFAULT_ISAsettings.json\")) #> Mandatory IS vars successfully changed #> Annotation IS vars successfully changed #> Association file columns specs successfully changed #> ISS stats specs successfully changed #> Matrix suffixes specs successfully changed reset_dyn_vars_config() #> Mandatory IS vars reset to default #> Annotation IS vars reset to default #> Association file columns specs reset to default #> ISS stats specs reset to default #> Matrix suffixes specs reset to default"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_Vispa2_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Vispa2 stats given the aligned association file. — import_Vispa2_stats","title":"Import Vispa2 stats given the aligned association file. — import_Vispa2_stats","text":"Imports Vispa2 stats files pool provided association file aligned file system (see import_association_file).","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_Vispa2_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Vispa2 stats given the aligned association file. — import_Vispa2_stats","text":"","code":"import_Vispa2_stats(   association_file,   file_prefixes = default_iss_file_prefixes(),   join_with_af = TRUE,   pool_col = \"concatenatePoolIDSeqRun\",   report_path = default_report_path() )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_Vispa2_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Vispa2 stats given the aligned association file. — import_Vispa2_stats","text":"association_file file system aligned association file (contains columns absolute paths 'iss' folder) file_prefixes character vector known file prefixes match file names. NOTE: elements represent regular expressions. defaults see default_iss_file_prefixes. join_with_af Logical, TRUE imported stats files merged association file, FALSE single data frame holding stats returned. pool_col single string. name pool column used Vispa2 run? used key perform join operation stats files POOL column. report_path path report file saved. Can folder NULL report produced. Defaults {user_home}/ISAnalytics_reports.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_Vispa2_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Vispa2 stats given the aligned association file. — import_Vispa2_stats","text":"data frame","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_Vispa2_stats.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Import Vispa2 stats given the aligned association file. — import_Vispa2_stats","text":"function explicitly check presence tags: project_id tag_seq vispa_concatenate pcr_repl_id","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_Vispa2_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Vispa2 stats given the aligned association file. — import_Vispa2_stats","text":"","code":"fs_path <- generate_default_folder_structure(type = \"correct\") af <- import_association_file(fs_path$af,     root = fs_path$root,     import_iss = FALSE,     report_path = NULL ) stats_files <- import_Vispa2_stats(af,     join_with_af = FALSE,     report_path = NULL ) head(stats_files) #> # A tibble: 6 × 14 #>   POOL     TAG       RUN_NAME     PHIX_MAPPING PLASMID_MAPPED_BYPOOL BARCODE_MUX #>   <chr>    <chr>     <chr>               <dbl>                 <dbl>       <dbl> #> 1 POOL01-1 LTR75LC38 PJ01|POOL01…     43586699               2256176      645026 #> 2 POOL01-1 LTR53LC32 PJ01|POOL01…     43586699               2256176      652208 #> 3 POOL01-1 LTR83LC66 PJ01|POOL01…     43586699               2256176      451519 #> 4 POOL01-1 LTR27LC94 PJ01|POOL01…     43586699               2256176      426500 #> 5 POOL01-1 LTR69LC52 PJ01|POOL01…     43586699               2256176       18300 #> 6 POOL01-1 LTR37LC2  PJ01|POOL01…     43586699               2256176      729327 #> # ℹ 8 more variables: LTR_IDENTIFIED <dbl>, TRIMMING_FINAL_LTRLC <dbl>, #> #   LV_MAPPED <dbl>, BWA_MAPPED_OVERALL <dbl>, ISS_MAPPED_OVERALL <dbl>, #> #   RAW_READS <lgl>, QUALITY_PASSED <lgl>, ISS_MAPPED_PP <lgl>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_association_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Import the association file from disk — import_association_file","title":"Import the association file from disk — import_association_file","text":"Imports association file optionally performs check file system starting root assess alignment two.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_association_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import the association file from disk — import_association_file","text":"","code":"import_association_file(   path,   root = NULL,   dates_format = \"ymd\",   separator = \"\\t\",   filter_for = NULL,   import_iss = FALSE,   convert_tp = TRUE,   report_path = default_report_path(),   transformations = default_af_transform(convert_tp),   tp_padding = lifecycle::deprecated(),   ... )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_association_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import the association file from disk — import_association_file","text":"path path disk association file. root path disk root folder VISPA2 output NULL. See details. dates_format single string indicating dates parsed. Must value : date_formats() separator column separator used file filter_for named list names represent column names must filtered. example: list(ProjectID = c(\"PROJECT1\", \"PROJECT2)) filter association file contains rows value column \"ProjectID\" one specified values. multiple columns present list filtering conditions applied logical . import_iss Import VISPA2 pool stats merge association file? Logical value convert_tp time points converted months years? Logical value report_path path report file saved. Can folder NULL report produced. Defaults {user_home}/ISAnalytics_reports. transformations Either NULL named list purrr-style lambdas names column names function applied . tp_padding Deprecated. Use transformations instead. ... Additional arguments pass import_Vispa2_stats","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_association_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import the association file from disk — import_association_file","text":"data frame containing metadata","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_association_file.html","id":"transformations","dir":"Reference","previous_headings":"","what":"Transformations","title":"Import the association file from disk — import_association_file","text":"Lambdas provided input transformations argument, must transformations, aka functions take input vector return vector length input. transformation list contains column names present data frame, simply ignored.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_association_file.html","id":"file-system-alignment","dir":"Reference","previous_headings":"","what":"File system alignment","title":"Import the association file from disk — import_association_file","text":"root argument set NULL file system alignment performed. allows import basic file possible perform automated matrix stats import. details see \"use import functions\" vignette: vignette(\"workflow_start\", package = \"ISAnalytics\")","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_association_file.html","id":"time-point-conversion","dir":"Reference","previous_headings":"","what":"Time point conversion","title":"Import the association file from disk — import_association_file","text":"time point conversion based following logic, given TPD column containing time point expressed days TPM TPY respectively time points expressed month years TPD NA --> NA (months years) TPM = 0, TPY = 0 TPD = 0 conversion months: TPM = ceiling(TPD/30) TPD < 30 otherwise TPM = round(TPD/30) conversion years: TPY = ceiling(TPD/360)","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_association_file.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Import the association file from disk — import_association_file","text":"function explicitly check presence tags: project_id pool_id tag_seq subject tissue tp_days cell_marker pcr_replicate vispa_concatenate pcr_repl_id proj_folder function use available specifications contained association_file_columns(TRUE) read parse file. specifications contain columns type \"date\", function parse generic date format dates_format argument.","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_association_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import the association file from disk — import_association_file","text":"","code":"fs_path <- generate_default_folder_structure(type = \"correct\") af <- import_association_file(fs_path$af,     root = fs_path$root,     report_path = NULL ) head(af) #> # A tibble: 6 × 74 #>   ProjectID FUSIONID  PoolID TagSequence SubjectID VectorType VectorID #>   <chr>     <chr>     <chr>  <chr>       <chr>     <chr>      <chr>    #> 1 PJ01      ET#382.46 POOL01 LTR75LC38   PT001     lenti      GLOBE    #> 2 PJ01      ET#381.40 POOL01 LTR53LC32   PT001     lenti      GLOBE    #> 3 PJ01      ET#381.9  POOL01 LTR83LC66   PT001     lenti      GLOBE    #> 4 PJ01      ET#381.71 POOL01 LTR27LC94   PT001     lenti      GLOBE    #> 5 PJ01      ET#381.2  POOL01 LTR69LC52   PT001     lenti      GLOBE    #> 6 PJ01      ET#382.28 POOL01 LTR37LC2    PT001     lenti      GLOBE    #> # ℹ 67 more variables: ExperimentID <chr>, Tissue <chr>, TimePoint <chr>, #> #   DNAFragmentation <chr>, PCRMethod <chr>, TagIDextended <chr>, #> #   Keywords <chr>, CellMarker <chr>, TagID <chr>, NGSProvider <chr>, #> #   NGSTechnology <chr>, ConverrtedFilesDir <chr>, ConverrtedFilesName <chr>, #> #   SourceFileFolder <chr>, SourceFileNameR1 <chr>, SourceFileNameR2 <chr>, #> #   DNAnumber <chr>, ReplicateNumber <int>, DNAextractionDate <date>, #> #   DNAngUsed <dbl>, LinearPCRID <chr>, LinearPCRDate <date>, …"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_parallel_Vispa2Matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Import integration matrices from paths in the association file. — import_parallel_Vispa2Matrices","title":"Import integration matrices from paths in the association file. — import_parallel_Vispa2Matrices","text":"function offers convenient way importing multiple integration matrices automated semi-automated way. details see \"use import functions\" vignette: vignette(\"workflow_start\", package = \"ISAnalytics\")","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_parallel_Vispa2Matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import integration matrices from paths in the association file. — import_parallel_Vispa2Matrices","text":"","code":"import_parallel_Vispa2Matrices(   association_file,   quantification_type = c(\"seqCount\", \"fragmentEstimate\"),   matrix_type = c(\"annotated\", \"not_annotated\"),   workers = 2,   multi_quant_matrix = TRUE,   report_path = default_report_path(),   patterns = NULL,   matching_opt = matching_options(),   mode = \"AUTO\",   ... )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_parallel_Vispa2Matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import integration matrices from paths in the association file. — import_parallel_Vispa2Matrices","text":"association_file Data frame imported via import_association_file (file system alignment) quantification_type vector requested quantification_types. Possible choices quantification_types matrix_type single string representing type matrices imported. Can one \"annotated\" \"not_annotated\". workers single integer representing number parallel workers use import multi_quant_matrix set TRUE produce multi-quantification matrix comparison_matrix instead list. report_path path report file saved. Can folder NULL report produced. Defaults {user_home}/ISAnalytics_reports. patterns character vector additional patterns match file names. Please note patterns must regular expressions. Can NULL patterns need matched. matching_opt single value matching_options mode AUTO supported. ISAnalytics 1.8.3, value INTERACTIVE officially deprecated. ... <dynamic-dots> Additional named arguments pass comparison_matrix import_single_Vispa2_matrix","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_parallel_Vispa2Matrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import integration matrices from paths in the association file. — import_parallel_Vispa2Matrices","text":"Either multi-quantification matrix list integration matrices","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_parallel_Vispa2Matrices.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Import integration matrices from paths in the association file. — import_parallel_Vispa2Matrices","text":"function explicitly check presence tags: project_id vispa_concatenate","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_parallel_Vispa2Matrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import integration matrices from paths in the association file. — import_parallel_Vispa2Matrices","text":"","code":"fs_path <- generate_default_folder_structure(type = \"correct\") af <- import_association_file(fs_path$af,     root = fs_path$root,     report_path = NULL ) matrices <- import_parallel_Vispa2Matrices(af,     c(\"seqCount\", \"fragmentEstimate\"),     mode = \"AUTO\", report_path = NULL ) head(matrices) #> # A tibble: 6 × 8 #>   chr   integration_locus strand GeneName     GeneStrand CompleteAmplificationID #>   <chr>             <int> <chr>  <chr>        <chr>      <chr>                   #> 1 16             68164148 +      NFATC3       +          PJ01_POOL01_LTR75LC38_… #> 2 4             129390130 +      LOC100507487 +          PJ01_POOL01_LTR75LC38_… #> 3 5              84009671 -      EDIL3        -          PJ01_POOL01_LTR75LC38_… #> 4 12             54635693 -      CBX5         -          PJ01_POOL01_LTR75LC38_… #> 5 2             181930711 +      UBE2E3       +          PJ01_POOL01_LTR75LC38_… #> 6 20             35920986 +      MANBAL       +          PJ01_POOL01_LTR75LC38_… #> # ℹ 2 more variables: fragmentEstimate <dbl>, seqCount <int>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_parallel_Vispa2Matrices_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"Import integration matrices from association file. — import_parallel_Vispa2Matrices_auto","title":"Import integration matrices from association file. — import_parallel_Vispa2Matrices_auto","text":"function deprecated avoid redundancy. Please refer import_parallel_Vispa2Matrices.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_parallel_Vispa2Matrices_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import integration matrices from association file. — import_parallel_Vispa2Matrices_auto","text":"","code":"import_parallel_Vispa2Matrices_auto(   association_file,   quantification_type,   matrix_type = \"annotated\",   workers = 2,   multi_quant_matrix = TRUE,   patterns = NULL,   matching_opt = matching_options(),   export_report_path = NULL,   ... )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_parallel_Vispa2Matrices_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import integration matrices from association file. — import_parallel_Vispa2Matrices_auto","text":"data frame list","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_parallel_Vispa2Matrices_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Import integration matrices from association file. — import_parallel_Vispa2Matrices_interactive","title":"Import integration matrices from association file. — import_parallel_Vispa2Matrices_interactive","text":"function deprecated avoid redundancy. Please refer import_parallel_Vispa2Matrices.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_parallel_Vispa2Matrices_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import integration matrices from association file. — import_parallel_Vispa2Matrices_interactive","text":"","code":"import_parallel_Vispa2Matrices_interactive(   association_file,   quantification_type,   matrix_type = \"annotated\",   workers = 2,   multi_quant_matrix = TRUE,   export_report_path = NULL,   ... )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_parallel_Vispa2Matrices_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import integration matrices from association file. — import_parallel_Vispa2Matrices_interactive","text":"data frame list","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_single_Vispa2Matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a single integration matrix from file — import_single_Vispa2Matrix","title":"Import a single integration matrix from file — import_single_Vispa2Matrix","text":"function allows read import integration matrix (ideally produced VISPA2) converts tidy format.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_single_Vispa2Matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a single integration matrix from file — import_single_Vispa2Matrix","text":"","code":"import_single_Vispa2Matrix(   path,   separator = \"\\t\",   additional_cols = NULL,   transformations = NULL,   sample_names_to = pcr_id_column(),   values_to = \"Value\",   to_exclude = lifecycle::deprecated(),   keep_excluded = lifecycle::deprecated() )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_single_Vispa2Matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a single integration matrix from file — import_single_Vispa2Matrix","text":"path path file disk separator column delimiter used, defaults \\t additional_cols Either NULL, named character vector named list. See details. transformations Either NULL named list purrr-style lambdas names column names function applied . sample_names_to Name output column holding sample identifier. Defaults pcr_id_column() values_to Name output column holding quantification values. Defaults Value. to_exclude Deprecated. Use additonal_cols instead keep_excluded Deprecated. Use additonal_cols instead","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_single_Vispa2Matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a single integration matrix from file — import_single_Vispa2Matrix","text":"data frame object tidy format","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_single_Vispa2Matrix.html","id":"additional-columns","dir":"Reference","previous_headings":"","what":"Additional columns","title":"Import a single integration matrix from file — import_single_Vispa2Matrix","text":"Additional columns annotation columns present integration matrix import part mandatory vars (see mandatory_IS_vars()) part annotation vars (see annotation_IS_vars()) sample identifier column quantification column specified tell function treat columns import phase, providing named character vector, names correspond additional column names values choice following: \"char\" character (strings) \"int\" integers \"logi\" logical values (TRUE / FALSE) \"numeric\" numeric values \"factor\" factors \"date\" generic date format - note functions need read parse files try guess format parsing may fail One accepted date/datetime formats lubridate, can use ISAnalytics::date_formats() view accepted formats \"_\" drop column details see \"use import functions\" vignette: vignette(\"workflow_start\", package = \"ISAnalytics\")","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_single_Vispa2Matrix.html","id":"transformations","dir":"Reference","previous_headings":"","what":"Transformations","title":"Import a single integration matrix from file — import_single_Vispa2Matrix","text":"Lambdas provided input transformations argument, must transformations, aka functions take input vector return vector length input. transformation list contains column names present data frame, simply ignored.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_single_Vispa2Matrix.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Import a single integration matrix from file — import_single_Vispa2Matrix","text":"function explicitly check presence tags: columns declared mandatory_IS_vars()","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/import_single_Vispa2Matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a single integration matrix from file — import_single_Vispa2Matrix","text":"","code":"fs_path <- generate_default_folder_structure(type = \"correct\") matrix_path <- fs::path(     fs_path$root, \"PJ01\", \"quantification\",     \"POOL01-1\", \"PJ01_POOL01-1_seqCount_matrix.no0.annotated.tsv.gz\" ) matrix <- import_single_Vispa2Matrix(matrix_path) #> Reading file... #> ℹ Mode: fread #> Reshaping... #> *** File info ***  #> • --- Annotated: TRUE #> • --- Dimensions: 261 x 29 #> • --- Read mode: fread #> • --- Sample count: 24 head(matrix) #> # A tibble: 6 × 7 #>   chr   integration_locus strand GeneName     GeneStrand CompleteAmplificationID #>   <chr>             <int> <chr>  <chr>        <chr>      <chr>                   #> 1 16             68164148 +      NFATC3       +          PJ01_POOL01_LTR75LC38_… #> 2 4             129390130 +      LOC100507487 +          PJ01_POOL01_LTR75LC38_… #> 3 5              84009671 -      EDIL3        -          PJ01_POOL01_LTR75LC38_… #> 4 12             54635693 -      CBX5         -          PJ01_POOL01_LTR75LC38_… #> 5 2             181930711 +      UBE2E3       +          PJ01_POOL01_LTR75LC38_… #> 6 20             35920986 +      MANBAL       +          PJ01_POOL01_LTR75LC38_… #> # ℹ 1 more variable: Value <int>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/inspect_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve description of a tag by name. — inspect_tags","title":"Retrieve description of a tag by name. — inspect_tags","text":"Given one multiple tags, prints associated description functions tag explicitly used.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/inspect_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve description of a tag by name. — inspect_tags","text":"","code":"inspect_tags(tags)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/inspect_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve description of a tag by name. — inspect_tags","text":"tags character vector tag names","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/inspect_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve description of a tag by name. — inspect_tags","text":"NULL","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/inspect_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve description of a tag by name. — inspect_tags","text":"","code":"inspect_tags(c(\"chromosome\", \"project_id\", \"x\")) #> * TAG: chromosome #> ℹ Description: Number of the chromosome #> ℹ Functions that use it: top_targeted_genes, CIS_grubbs, compute_near_integrations #> * TAG: project_id #> ℹ Description: Unique identifier of a project #> ℹ Functions that use it: generate_default_folder_structure, import_Vispa2_stats, remove_collisions, generate_Vispa2_launch_AF, import_association_file, import_parallel_Vispa2Matrices #> * TAG: x #> ✖ Tag not found in available tags"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/integration_alluvial_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Alluvial plots for IS distribution in time. — integration_alluvial_plot","title":"Alluvial plots for IS distribution in time. — integration_alluvial_plot","text":"Alluvial plots allow visualization integration sites distribution different points time group. functionality requires suggested package ggalluvial.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/integration_alluvial_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alluvial plots for IS distribution in time. — integration_alluvial_plot","text":"","code":"integration_alluvial_plot(   x,   group = c(\"SubjectID\", \"CellMarker\", \"Tissue\"),   plot_x = \"TimePoint\",   plot_y = \"fragmentEstimate_sum_PercAbundance\",   alluvia = mandatory_IS_vars(),   alluvia_plot_y_threshold = 1,   top_abundant_tbl = TRUE,   empty_space_color = \"grey90\",   ... )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/integration_alluvial_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alluvial plots for IS distribution in time. — integration_alluvial_plot","text":"x data frame. See details. group Character vector containing column names identify unique groups. plot_x Column name plot x axis plot_y Column name plot y axis alluvia Character vector column names uniquely identify alluvia alluvia_plot_y_threshold Numeric value. Everything threshold y plotted grey aggregated. See details. top_abundant_tbl Logical. Produce summary top abundant tables via top_abund_tableGrob? empty_space_color Color empty portion bars (threshold). Can either string known colors, hex code NA_character set space transparent. color specs accepted ggplot2 suitable . ... Additional arguments pass top_abund_tableGrob","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/integration_alluvial_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alluvial plots for IS distribution in time. — integration_alluvial_plot","text":"group list associated plot optionally summary tableGrob","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/integration_alluvial_plot.html","id":"input-data-frame","dir":"Reference","previous_headings":"","what":"Input data frame","title":"Alluvial plots for IS distribution in time. — integration_alluvial_plot","text":"input data frame must contain columns specified arguments group, plot_x, plot_y alluvia. standard input function data frame obtained via compute_abundance function.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/integration_alluvial_plot.html","id":"plotting-threshold-on-y","dir":"Reference","previous_headings":"","what":"Plotting threshold on y","title":"Alluvial plots for IS distribution in time. — integration_alluvial_plot","text":"plotting threshold quantification y axis function highlight relevant information plot reduce computation time. default value 1, acts default column plotted y axis contains percentage value. translates natural language roughly \"highlight colors integrations (alluvia) least 1 point time abundance value >= 1 %\". remaining integrations plotted unique layer column, colored specified argument empty_space_color.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/integration_alluvial_plot.html","id":"customizing-the-plot","dir":"Reference","previous_headings":"","what":"Customizing the plot","title":"Alluvial plots for IS distribution in time. — integration_alluvial_plot","text":"returned plots ggplot2 objects can therefore modified ggplot2 object. example, user decides change fill scale sufficient   NOTE: requested computation top ten abundant tables want colors match re-compute ","code":"plot +   ggplot2::scale_fill_viridis_d(...) + # or any other discrete fill scale   ggplot2::theme(...) # change theme options"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/integration_alluvial_plot.html","id":"a-note-on-strata-ordering","dir":"Reference","previous_headings":"","what":"A note on strata ordering","title":"Alluvial plots for IS distribution in time. — integration_alluvial_plot","text":"Strata column ordered first time appearance secondly decreasing order abundance (value y). means, example, plot 2 columns, second column, top, appear first appear appeared previous columns , ordered decreasing order abundance.","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/integration_alluvial_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alluvial plots for IS distribution in time. — integration_alluvial_plot","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) abund <- compute_abundance(x = aggreg) alluvial_plots <- integration_alluvial_plot(abund,     alluvia_plot_y_threshold = 0.5 ) ex_plot <- alluvial_plots[[1]]$plot +     ggplot2::labs(         title = \"IS distribution over time\",         subtitle = \"Patient 1, MNC BM\",         y = \"Abundance (%)\",         x = \"Time point (days after GT)\"     ) print(ex_plot)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/integration_matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of imported multi-quantification integration matrices. — integration_matrices","title":"Example of imported multi-quantification integration matrices. — integration_matrices","text":"data obtained manually simulating real research data.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/integration_matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of imported multi-quantification integration matrices. — integration_matrices","text":"","code":"data(\"integration_matrices\")"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/integration_matrices.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of imported multi-quantification integration matrices. — integration_matrices","text":"Data frame 1689 rows 8 columns chr chromosome number (character) integration_locus Number base viral insertion occurred strand Strand integration GeneName Symbol closest gene GeneStrand Strand closest gene CompleteAmplificationID Unique sample identifier seqCount Value sequence count quantification fragmentEstimate Value fragment estimate quantification","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/is_sharing.html","id":null,"dir":"Reference","previous_headings":"","what":"Sharing of integration sites between given groups. — is_sharing","title":"Sharing of integration sites between given groups. — is_sharing","text":"Computes amount integration sites shared groups identified input data.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/is_sharing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sharing of integration sites between given groups. — is_sharing","text":"","code":"is_sharing(   ...,   group_key = c(\"SubjectID\", \"CellMarker\", \"Tissue\", \"TimePoint\"),   group_keys = NULL,   n_comp = 2,   is_count = TRUE,   relative_is_sharing = TRUE,   minimal = TRUE,   include_self_comp = FALSE,   keep_genomic_coord = FALSE,   table_for_venn = FALSE )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/is_sharing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sharing of integration sites between given groups. — is_sharing","text":"... One integration matrices group_key Character vector column names identify single group. associated group id derived concatenating values fields, separated \"_\" group_keys list keys asymmetric grouping. NULL argument group_key ignored n_comp Number comparisons compute. argument relevant provided single data frame single key. is_count Logical, TRUE returns also count group count union set relative_is_sharing Logical, TRUE also returns relative sharing. minimal Compute combinations instead possible permutations? TRUE saves time excludes redundant comparisons. include_self_comp Include comparisons group? keep_genomic_coord TRUE keeps genomic coordinates shared integration sites dedicated column (nested table) table_for_venn Add column truth tables venn plots?","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/is_sharing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sharing of integration sites between given groups. — is_sharing","text":"data frame","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/is_sharing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sharing of integration sites between given groups. — is_sharing","text":"integration site always identified combination fields mandatory_IS_vars(), thus columns must present input(s). function accepts multiple inputs different scenarios, please refer vignette vignette(\"workflow_start\", package = \"ISAnalytics\") -depth explanation.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/is_sharing.html","id":"output","dir":"Reference","previous_headings":"","what":"Output","title":"Sharing of integration sites between given groups. — is_sharing","text":"function outputs single data frame containing requested comparisons optionally individual group counts, genomic coordinates shared integration sites truth tables plotting venn diagrams.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/is_sharing.html","id":"plotting-sharing","dir":"Reference","previous_headings":"","what":"Plotting sharing","title":"Sharing of integration sites between given groups. — is_sharing","text":"sharing data obtained can easily plotted heatmap via function sharing_heatmap via function sharing_venn","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/is_sharing.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Sharing of integration sites between given groups. — is_sharing","text":"function explicitly check presence tags: columns declared mandatory_IS_vars()","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/is_sharing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sharing of integration sites between given groups. — is_sharing","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) sharing <- is_sharing(aggreg) sharing #> # A tibble: 190 × 9 #>    g1            g2    shared count_g1 count_g2 count_union on_g1 on_g2 on_union #>    <chr>         <chr>  <int>    <int>    <int>       <int> <dbl> <dbl>    <dbl> #>  1 PT001_MNC_BM… PT00…     21       54      114         147 38.9   18.4    14.3  #>  2 PT001_MNC_BM… PT00…     24       54       59          89 44.4   40.7    27.0  #>  3 PT001_MNC_BM… PT00…     15       54       89         128 27.8   16.9    11.7  #>  4 PT001_MNC_BM… PT00…     21       54       78         111 38.9   26.9    18.9  #>  5 PT001_MNC_BM… PT00…      7       54       28          75 13.0   25       9.33 #>  6 PT001_MNC_BM… PT00…      8       54       59         105 14.8   13.6     7.62 #>  7 PT001_MNC_BM… PT00…     20       54       48          82 37.0   41.7    24.4  #>  8 PT001_MNC_BM… PT00…      4       54       29          79  7.41  13.8     5.06 #>  9 PT001_MNC_BM… PT00…     15       54       43          82 27.8   34.9    18.3  #> 10 PT001_MNC_BM… PT00…      0       54       98         152  0      0       0    #> # ℹ 180 more rows"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/iss_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the source of IS by evaluating sharing. — iss_source","title":"Find the source of IS by evaluating sharing. — iss_source","text":"function computes sharing reference group interest time point selection groups interest. way possible observe percentage shared integration sites reference group identify time point certain observed first time.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/iss_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the source of IS by evaluating sharing. — iss_source","text":"","code":"iss_source(   reference,   selection,   ref_group_key = c(\"SubjectID\", \"CellMarker\", \"Tissue\", \"TimePoint\"),   selection_group_key = c(\"SubjectID\", \"CellMarker\", \"Tissue\", \"TimePoint\"),   timepoint_column = \"TimePoint\",   by_subject = TRUE,   subject_column = \"SubjectID\" )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/iss_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the source of IS by evaluating sharing. — iss_source","text":"reference data frame containing one groups reference. Groups identified ref_group_key selection data frame containing one groups interest compare. Groups identified selection_group_key ref_group_key Character vector column names identify unique group reference data frame selection_group_key Character vector column names identify unique group selection data frame timepoint_column Name column holding time point info? by_subject calculations performed subject separately? subject_column Name column holding subjects information. Relevant by_subject = TRUE","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/iss_source.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the source of IS by evaluating sharing. — iss_source","text":"list data frames data frame","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/iss_source.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the source of IS by evaluating sharing. — iss_source","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) df1 <- aggreg |>     dplyr::filter(.data$Tissue == \"BM\") df2 <- aggreg |>     dplyr::filter(.data$Tissue == \"PB\") source <- iss_source(df1, df2) source #> $PT001 #> # A tibble: 161 × 14 #>    g1       g1_SubjectID g1_CellMarker g1_Tissue g1_TimePoint g2    g2_SubjectID #>    <chr>    <chr>        <chr>         <chr>            <int> <chr> <chr>        #>  1 PT001_M… PT001        MNC           BM                 180 PT00… PT001        #>  2 PT001_M… PT001        MNC           BM                 180 PT00… PT001        #>  3 PT001_M… PT001        MNC           BM                 180 PT00… PT001        #>  4 PT001_M… PT001        MNC           BM                 180 PT00… PT001        #>  5 PT001_M… PT001        MNC           BM                 180 PT00… PT001        #>  6 PT001_M… PT001        MNC           BM                 180 PT00… PT001        #>  7 PT001_M… PT001        MNC           BM                 180 PT00… PT001        #>  8 PT001_M… PT001        MNC           BM                 180 PT00… PT001        #>  9 PT001_M… PT001        MNC           BM                 180 PT00… PT001        #> 10 PT001_M… PT001        MNC           BM                 180 PT00… PT001        #> # ℹ 151 more rows #> # ℹ 7 more variables: g2_CellMarker <chr>, g2_Tissue <chr>, g2_TimePoint <int>, #> #   chr <chr>, integration_locus <dbl>, strand <chr>, sharing_perc <dbl> #>  #> $PT002 #> # A tibble: 77 × 14 #>    g1       g1_SubjectID g1_CellMarker g1_Tissue g1_TimePoint g2    g2_SubjectID #>    <chr>    <chr>        <chr>         <chr>            <int> <chr> <chr>        #>  1 PT002_M… PT002        MNC           BM                 180 PT00… PT002        #>  2 PT002_M… PT002        MNC           BM                 180 PT00… PT002        #>  3 PT002_M… PT002        MNC           BM                 180 PT00… PT002        #>  4 PT002_M… PT002        MNC           BM                 180 PT00… PT002        #>  5 PT002_M… PT002        MNC           BM                 180 PT00… PT002        #>  6 PT002_M… PT002        MNC           BM                 180 PT00… PT002        #>  7 PT002_M… PT002        MNC           BM                 180 PT00… PT002        #>  8 PT002_M… PT002        MNC           BM                 180 PT00… PT002        #>  9 PT002_M… PT002        MNC           BM                 180 PT00… PT002        #> 10 PT002_M… PT002        MNC           BM                 180 PT00… PT002        #> # ℹ 67 more rows #> # ℹ 7 more variables: g2_CellMarker <chr>, g2_Tissue <chr>, g2_TimePoint <int>, #> #   chr <chr>, integration_locus <dbl>, strand <chr>, sharing_perc <dbl> #>  ggplot2::ggplot(source$PT001, ggplot2::aes(     x = as.factor(g2_TimePoint),     y = sharing_perc, fill = g1 )) +     ggplot2::geom_col() +     ggplot2::labs(         x = \"Time point\", y = \"Shared IS % with MNC BM\",         title = \"Source of is MNC BM vs MNC PB\"     )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/known_clinical_oncogenes.html","id":null,"dir":"Reference","previous_headings":"","what":"Known clinical oncogenes (for mouse and human). — known_clinical_oncogenes","title":"Known clinical oncogenes (for mouse and human). — known_clinical_oncogenes","text":"Known clinical oncogenes (mouse human).","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/known_clinical_oncogenes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Known clinical oncogenes (for mouse and human). — known_clinical_oncogenes","text":"","code":"known_clinical_oncogenes()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/known_clinical_oncogenes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Known clinical oncogenes (for mouse and human). — known_clinical_oncogenes","text":"data frame","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/known_clinical_oncogenes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Known clinical oncogenes (for mouse and human). — known_clinical_oncogenes","text":"","code":"known_clinical_oncogenes() #> # A tibble: 5 × 2 #>   GeneName KnownClonalExpansion #>   <chr>    <lgl>                #> 1 MECOM    TRUE                 #> 2 CCND2    TRUE                 #> 3 TAL1     TRUE                 #> 4 LMO2     TRUE                 #> 5 HMGA2    TRUE"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/mandatory_IS_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Current dynamic vars specifications getters. — mandatory_IS_vars","title":"Current dynamic vars specifications getters. — mandatory_IS_vars","text":"Fetches look-tables different categories dynamic vars. details, refer dedicated vignette vignette(\"workflow_start\", package=\"ISAnalytics\"). mandatory_IS_vars returns look-table variables used uniquely identify integration events annotation_IS_vars() returns look-table variables contain genomic annotations association_file_columns() returns look-table variables contains information  metadata structured iss_stats_specs() returns look-table variables contains information format pool statistics files produced automatically VISPA2 matrix_file_suffixes() returns look-table variables contains default file names quantification type used automated import functions","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/mandatory_IS_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current dynamic vars specifications getters. — mandatory_IS_vars","text":"","code":"mandatory_IS_vars(include_types = FALSE)  annotation_IS_vars(include_types = FALSE)  association_file_columns(include_types = FALSE)  iss_stats_specs(include_types = FALSE)  matrix_file_suffixes()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/mandatory_IS_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Current dynamic vars specifications getters. — mandatory_IS_vars","text":"include_types set TRUE returns names types associated, otherwise returns character vector names","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/mandatory_IS_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Current dynamic vars specifications getters. — mandatory_IS_vars","text":"character vector data frame","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/mandatory_IS_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Current dynamic vars specifications getters. — mandatory_IS_vars","text":"","code":"# Names only mandatory_IS_vars() #> [1] \"chr\"               \"integration_locus\" \"strand\"             # Names and types mandatory_IS_vars(TRUE) #> # A tibble: 3 × 5 #>   names             types transform flag     tag        #>   <chr>             <chr> <list>    <chr>    <chr>      #> 1 chr               char  <NULL>    required chromosome #> 2 integration_locus int   <NULL>    required locus      #> 3 strand            char  <NULL>    required is_strand   # Names only annotation_IS_vars() #> [1] \"GeneName\"   \"GeneStrand\"  # Names and types annotation_IS_vars(TRUE) #> # A tibble: 2 × 5 #>   names      types transform flag     tag         #>   <chr>      <chr> <list>    <chr>    <chr>       #> 1 GeneName   char  <NULL>    required gene_symbol #> 2 GeneStrand char  <NULL>    required gene_strand  # Names only association_file_columns() #>  [1] \"ProjectID\"                           \"FUSIONID\"                            #>  [3] \"PoolID\"                              \"TagSequence\"                         #>  [5] \"SubjectID\"                           \"VectorType\"                          #>  [7] \"VectorID\"                            \"ExperimentID\"                        #>  [9] \"Tissue\"                              \"TimePoint\"                           #> [11] \"DNAFragmentation\"                    \"PCRMethod\"                           #> [13] \"TagIDextended\"                       \"Keywords\"                            #> [15] \"CellMarker\"                          \"TagID\"                               #> [17] \"NGSProvider\"                         \"NGSTechnology\"                       #> [19] \"ConverrtedFilesDir\"                  \"ConverrtedFilesName\"                 #> [21] \"SourceFileFolder\"                    \"SourceFileNameR1\"                    #> [23] \"SourceFileNameR2\"                    \"DNAnumber\"                           #> [25] \"ReplicateNumber\"                     \"DNAextractionDate\"                   #> [27] \"DNAngUsed\"                           \"LinearPCRID\"                         #> [29] \"LinearPCRDate\"                       \"SonicationDate\"                      #> [31] \"LigationDate\"                        \"1stExpoPCRID\"                        #> [33] \"1stExpoPCRDate\"                      \"2ndExpoID\"                           #> [35] \"2ndExpoDate\"                         \"FusionPrimerPCRID\"                   #> [37] \"FusionPrimerPCRDate\"                 \"PoolDate\"                            #> [39] \"SequencingDate\"                      \"VCN\"                                 #> [41] \"Genome\"                              \"SequencingRound\"                     #> [43] \"Genotype\"                            \"TestGroup\"                           #> [45] \"MOI\"                                 \"Engraftment\"                         #> [47] \"Transduction\"                        \"Notes\"                               #> [49] \"AddedField1\"                         \"AddedField2\"                         #> [51] \"AddedField3\"                         \"AddedField4\"                         #> [53] \"concatenatePoolIDSeqRun\"             \"AddedField6_RelativeBloodPercentage\" #> [55] \"AddedField7_PurityTestFeasibility\"   \"AddedField8_FacsSeparationPurity\"    #> [57] \"Kapa\"                                \"ulForPool\"                           #> [59] \"CompleteAmplificationID\"             \"UniqueID\"                            #> [61] \"StudyTestID\"                         \"StudyTestGroup\"                      #> [63] \"MouseID\"                             \"Tigroup\"                             #> [65] \"Tisource\"                            \"PathToFolderProjectID\"               #> [67] \"SamplesNameCheck\"                    \"TimepointDays\"                       #> [69] \"TimepointMonths\"                     \"TimepointYears\"                      #> [71] \"ng DNA corrected\"                     # Names and types association_file_columns(TRUE) #> # A tibble: 71 × 5 #>    names        types transform flag     tag        #>    <chr>        <chr> <list>    <chr>    <chr>      #>  1 ProjectID    char  <NULL>    required project_id #>  2 FUSIONID     char  <NULL>    optional fusion_id  #>  3 PoolID       char  <NULL>    required pool_id    #>  4 TagSequence  char  <NULL>    required tag_seq    #>  5 SubjectID    char  <NULL>    required subject    #>  6 VectorType   char  <NULL>    optional NA         #>  7 VectorID     char  <NULL>    required vector_id  #>  8 ExperimentID char  <NULL>    optional NA         #>  9 Tissue       char  <NULL>    required tissue     #> 10 TimePoint    char  <formula> required tp_days    #> # ℹ 61 more rows  # Names only iss_stats_specs() #>  [1] \"RUN_NAME\"              \"POOL\"                  \"TAG\"                   #>  [4] \"RAW_READS\"             \"QUALITY_PASSED\"        \"PHIX_MAPPING\"          #>  [7] \"PLASMID_MAPPED_BYPOOL\" \"BARCODE_MUX\"           \"LTR_IDENTIFIED\"        #> [10] \"TRIMMING_FINAL_LTRLC\"  \"LV_MAPPED\"             \"BWA_MAPPED_OVERALL\"    #> [13] \"ISS_MAPPED_OVERALL\"    \"ISS_MAPPED_PP\"          # Names and types iss_stats_specs(TRUE) #> # A tibble: 14 × 5 #>    names                 types transform flag     tag               #>    <chr>                 <chr> <list>    <chr>    <chr>             #>  1 RUN_NAME              char  <NULL>    required NA                #>  2 POOL                  char  <NULL>    required vispa_concatenate #>  3 TAG                   char  <formula> required tag_seq           #>  4 RAW_READS             int   <NULL>    optional NA                #>  5 QUALITY_PASSED        int   <NULL>    optional NA                #>  6 PHIX_MAPPING          int   <NULL>    optional NA                #>  7 PLASMID_MAPPED_BYPOOL int   <NULL>    optional NA                #>  8 BARCODE_MUX           int   <NULL>    required NA                #>  9 LTR_IDENTIFIED        int   <NULL>    optional NA                #> 10 TRIMMING_FINAL_LTRLC  int   <NULL>    optional NA                #> 11 LV_MAPPED             int   <NULL>    optional NA                #> 12 BWA_MAPPED_OVERALL    int   <NULL>    optional NA                #> 13 ISS_MAPPED_OVERALL    int   <NULL>    optional NA                #> 14 ISS_MAPPED_PP         int   <NULL>    optional NA                 # Names only matrix_file_suffixes() #> # A tibble: 10 × 3 #>    quantification   matrix_type   file_suffix                                  #>    <chr>            <chr>         <chr>                                        #>  1 seqCount         annotated     seqCount_matrix.no0.annotated.tsv.gz         #>  2 seqCount         not_annotated seqCount_matrix.tsv.gz                       #>  3 fragmentEstimate annotated     fragmentEstimate_matrix.no0.annotated.tsv.gz #>  4 fragmentEstimate not_annotated fragmentEstimate_matrix.tsv.gz               #>  5 barcodeCount     annotated     barcodeCount_matrix.no0.annotated.tsv.gz     #>  6 barcodeCount     not_annotated barcodeCount_matrix.tsv.gz                   #>  7 cellCount        annotated     cellCount_matrix.no0.annotated.tsv.gz        #>  8 cellCount        not_annotated cellCount_matrix.tsv.gz                      #>  9 ShsCount         annotated     ShsCount_matrix.no0.annotated.tsv.gz         #> 10 ShsCount         not_annotated ShsCount_matrix.tsv.gz"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/matching_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Possible choices for the matching_opt parameter. — matching_options","title":"Possible choices for the matching_opt parameter. — matching_options","text":"possible values matching_opt parameter import_parallel_vispa2Matrices_auto.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/matching_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Possible choices for the matching_opt parameter. — matching_options","text":"","code":"matching_options()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/matching_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Possible choices for the matching_opt parameter. — matching_options","text":"vector characters matching_opt","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/matching_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Possible choices for the matching_opt parameter. — matching_options","text":"values \"\", \"\" \"OPTIONAL\", represent patterns matched, specifically = look files match LEAST one patterns specified = look files match patterns specified OPTIONAL = look preferentially files match, order, patterns pattern match found return found (keep mind duplicates discarded automatic mode)","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/matching_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Possible choices for the matching_opt parameter. — matching_options","text":"","code":"opts <- matching_options()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/outlier_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter out outliers in metadata, identified by the chosen outlier test. — outlier_filter","title":"Filter out outliers in metadata, identified by the chosen outlier test. — outlier_filter","text":"Filter outliers metadata using appropriate outlier tests.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/outlier_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter out outliers in metadata, identified by the chosen outlier test. — outlier_filter","text":"","code":"outlier_filter(   metadata,   pcr_id_col = pcr_id_column(),   outlier_test = c(outliers_by_pool_fragments),   outlier_test_outputs = NULL,   combination_logic = c(\"AND\"),   negate = FALSE,   report_path = default_report_path(),   ... )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/outlier_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter out outliers in metadata, identified by the chosen outlier test. — outlier_filter","text":"metadata metadata data frame pcr_id_col name pcr identifier column outlier_test One outlier tests. Must functions, either available_outlier_tests() custom functions produce appropriate output format (see details). outlier_test_outputs NULL, data frame list data frames. See details. combination_logic One logical operators (\"\", \"\", \"XOR\", \"NAND\", \"\", \"XNOR\"). See datails. negate TRUE return metadata flagged removed. FALSE return metadata flagged removed. report_path path report file saved. Can folder NULL report produced. Defaults {user_home}/ISAnalytics_reports. ... Additional named arguments passed outliers_test","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/outlier_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter out outliers in metadata, identified by the chosen outlier test. — outlier_filter","text":"data frame metadata less amount rows","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/outlier_filter.html","id":"modular-structure","dir":"Reference","previous_headings":"","what":"Modular structure","title":"Filter out outliers in metadata, identified by the chosen outlier test. — outlier_filter","text":"outlier filtering functions structured modular fashion. 2 kind functions: Outlier tests - Functions perform kind calculation based inputs flags metadata Outlier filter - function takes one outlier tests, combines flags given logic filters rows flagged outliers function acts filter. can either take one outlier tests functions call argument outlier_test, can take directly outputs produced individual tests argument outlier_test_outputs - provided second one priority. second method offers bit freedom, since single tests can run independently intermediate results saved examined detail. one test performed, argument combination_logic tells function combine flags: can specify 1 logical operator 1, provided compatible number tests.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/outlier_filter.html","id":"writing-custom-outlier-tests","dir":"Reference","previous_headings":"","what":"Writing custom outlier tests","title":"Filter out outliers in metadata, identified by the chosen outlier test. — outlier_filter","text":"freedom provide functions outlier tests. purpose, functions provided must respect guidelines: Must take input whole metadata df Must return df containing LEAST pcr_id_col logical column \"to_remove\" contains flag pcr_id_col must contain values originally present metadata df","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/outlier_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter out outliers in metadata, identified by the chosen outlier test. — outlier_filter","text":"","code":"data(\"association_file\", package = \"ISAnalytics\") filtered_af <- outlier_filter(association_file,     key = \"BARCODE_MUX\",     report_path = NULL ) #> Removing NAs from data... #> Log2 transformation, removing values <= 0 head(filtered_af) #>    ProjectID  FUSIONID PoolID TagSequence SubjectID VectorType VectorID #> 1:      PJ01 ET#382.46 POOL01   LTR75LC38     PT001      lenti    GLOBE #> 2:      PJ01 ET#381.40 POOL01   LTR53LC32     PT001      lenti    GLOBE #> 3:      PJ01  ET#381.9 POOL01   LTR83LC66     PT001      lenti    GLOBE #> 4:      PJ01 ET#381.71 POOL01   LTR27LC94     PT001      lenti    GLOBE #> 5:      PJ01  ET#381.2 POOL01   LTR69LC52     PT001      lenti    GLOBE #> 6:      PJ01 ET#382.28 POOL01    LTR37LC2     PT001      lenti    GLOBE #>    ExperimentID Tissue TimePoint DNAFragmentation PCRMethod TagIDextended #> 1:         <NA>     PB      0060            SONIC      SLiM     LTR75LC38 #> 2:         <NA>     BM      0180            SONIC      SLiM     LTR53LC32 #> 3:         <NA>     BM      0180            SONIC      SLiM     LTR83LC66 #> 4:         <NA>     BM      0180            SONIC      SLiM     LTR27LC94 #> 5:         <NA>     PB      0180            SONIC      SLiM     LTR69LC52 #> 6:         <NA>     BM      0060            SONIC      SLiM      LTR37LC2 #>    Keywords CellMarker      TagID NGSProvider NGSTechnology ConverrtedFilesDir #> 1:     <NA>        MNC LTR75.LC38        <NA>         HiSeq               <NA> #> 2:     <NA>        MNC LTR53.LC32        <NA>         HiSeq               <NA> #> 3:     <NA>        MNC LTR83.LC66        <NA>         HiSeq               <NA> #> 4:     <NA>        MNC LTR27.LC94        <NA>         HiSeq               <NA> #> 5:     <NA>        MNC LTR69.LC52        <NA>         HiSeq               <NA> #> 6:     <NA>        MNC  LTR37.LC2        <NA>         HiSeq               <NA> #>    ConverrtedFilesName SourceFileFolder SourceFileNameR1 SourceFileNameR2 #> 1:                <NA>             <NA>             <NA>             <NA> #> 2:                <NA>             <NA>             <NA>             <NA> #> 3:                <NA>             <NA>             <NA>             <NA> #> 4:                <NA>             <NA>             <NA>             <NA> #> 5:                <NA>             <NA>             <NA>             <NA> #> 6:                <NA>             <NA>             <NA>             <NA> #>    DNAnumber ReplicateNumber DNAextractionDate DNAngUsed LinearPCRID #> 1: PT001-103               3        2016-03-16    23.184        <NA> #> 2:  PT001-81               2        2016-07-15   181.440        <NA> #> 3:  PT001-81               1        2016-07-15   181.440        <NA> #> 4:  PT001-81               3        2016-07-15   181.440        <NA> #> 5:  PT001-74               1        2016-07-15    23.058        <NA> #> 6: PT001-107               2        2016-03-16   171.360        <NA> #>    LinearPCRDate SonicationDate LigationDate 1stExpoPCRID 1stExpoPCRDate #> 1:          <NA>     2016-11-02   2016-11-02    ET#380.46     2016-11-02 #> 2:          <NA>     2016-11-02   2016-11-02    ET#379.40     2016-11-02 #> 3:          <NA>     2016-11-02   2016-11-02     ET#379.9     2016-11-02 #> 4:          <NA>     2016-11-02   2016-11-02    ET#379.71     2016-11-02 #> 5:          <NA>     2016-11-02   2016-11-02     ET#379.2     2016-11-02 #> 6:          <NA>     2016-11-02   2016-11-02    ET#380.28     2016-11-02 #>    2ndExpoID 2ndExpoDate FusionPrimerPCRID FusionPrimerPCRDate   PoolDate #> 1:      <NA>        <NA>         ET#382.46          2016-11-03 2016-11-07 #> 2:      <NA>        <NA>         ET#381.40          2016-11-03 2016-11-07 #> 3:      <NA>        <NA>          ET#381.9          2016-11-03 2016-11-07 #> 4:      <NA>        <NA>         ET#381.71          2016-11-03 2016-11-07 #> 5:      <NA>        <NA>          ET#381.2          2016-11-03 2016-11-07 #> 6:      <NA>        <NA>         ET#382.28          2016-11-03 2016-11-07 #>    SequencingDate  VCN Genome SequencingRound Genotype TestGroup  MOI #> 1:     2016-11-15 0.30   hg19               1     <NA>      <NA> <NA> #> 2:     2016-11-15 0.27   hg19               1     <NA>      <NA> <NA> #> 3:     2016-11-15 0.27   hg19               1     <NA>      <NA> <NA> #> 4:     2016-11-15 0.27   hg19               1     <NA>      <NA> <NA> #> 5:     2016-11-15 0.24   hg19               1     <NA>      <NA> <NA> #> 6:     2016-11-15 0.42   hg19               1     <NA>      <NA> <NA> #>    Engraftment Transduction Notes AddedField1 AddedField2 AddedField3 #> 1:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 2:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 3:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 4:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 5:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 6:          NA           NA  <NA>        <NA>        <NA>        <NA> #>    AddedField4 concatenatePoolIDSeqRun AddedField6_RelativeBloodPercentage #> 1:        <NA>                POOL01-1                                <NA> #> 2:        <NA>                POOL01-1                                <NA> #> 3:        <NA>                POOL01-1                                <NA> #> 4:        <NA>                POOL01-1                                <NA> #> 5:        <NA>                POOL01-1                                <NA> #> 6:        <NA>                POOL01-1                                <NA> #>    AddedField7_PurityTestFeasibility AddedField8_FacsSeparationPurity Kapa #> 1:                                NA                               NA   NA #> 2:                                NA                               NA   NA #> 3:                                NA                               NA   NA #> 4:                                NA                               NA   NA #> 5:                                NA                               NA   NA #> 6:                                NA                               NA   NA #>    ulForPool #> 1:        NA #> 2:        NA #> 3:        NA #> 4:        NA #> 5:        NA #> 6:        NA #>                                                 CompleteAmplificationID #> 1: PJ01_POOL01_LTR75LC38_PT001_PT001-103_lenti_GLOBE_PB_1_SLiM_0060_MNC #> 2:  PJ01_POOL01_LTR53LC32_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #> 3:  PJ01_POOL01_LTR83LC66_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #> 4:  PJ01_POOL01_LTR27LC94_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #> 5:  PJ01_POOL01_LTR69LC52_PT001_PT001-74_lenti_GLOBE_PB_1_SLiM_0180_MNC #> 6:  PJ01_POOL01_LTR37LC2_PT001_PT001-107_lenti_GLOBE_BM_1_SLiM_0060_MNC #>                  UniqueID StudyTestID StudyTestGroup MouseID Tigroup Tisource #> 1: ID00000000000000007433        <NA>             NA      NA    <NA>     <NA> #> 2: ID00000000000000007340        <NA>             NA      NA    <NA>     <NA> #> 3: ID00000000000000007310        <NA>             NA      NA    <NA>     <NA> #> 4: ID00000000000000007370        <NA>             NA      NA    <NA>     <NA> #> 5: ID00000000000000007303        <NA>             NA      NA    <NA>     <NA> #> 6: ID00000000000000007417        <NA>             NA      NA    <NA>     <NA> #>    PathToFolderProjectID SamplesNameCheck TimepointDays TimepointMonths #> 1:                 /PJ01             <NA>          0060              02 #> 2:                 /PJ01             <NA>          0180              06 #> 3:                 /PJ01             <NA>          0180              06 #> 4:                 /PJ01             <NA>          0180              06 #> 5:                 /PJ01             <NA>          0180              06 #> 6:                 /PJ01             <NA>          0060              02 #>    TimepointYears ng DNA corrected      RUN_NAME PHIX_MAPPING #> 1:             01            23.18 PJ01|POOL01-1     43586699 #> 2:             01           181.44 PJ01|POOL01-1     43586699 #> 3:             01           181.44 PJ01|POOL01-1     43586699 #> 4:             01           181.44 PJ01|POOL01-1     43586699 #> 5:             01            23.06 PJ01|POOL01-1     43586699 #> 6:             01           171.36 PJ01|POOL01-1     43586699 #>    PLASMID_MAPPED_BYPOOL BARCODE_MUX LTR_IDENTIFIED TRIMMING_FINAL_LTRLC #> 1:               2256176      645026         645026               630965 #> 2:               2256176      652208         652177               649044 #> 3:               2256176      451519         451512               449669 #> 4:               2256176      426500         426499               425666 #> 5:               2256176       18300          18300                18290 #> 6:               2256176      729327         729327               727219 #>    LV_MAPPED BWA_MAPPED_OVERALL ISS_MAPPED_OVERALL RAW_READS QUALITY_PASSED #> 1:    211757             402477             219452        NA             NA #> 2:    303300             322086             222646        NA             NA #> 3:    204810             227275             149385        NA             NA #> 4:    185752             223915             143283        NA             NA #> 5:      6962              10487               5907        NA             NA #> 6:    318653             369117             235640        NA             NA #>    ISS_MAPPED_PP #> 1:            NA #> 2:            NA #> 3:            NA #> 4:            NA #> 5:            NA #> 6:            NA"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/outliers_by_pool_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify and flag outliers based on pool fragments. — outliers_by_pool_fragments","title":"Identify and flag outliers based on pool fragments. — outliers_by_pool_fragments","text":"Identify flag outliers based expected number raw reads per pool.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/outliers_by_pool_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify and flag outliers based on pool fragments. — outliers_by_pool_fragments","text":"","code":"outliers_by_pool_fragments(   metadata,   key = \"BARCODE_MUX\",   outlier_p_value_threshold = 0.01,   normality_test = FALSE,   normality_p_value_threshold = 0.05,   transform_log2 = TRUE,   per_pool_test = TRUE,   pool_col = \"PoolID\",   min_samples_per_pool = 5,   flag_logic = \"AND\",   keep_calc_cols = TRUE,   report_path = default_report_path() )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/outliers_by_pool_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify and flag outliers based on pool fragments. — outliers_by_pool_fragments","text":"metadata metadata data frame key character vector numeric column names outlier_p_value_threshold p value threshold read considered outlier normality_test Perform normality test? Normality assessed column key using Shapiro-Wilk test values follow normal distribution, calculations skipped normality_p_value_threshold Normality threshold transform_log2 Perform log2 trasformation values prior actual calculations? per_pool_test Perform test pool? pool_col character vector names columns uniquely identify pool min_samples_per_pool minimum number samples pool needs contain order processed - relevant per_pool_test = TRUE flag_logic character vector logic operators obtain global flag formula - relevant key longer one. operators must chosen : , , XOR, NAND, , XNOR keep_calc_cols Keep calculation columns output data frame? report_path path report file saved. Can folder, file NULL report produced. Defaults {user_home}/ISAnalytics_reports.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/outliers_by_pool_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify and flag outliers based on pool fragments. — outliers_by_pool_fragments","text":"data frame metadata column to_remove","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/outliers_by_pool_fragments.html","id":"modular-structure","dir":"Reference","previous_headings":"","what":"Modular structure","title":"Identify and flag outliers based on pool fragments. — outliers_by_pool_fragments","text":"outlier filtering functions structured modular fashion. 2 kind functions: Outlier tests - Functions perform kind calculation based inputs flags metadata Outlier filter - function takes one outlier tests, combines flags given logic filters rows flagged outliers function outlier test, calculates column key zscore values tstudent values associated p-value (tdist) Optionally test can performed pool normality test can run prior actual calculations. Samples flagged condition respected: tdist < outlier_p_value_threshold & zscore < 0 key contains one column additional flag logic can specified combining results. Example: suppose key contains names two columns, X Y key = c(\"X\", \"Y\") specify argument flag_logic = \"\" reads flagged based global condition: (tdist_X < outlier_p_value_threshold & zscore_X < 0) (tdist_Y < outlier_p_value_threshold & zscore_Y < 0) user can specify one logical operators applied sequence.","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/outliers_by_pool_fragments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify and flag outliers based on pool fragments. — outliers_by_pool_fragments","text":"","code":"data(\"association_file\", package = \"ISAnalytics\") flagged <- outliers_by_pool_fragments(association_file,     report_path = NULL ) #> Removing NAs from data... #> Log2 transformation, removing values <= 0 head(flagged) #> # A tibble: 6 × 91 #>   ProjectID FUSIONID  PoolID TagSequence SubjectID VectorType VectorID #>   <chr>     <chr>     <chr>  <chr>       <chr>     <chr>      <chr>    #> 1 PJ01      ET#382.46 POOL01 LTR75LC38   PT001     lenti      GLOBE    #> 2 PJ01      ET#381.40 POOL01 LTR53LC32   PT001     lenti      GLOBE    #> 3 PJ01      ET#381.9  POOL01 LTR83LC66   PT001     lenti      GLOBE    #> 4 PJ01      ET#381.71 POOL01 LTR27LC94   PT001     lenti      GLOBE    #> 5 PJ01      ET#381.2  POOL01 LTR69LC52   PT001     lenti      GLOBE    #> 6 PJ01      ET#382.28 POOL01 LTR37LC2    PT001     lenti      GLOBE    #> # ℹ 84 more variables: ExperimentID <chr>, Tissue <chr>, TimePoint <chr>, #> #   DNAFragmentation <chr>, PCRMethod <chr>, TagIDextended <chr>, #> #   Keywords <chr>, CellMarker <chr>, TagID <chr>, NGSProvider <chr>, #> #   NGSTechnology <chr>, ConverrtedFilesDir <chr>, ConverrtedFilesName <chr>, #> #   SourceFileFolder <chr>, SourceFileNameR1 <chr>, SourceFileNameR2 <chr>, #> #   DNAnumber <chr>, ReplicateNumber <int>, DNAextractionDate <date>, #> #   DNAngUsed <dbl>, LinearPCRID <chr>, LinearPCRDate <date>, …"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/pcr_id_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily retrieve the name of the pcr id column. — pcr_id_column","title":"Easily retrieve the name of the pcr id column. — pcr_id_column","text":"function shortcut retrieve currently set pcr id column name association file column tags look-table. column needed every time joining operation metadata needs performed","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/pcr_id_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easily retrieve the name of the pcr id column. — pcr_id_column","text":"","code":"pcr_id_column()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/pcr_id_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Easily retrieve the name of the pcr id column. — pcr_id_column","text":"name column","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/pcr_id_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easily retrieve the name of the pcr id column. — pcr_id_column","text":"","code":"pcr_id_column() #> [1] \"CompleteAmplificationID\""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/proto_oncogenes.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frames for proto-oncogenes (human and mouse)\namd tumor-suppressor genes from UniProt. — proto_oncogenes","title":"Data frames for proto-oncogenes (human and mouse)\namd tumor-suppressor genes from UniProt. — proto_oncogenes","text":"file simply result research keywords \"proto-oncogenes\" \"tumor suppressor\" target genomes UniProt database.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/proto_oncogenes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frames for proto-oncogenes (human and mouse)\namd tumor-suppressor genes from UniProt. — proto_oncogenes","text":"","code":"data(\"proto_oncogenes\")  data(\"tumor_suppressors\")"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/proto_oncogenes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data frames for proto-oncogenes (human and mouse)\namd tumor-suppressor genes from UniProt. — proto_oncogenes","text":"object class tbl_df (inherits tbl, data.frame) 569 rows 13 columns. object class tbl_df (inherits tbl, data.frame) 523 rows 13 columns.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/proto_oncogenes.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Data frames for proto-oncogenes (human and mouse)\namd tumor-suppressor genes from UniProt. — proto_oncogenes","text":"tumor_suppressors: Data frame tumor suppressor genes","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/purity_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter integration sites based on purity. — purity_filter","title":"Filter integration sites based on purity. — purity_filter","text":"Filter targets possible contamination cell lines based numeric quantification (likely abundance sequence count).","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/purity_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter integration sites based on purity. — purity_filter","text":"","code":"purity_filter(   x,   lineages = blood_lineages_default(),   aggregation_key = c(\"SubjectID\", \"CellMarker\", \"Tissue\", \"TimePoint\"),   group_key = c(\"CellMarker\", \"Tissue\"),   selected_groups = NULL,   join_on = \"CellMarker\",   min_value = 3,   impurity_threshold = 10,   by_timepoint = TRUE,   timepoint_column = \"TimePoint\",   value_column = \"seqCount_sum\" )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/purity_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter integration sites based on purity. — purity_filter","text":"x aggregated integration matrix, obtained via aggregate_values_by_key() lineages data frame containing cell lineages information aggregation_key key used aggregating x group_key character vector column names re-aggregation. Column names must either x lineages. See details. selected_groups Either NULL, character vector data frame group selection. See details. join_on Common columns perform join operation min_value minimum value filter input matrix. Integrations value strictly lower min_value excluded (dropped) output. impurity_threshold ratio threshold impurity groups by_timepoint filtering applied time point? FALSE, time points merged together timepoint_column Column x containing time point value_column Column x containing numeric quantification interest","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/purity_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter integration sites based on purity. — purity_filter","text":"data frame","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/purity_filter.html","id":"setting-input-arguments","dir":"Reference","previous_headings":"","what":"Setting input arguments","title":"Filter integration sites based on purity. — purity_filter","text":"input matrix can re-aggregated provided group_key argument. key contains names columns group (besides columns holding genomic coordinates integration sites) must contained least one x lineages data frames. key found x, join operation lineages data frame performed common column(s) join_on.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/purity_filter.html","id":"group-selection","dir":"Reference","previous_headings":"","what":"Group selection","title":"Filter integration sites based on purity. — purity_filter","text":"possible user specify groups logic filter applied . example: group_key = c(\"HematoLineage\") set selected_groups = c(\"CD34\", \"Myeloid\",\"Lymphoid\") means single integration evaluated filter groups values \"CD34\", \"Myeloid\" \"Lymphoid\" \"HematoLineage\" column. integration present groups kept . selected_groups can set NULL want logic apply every group present data frame, can set simple character vector example group key length 1 (need filter time point). group key longer 1 filter applied first element key. refined selection groups needed, data frame can provided instead:   Columns data frame group key (plus, eventually, time point column). example groups identified rows provided data frame processed.","code":"group_key = c(\"CellMarker\", \"Tissue\") selected_groups = tibble::tribble( ~ CellMarker, ~ Tissue, \"CD34\", \"BM\", \"CD14\", \"BM\", \"CD14\", \"PB\" )"},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/purity_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter integration sites based on purity. — purity_filter","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) filtered_by_purity <- purity_filter(     x = aggreg,     value_column = \"seqCount_sum\" ) head(filtered_by_purity) #> # A tibble: 6 × 9 #>   chr   integration_locus strand GeneName GeneStrand TimePoint CellMarker Tissue #>   <chr>             <dbl> <chr>  <chr>    <chr>      <chr>     <chr>      <chr>  #> 1 1              27058748 -      ARID1A   +          0060      MNC        BM     #> 2 1              89337032 +      GTF2B    -          0360      MNC        BM     #> 3 1              89337032 +      GTF2B    -          0360      MNC        PB     #> 4 10             74765793 -      P4HA1    -          0360      MNC        BM     #> 5 10             74765793 -      P4HA1    -          0360      MNC        PB     #> 6 11              3899973 +      STIM1    +          0090      MNC        BM     #> # ℹ 1 more variable: Value <dbl>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/quantification_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Possible choices for the quantification_type parameter. — quantification_types","title":"Possible choices for the quantification_type parameter. — quantification_types","text":"possible values quantification_type parameter import_parallel_vispa2Matrices_interactive import_parallel_vispa2Matrices_auto.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/quantification_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Possible choices for the quantification_type parameter. — quantification_types","text":"","code":"quantification_types()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/quantification_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Possible choices for the quantification_type parameter. — quantification_types","text":"vector characters quantification types","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/quantification_types.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Possible choices for the quantification_type parameter. — quantification_types","text":"possible values : fragmentEstimate seqCount barcodeCount cellCount ShsCount","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/quantification_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Possible choices for the quantification_type parameter. — quantification_types","text":"","code":"quant_types <- quantification_types()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/realign_after_collisions.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-aligns matrices of other quantification types based on the processed\nsequence count matrix. — realign_after_collisions","title":"Re-aligns matrices of other quantification types based on the processed\nsequence count matrix. — realign_after_collisions","text":"function used keep data consistent among analysis: reason removed collisions passing sequence count matrix remove_collisions(), call function afterwards, providing list quantification matrices. NOTE: provided list several quantification types remove_collisions() , need call function.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/realign_after_collisions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-aligns matrices of other quantification types based on the processed\nsequence count matrix. — realign_after_collisions","text":"","code":"realign_after_collisions(   sc_matrix,   other_matrices,   sample_column = pcr_id_column() )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/realign_after_collisions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-aligns matrices of other quantification types based on the processed\nsequence count matrix. — realign_after_collisions","text":"sc_matrix sequence count matrix already processed collisions via remove_collisions() other_matrices named list matrices re-align. Names list must quantification types (quantification_types()) except \"seqCount\". sample_column name column containing sample identifier","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/realign_after_collisions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-aligns matrices of other quantification types based on the processed\nsequence count matrix. — realign_after_collisions","text":"named list re-aligned matrices","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/realign_after_collisions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Re-aligns matrices of other quantification types based on the processed\nsequence count matrix. — realign_after_collisions","text":"details use collision removal functionality: vignette(\"workflow_start\", package = \"ISAnalytics\")","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/realign_after_collisions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Re-aligns matrices of other quantification types based on the processed\nsequence count matrix. — realign_after_collisions","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") separated <- separate_quant_matrices(     integration_matrices ) no_coll <- remove_collisions(     x = separated$seqCount,     association_file = association_file,     quant_cols = c(seqCount = \"Value\"),     report_path = NULL ) #> Identifying collisions... #> Processing collisions... #> Finished! realigned <- realign_after_collisions(     sc_matrix = no_coll,     other_matrices = list(fragmentEstimate = separated$fragmentEstimate) ) realigned #> $fragmentEstimate #>       chr integration_locus strand     GeneName GeneStrand #>    1:  16          68164148      +       NFATC3          + #>    2:   4         129390130      + LOC100507487          + #>    3:   5          84009671      -        EDIL3          - #>    4:  12          54635693      -         CBX5          - #>    5:   5          84009671      -        EDIL3          - #>   ---                                                      #> 1675:   6           3388625      -         HTR4          + #> 1676:  16           3207754      +       UBE2D2          + #> 1677:  19          13631664      -    LINC01133          + #> 1678:  12          48119158      -        KMT2D          - #> 1679:  14          30726412      -     PLEKHG4B          - #>                                                    CompleteAmplificationID #>    1: PJ01_POOL01_LTR75LC38_PT001_PT001-103_lenti_GLOBE_PB_1_SLiM_0060_MNC #>    2:  PJ01_POOL01_LTR53LC32_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #>    3:  PJ01_POOL01_LTR53LC32_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #>    4:  PJ01_POOL01_LTR83LC66_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #>    5:  PJ01_POOL01_LTR83LC66_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #>   ---                                                                      #> 1675: PJ01_POOL03_LTR93LC90_PT002_PT002-464_lenti_GLOBE_PB_1_SLiM_0360_MNC #> 1676: PJ01_POOL03_LTR93LC90_PT002_PT002-464_lenti_GLOBE_PB_1_SLiM_0360_MNC #> 1677: PJ01_POOL03_LTR93LC90_PT002_PT002-464_lenti_GLOBE_PB_1_SLiM_0360_MNC #> 1678: PJ01_POOL03_LTR93LC90_PT002_PT002-464_lenti_GLOBE_PB_1_SLiM_0360_MNC #> 1679: PJ01_POOL03_LTR93LC90_PT002_PT002-464_lenti_GLOBE_PB_1_SLiM_0360_MNC #>            Value #>    1: 102.945718 #>    2:  68.737467 #>    3:  67.123486 #>    4:  65.157600 #>    5:  61.469810 #>   ---            #> 1675:  11.761600 #> 1676:  12.600475 #> 1677:   1.704548 #> 1678:  11.366729 #> 1679:   6.047534 #>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/reduced_AF_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of the columns of the association file to consider for\nVispa2 launch. — reduced_AF_columns","title":"Names of the columns of the association file to consider for\nVispa2 launch. — reduced_AF_columns","text":"Selection column names association file considered Vispa2 launch. NOTE: TagID column appears needs repeated twice generating launch file. Use appropriate function generate file automatically.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/reduced_AF_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of the columns of the association file to consider for\nVispa2 launch. — reduced_AF_columns","text":"","code":"reduced_AF_columns()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/reduced_AF_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Names of the columns of the association file to consider for\nVispa2 launch. — reduced_AF_columns","text":"character vector","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/reduced_AF_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Names of the columns of the association file to consider for\nVispa2 launch. — reduced_AF_columns","text":"","code":"reduced_AF_columns() #> # A tibble: 10 × 2 #>    names                   tag         #>    <chr>                   <chr>       #>  1 CellMarker              cell_marker #>  2 FUSIONID                fusion_id   #>  3 CompleteAmplificationID pcr_repl_id #>  4 PoolID                  pool_id     #>  5 ProjectID               project_id  #>  6 SubjectID               subject     #>  7 TagID                   tag_id      #>  8 Tissue                  tissue      #>  9 TimePoint               tp_days     #> 10 VectorID                vector_id"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/refGene_table_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Required columns for refGene file. — refGene_table_cols","title":"Required columns for refGene file. — refGene_table_cols","text":"Required columns refGene file.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/refGene_table_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Required columns for refGene file. — refGene_table_cols","text":"","code":"refGene_table_cols()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/refGene_table_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Required columns for refGene file. — refGene_table_cols","text":"Character vector column names","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/refGene_table_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Required columns for refGene file. — refGene_table_cols","text":"","code":"refGene_table_cols() #>  [1] \"name2\"          \"chrom\"          \"strand\"         \"min_txStart\"    #>  [5] \"max_txEnd\"      \"minmax_TxLen\"   \"average_TxLen\"  \"name\"           #>  [9] \"min_cdsStart\"   \"max_cdsEnd\"     \"minmax_CdsLen\"  \"average_CdsLen\""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/refGenes_hg19.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene annotation files for hg19, mm9 and mm10. — refGenes_hg19","title":"Gene annotation files for hg19, mm9 and mm10. — refGenes_hg19","text":"file obtained following steps: Download http://hgdownload.soe.ucsc.edu/goldenPath/hg19/database/ refGene.sql, knownGene.sql, knownToRefSeq.sql, kgXref.sql tables Import everything mysql Generate views annotation:","code":"SELECT kg.`chrom`, min(kg.cdsStart) as CDS_minStart, max(kg.`cdsEnd`) as CDS_maxEnd, k2a.geneSymbol, kg.`strand` as GeneStrand, min(kg.txStart) as TSS_minStart, max(kg.txEnd) as TSS_maxStart, kg.proteinID as ProteinID, k2a.protAcc as ProteinAcc, k2a.spDisplayID FROM `knownGene` AS kg JOIN kgXref AS k2a ON BINARY kg.name = k2a.kgID COLLATE latin1_bin -- latin1_swedish_ci -- WHERE k2a.spDisplayID IS NOT NULL and (k2a.`geneSymbol` LIKE 'Tcra%' or k2a.`geneSymbol` LIKE 'TCRA%') WHERE (k2a.spDisplayID IS NOT NULL or k2a.spDisplayID NOT LIKE '') and k2a.`geneSymbol` LIKE 'Tcra%' group by kg.`chrom`, k2a.geneSymbol ORDER BY kg.chrom ASC , kg.txStart ASC"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/refGenes_hg19.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene annotation files for hg19, mm9 and mm10. — refGenes_hg19","text":"","code":"data(\"refGenes_hg19\")  data(\"refGenes_mm9\")"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/refGenes_hg19.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene annotation files for hg19, mm9 and mm10. — refGenes_hg19","text":"object class tbl_df (inherits tbl, data.frame) 27275 rows 12 columns. object class tbl_df (inherits tbl, data.frame) 24487 rows 12 columns.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/refGenes_hg19.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Gene annotation files for hg19, mm9 and mm10. — refGenes_hg19","text":"refGenes_mm9: Data frame murine mm9 genome","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/remove_collisions.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies and removes collisions. — remove_collisions","title":"Identifies and removes collisions. — remove_collisions","text":"collision integration (aka unique combination provided mandatory_IS_vars()) observed one independent sample. function tries decide independent sample integration event assigned , decision can taken, integration completely removed data frame. details refer vignette \"Collision removal functionality\": vignette(\"workflow_start\", package = \"ISAnalytics\")","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/remove_collisions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies and removes collisions. — remove_collisions","text":"","code":"remove_collisions(   x,   association_file,   independent_sample_id = c(\"ProjectID\", \"SubjectID\"),   date_col = \"SequencingDate\",   reads_ratio = 10,   quant_cols = c(seqCount = \"seqCount\", fragmentEstimate = \"fragmentEstimate\"),   report_path = default_report_path(),   max_workers = NULL )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/remove_collisions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies and removes collisions. — remove_collisions","text":"x Either multi-quantification matrix (recommended) named list matrices (names must quantification types) association_file association file imported via import_association_file() independent_sample_id character vector column names identify independent samples date_col date column considered. reads_ratio single numeric value represents ratio considered deciding seqCount value. quant_cols named character vector names quantification types values names corresponding columns. quantification seqCount MUST included vector. report_path path report file saved. Can folder NULL report produced. Defaults {user_home}/ISAnalytics_reports. max_workers Maximum number parallel workers distribute workload. NULL (default) produces maximum amount workers allowed, numeric value requested otherwise. WARNING: higher number workers speeds computation cost memory consumption! Tune parameter accordingly.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/remove_collisions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies and removes collisions. — remove_collisions","text":"Either multi-quantification matrix list data frames","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/remove_collisions.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Identifies and removes collisions. — remove_collisions","text":"function explicitly check presence tags: project_id pool_id pcr_replicate","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/remove_collisions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies and removes collisions. — remove_collisions","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") no_coll <- remove_collisions(     x = integration_matrices,     association_file = association_file,     report_path = NULL ) #> Identifying collisions... #> Processing collisions... #> Finished! head(no_coll) #> # A tibble: 6 × 8 #>   chr   integration_locus strand GeneName GeneStrand CompleteAmplificationID     #>   <chr>             <dbl> <chr>  <chr>    <chr>      <chr>                       #> 1 1              16602483 +      FBXO42   -          PJ01_POOL01_LTR83LC46_PT00… #> 2 1              16602483 +      FBXO42   -          PJ01_POOL01_LTR37LC2_PT001… #> 3 1              16602483 +      FBXO42   -          PJ01_POOL01_LTR85LC54_PT00… #> 4 1              26446899 +      PDIK1L   +          PJ01_POOL01_LTR85LC54_PT00… #> 5 1              26446899 +      PDIK1L   +          PJ01_POOL01_LTR83LC46_PT00… #> 6 1              26446899 +      PDIK1L   +          PJ01_POOL01_LTR69LC52_PT00… #> # ℹ 2 more variables: seqCount <dbl>, fragmentEstimate <dbl>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/reset_mandatory_IS_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Resets dynamic vars to the default values. — reset_mandatory_IS_vars","title":"Resets dynamic vars to the default values. — reset_mandatory_IS_vars","text":"Reverts changes dynamic vars default values. details, refer dedicated vignette vignette(\"workflow_start\", package=\"ISAnalytics\"). reset_mandatory_IS_vars() re-sets look-table mandatory vars. reset_annotation_IS_vars() re-sets look-table genomic annotation vars. reset_af_columns_def() re-sets look-table association file columns vars reset_iss_stats_specs() re-sets look-table VISPA2 pool statistics vars reset_matrix_file_suffixes() re-sets matrix file suffixes look-table reset_dyn_vars_config() re-sets look-tables","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/reset_mandatory_IS_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resets dynamic vars to the default values. — reset_mandatory_IS_vars","text":"","code":"reset_mandatory_IS_vars()  reset_annotation_IS_vars()  reset_af_columns_def()  reset_iss_stats_specs()  reset_matrix_file_suffixes()  reset_dyn_vars_config()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/reset_mandatory_IS_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resets dynamic vars to the default values. — reset_mandatory_IS_vars","text":"NULL","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/reset_mandatory_IS_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resets dynamic vars to the default values. — reset_mandatory_IS_vars","text":"","code":"reset_mandatory_IS_vars() #> Mandatory IS vars reset to default  reset_annotation_IS_vars() #> Annotation IS vars reset to default  reset_af_columns_def() #> Association file columns specs reset to default  reset_iss_stats_specs() #> ISS stats specs reset to default  reset_matrix_file_suffixes() #> Matrix suffixes specs reset to default  reset_dyn_vars_config() #> Mandatory IS vars reset to default #> Annotation IS vars reset to default #> Association file columns specs reset to default #> ISS stats specs reset to default #> Matrix suffixes specs reset to default"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sample_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes user specified functions on numerical columns and updates\nthe metadata data frame accordingly. — sample_statistics","title":"Computes user specified functions on numerical columns and updates\nthe metadata data frame accordingly. — sample_statistics","text":"function operates data frame grouping content sample key computing every function specified every column value_columns parameter. metadata data frame updated including computed results columns corresponding key. reason required x metadata sample key, particularly important user working previously aggregated data. example:","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(  x = integration_matrices,  association_file = association_file,  value_cols = c(\"seqCount\", \"fragmentEstimate\") ) aggreg_meta <- aggregate_metadata(association_file = association_file)  sample_stats <- sample_statistics(x = aggreg, metadata = aggreg_meta, value_columns = c(\"seqCount\", \"fragmentEstimate\"), sample_key = c(\"SubjectID\", \"CellMarker\",\"Tissue\", \"TimePoint\"))"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sample_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes user specified functions on numerical columns and updates\nthe metadata data frame accordingly. — sample_statistics","text":"","code":"sample_statistics(   x,   metadata,   sample_key = \"CompleteAmplificationID\",   value_columns = \"Value\",   functions = default_stats(),   add_integrations_count = TRUE )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sample_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes user specified functions on numerical columns and updates\nthe metadata data frame accordingly. — sample_statistics","text":"x data frame metadata metadata data frame sample_key Character vector representing key identifying sample value_columns name columns computed, must numeric integer functions named list function purrr-style lambdas add_integrations_count Add count distinct integration sites group? Can computed x contains mandatory columns mandatory_IS_vars()","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sample_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes user specified functions on numerical columns and updates\nthe metadata data frame accordingly. — sample_statistics","text":"list modified x metadata data frames","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sample_statistics.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Computes user specified functions on numerical columns and updates\nthe metadata data frame accordingly. — sample_statistics","text":"function explicitly check presence tags: columns declared mandatory_IS_vars() checked add_integrations_count = TRUE.","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sample_statistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes user specified functions on numerical columns and updates\nthe metadata data frame accordingly. — sample_statistics","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") stats <- sample_statistics(     x = integration_matrices,     metadata = association_file,     value_columns = c(\"seqCount\", \"fragmentEstimate\") ) stats #> $x #> # A tibble: 53 × 38 #>    CompleteAmplificationID          seqCount_sum seqCount_count seqCount_shannon #>    <chr>                                   <dbl>          <int>            <dbl> #>  1 PJ01_POOL01_LTR19LC2_PT001_PT00…         3029             22             1.82 #>  2 PJ01_POOL01_LTR27LC94_PT001_PT0…        80610             67             3.02 #>  3 PJ01_POOL01_LTR29LC90_PT001_PT0…           30              8             1.89 #>  4 PJ01_POOL01_LTR37LC18_PT001_PT0…           44             10             2.00 #>  5 PJ01_POOL01_LTR37LC2_PT001_PT00…        50859             82             3.76 #>  6 PJ01_POOL01_LTR49LC12_PT001_PT0…           33             10             1.93 #>  7 PJ01_POOL01_LTR53LC22_PT001_PT0…            1              1             0    #>  8 PJ01_POOL01_LTR53LC32_PT001_PT0…       129867             72             3.24 #>  9 PJ01_POOL01_LTR57LC20_PT001_PT0…        57443             20             2.41 #> 10 PJ01_POOL01_LTR5LC64_PT001_PT00…        41488             39             2.89 #> # ℹ 43 more rows #> # ℹ 34 more variables: seqCount_simpson <dbl>, seqCount_invsimpson <dbl>, #> #   fragmentEstimate_sum <dbl>, fragmentEstimate_count <int>, #> #   fragmentEstimate_shannon <dbl>, fragmentEstimate_simpson <dbl>, #> #   fragmentEstimate_invsimpson <dbl>, seqCount_describe_vars <dbl>, #> #   seqCount_describe_n <dbl>, seqCount_describe_mean <dbl>, #> #   seqCount_describe_sd <dbl>, seqCount_describe_median <dbl>, … #>  #> $metadata #>     ProjectID  FUSIONID PoolID TagSequence SubjectID VectorType VectorID #>  1:      PJ01 ET#382.46 POOL01   LTR75LC38     PT001      lenti    GLOBE #>  2:      PJ01 ET#381.40 POOL01   LTR53LC32     PT001      lenti    GLOBE #>  3:      PJ01  ET#381.9 POOL01   LTR83LC66     PT001      lenti    GLOBE #>  4:      PJ01 ET#381.71 POOL01   LTR27LC94     PT001      lenti    GLOBE #>  5:      PJ01  ET#381.2 POOL01   LTR69LC52     PT001      lenti    GLOBE #>  6:      PJ01 ET#382.28 POOL01    LTR37LC2     PT001      lenti    GLOBE #>  7:      PJ01  ET#382.2 POOL01   LTR77LC46     PT001      lenti    GLOBE #>  8:      PJ01 ET#382.50 POOL01   LTR83LC46     PT001      lenti    GLOBE #>  9:      PJ01 ET#381.21 POOL01    LTR9LC90     PT001      lenti    GLOBE #> 10:      PJ01 ET#407.28 POOL02   LTR65LC56     PT001      lenti    GLOBE #> 11:      PJ01 ET#381.33 POOL01   LTR37LC18     PT001      lenti    GLOBE #> 12:      PJ01 ET#382.15 POOL01    LTR7LC72     PT001      lenti    GLOBE #> 13:      PJ01  ET#382.6 POOL01   LTR85LC54     PT001      lenti    GLOBE #> 14:      PJ01 ET#381.52 POOL01   LTR77LC56     PT001      lenti    GLOBE #> 15:      PJ01 ET#382.55 POOL01   LTR93LC56     PT001      lenti    GLOBE #> 16:      PJ01 ET#381.25 POOL01    LTR19LC2     PT001      lenti    GLOBE #> 17:      PJ01 ET#382.11 POOL01   LTR95LC64     PT001      lenti    GLOBE #> 18:      PJ01 ET#382.33 POOL01   LTR49LC12     PT001      lenti    GLOBE #> 19:      PJ01 ET#382.37 POOL01   LTR57LC20     PT001      lenti    GLOBE #> 20:      PJ01 ET#382.59 POOL01    LTR5LC64     PT001      lenti    GLOBE #> 21:      PJ01 ET#381.56 POOL01   LTR85LC64     PT001      lenti    GLOBE #> 22:      PJ01 ET#381.87 POOL01   LTR61LC30     PT001      lenti    GLOBE #> 23:      PJ01 ET#408.37 POOL02   LTR87LC74     PT001      lenti    GLOBE #> 24:      PJ01 ET#382.24 POOL01   LTR29LC90     PT001      lenti    GLOBE #> 25:      PJ01 ET#381.83 POOL01   LTR53LC22     PT001      lenti    GLOBE #> 26:      PJ01 ET#381.64 POOL01    LTR9LC80     PT001      lenti    GLOBE #> 27:      PJ01  FB585.26 POOL03   LTR73LC86     PT002      lenti    GLOBE #> 28:      PJ01 ET#408.58 POOL04   LTR41LC20     PT002      lenti    GLOBE #> 29:      PJ01 ET#408.27 POOL04   LTR65LC54     PT002      lenti    GLOBE #> 30:      PJ01   FB585.4 POOL03   LTR51LC86     PT002      lenti    GLOBE #> 31:      PJ01 ET#414.31 POOL04   LTR85LC62     PT002      lenti    GLOBE #> 32:      PJ01 ET#408.89 POOL04   LTR11LC82     PT002      lenti    GLOBE #> 33:      PJ01  FB585.24 POOL03   LTR71LC90     PT002      lenti    GLOBE #> 34:      PJ01 ET#414.16 POOL04   LTR51LC32     PT002      lenti    GLOBE #> 35:      PJ01  FB585.46 POOL03   LTR93LC90     PT002      lenti    GLOBE #> 36:      PJ01 ET#411.42 POOL04    LTR5LC84     PT002      lenti    GLOBE #> 37:      PJ01  ET#414.1 POOL04    LTR13LC2     PT002      lenti    GLOBE #> 38:      PJ01 ET#412.41 POOL04    LTR5LC82     PT002      lenti    GLOBE #> 39:      PJ01 ET#411.49 POOL04    LTR25LC2     PT002      lenti    GLOBE #> 40:      PJ01 ET#411.18 POOL04   LTR49LC36     PT002      lenti    GLOBE #> 41:      PJ01 ET#412.23 POOL04   LTR63LC46     PT002      lenti    GLOBE #> 42:      PJ01 ET#411.80 POOL04   LTR93LC64     PT002      lenti    GLOBE #> 43:      PJ01   FB585.2 POOL03   LTR49LC90     PT002      lenti    GLOBE #> 44:      PJ01  FB585.48 POOL03   LTR95LC86     PT002      lenti    GLOBE #> 45:      PJ01 ET#412.72 POOL04   LTR79LC48     PT002      lenti    GLOBE #> 46:      PJ01 ET#412.65 POOL04   LTR63LC34     PT002      lenti    GLOBE #> 47:      PJ01 ET#412.85 POOL04    LTR9LC74     PT002      lenti    GLOBE #> 48:      PJ01 ET#412.10 POOL04   LTR33LC20     PT002      lenti    GLOBE #> 49:      PJ01 ET#408.82 POOL04   LTR93LC68     PT002      lenti    GLOBE #> 50:      PJ01  ET#412.3 POOL04    LTR13LC6     PT002      lenti    GLOBE #> 51:      PJ01 ET#412.54 POOL04   LTR37LC12     PT002      lenti    GLOBE #> 52:      PJ01 ET#412.34 POOL04   LTR87LC68     PT002      lenti    GLOBE #> 53:      PJ01 ET#408.51 POOL04    LTR25LC6     PT002      lenti    GLOBE #>     ProjectID  FUSIONID PoolID TagSequence SubjectID VectorType VectorID #>     ExperimentID Tissue TimePoint DNAFragmentation PCRMethod TagIDextended #>  1:         <NA>     PB      0060            SONIC      SLiM     LTR75LC38 #>  2:         <NA>     BM      0180            SONIC      SLiM     LTR53LC32 #>  3:         <NA>     BM      0180            SONIC      SLiM     LTR83LC66 #>  4:         <NA>     BM      0180            SONIC      SLiM     LTR27LC94 #>  5:         <NA>     PB      0180            SONIC      SLiM     LTR69LC52 #>  6:         <NA>     BM      0060            SONIC      SLiM      LTR37LC2 #>  7:         <NA>     PB      0060            SONIC      SLiM     LTR77LC46 #>  8:         <NA>     BM      0060            SONIC      SLiM     LTR83LC46 #>  9:         <NA>     PB      0030            SONIC      SLiM      LTR9LC90 #> 10:         <NA>     PB      0360            SONIC      SLiM     LTR65LC56 #> 11:         <NA>     PB      0180            SONIC      SLiM     LTR37LC18 #> 12:         <NA>     BM      0090            SONIC      SLiM      LTR7LC72 #> 13:         <NA>     BM      0060            SONIC      SLiM     LTR85LC54 #> 14:         <NA>     PB      0030            SONIC      SLiM     LTR77LC56 #> 15:         <NA>     PB      0090            SONIC      SLiM     LTR93LC56 #> 16:         <NA>     BM      0030            SONIC      SLiM      LTR19LC2 #> 17:         <NA>     PB      0090            SONIC      SLiM     LTR95LC64 #> 18:         <NA>     PB      0090            SONIC      SLiM     LTR49LC12 #> 19:         <NA>     BM      0090            SONIC      SLiM     LTR57LC20 #> 20:         <NA>     BM      0090            SONIC      SLiM      LTR5LC64 #> 21:         <NA>     BM      0030            SONIC      SLiM     LTR85LC64 #> 22:         <NA>     BM      0030            SONIC      SLiM     LTR61LC30 #> 23:         <NA>     BM      0360            SONIC      SLiM     LTR87LC74 #> 24:         <NA>     PB      0060            SONIC      SLiM     LTR29LC90 #> 25:         <NA>     PB      0030            SONIC      SLiM     LTR53LC22 #> 26:         <NA>     PB      0180            SONIC      SLiM      LTR9LC80 #> 27:         <NA>     BM      0360            SONIC      SLiM     LTR73LC86 #> 28:         <NA>     BM      0030            SONIC      SLiM     LTR41LC20 #> 29:         <NA>     BM      0030            SONIC      SLiM     LTR65LC54 #> 30:         <NA>     BM      0360            SONIC      SLiM     LTR51LC86 #> 31:         <NA>     BM      0180            SONIC      SLiM     LTR85LC62 #> 32:         <NA>     BM      0030            SONIC      SLiM     LTR11LC82 #> 33:         <NA>     PB      0360            SONIC      SLiM     LTR71LC90 #> 34:         <NA>     BM      0180            SONIC      SLiM     LTR51LC32 #> 35:         <NA>     PB      0360            SONIC      SLiM     LTR93LC90 #> 36:         <NA>     PB      0060            SONIC      SLiM      LTR5LC84 #> 37:         <NA>     BM      0180            SONIC      SLiM      LTR13LC2 #> 38:         <NA>     BM      0090            SONIC      SLiM      LTR5LC82 #> 39:         <NA>     BM      0060            SONIC      SLiM      LTR25LC2 #> 40:         <NA>     BM      0060            SONIC      SLiM     LTR49LC36 #> 41:         <NA>     PB      0180            SONIC      SLiM     LTR63LC46 #> 42:         <NA>     BM      0060            SONIC      SLiM     LTR93LC64 #> 43:         <NA>     PB      0360            SONIC      SLiM     LTR49LC90 #> 44:         <NA>     BM      0360            SONIC      SLiM     LTR95LC86 #> 45:         <NA>     BM      0090            SONIC      SLiM     LTR79LC48 #> 46:         <NA>     PB      0090            SONIC      SLiM     LTR63LC34 #> 47:         <NA>     PB      0180            SONIC      SLiM      LTR9LC74 #> 48:         <NA>     BM      0090            SONIC      SLiM     LTR33LC20 #> 49:         <NA>     PB      0030            SONIC      SLiM     LTR93LC68 #> 50:         <NA>     PB      0090            SONIC      SLiM      LTR13LC6 #> 51:         <NA>     PB      0180            SONIC      SLiM     LTR37LC12 #> 52:         <NA>     PB      0090            SONIC      SLiM     LTR87LC68 #> 53:         <NA>     PB      0030            SONIC      SLiM      LTR25LC6 #>     ExperimentID Tissue TimePoint DNAFragmentation PCRMethod TagIDextended #>     Keywords CellMarker      TagID NGSProvider NGSTechnology ConverrtedFilesDir #>  1:     <NA>        MNC LTR75.LC38        <NA>         HiSeq               <NA> #>  2:     <NA>        MNC LTR53.LC32        <NA>         HiSeq               <NA> #>  3:     <NA>        MNC LTR83.LC66        <NA>         HiSeq               <NA> #>  4:     <NA>        MNC LTR27.LC94        <NA>         HiSeq               <NA> #>  5:     <NA>        MNC LTR69.LC52        <NA>         HiSeq               <NA> #>  6:     <NA>        MNC  LTR37.LC2        <NA>         HiSeq               <NA> #>  7:     <NA>        MNC LTR77.LC46        <NA>         HiSeq               <NA> #>  8:     <NA>        MNC LTR83.LC46        <NA>         HiSeq               <NA> #>  9:     <NA>        MNC  LTR9L.C90        <NA>         HiSeq               <NA> #> 10:     <NA>        MNC LTR65.LC56        <NA>         HiSeq               <NA> #> 11:     <NA>        MNC LTR37.LC18        <NA>         HiSeq               <NA> #> 12:     <NA>        MNC  LTR7L.C72        <NA>         HiSeq               <NA> #> 13:     <NA>        MNC LTR85.LC54        <NA>         HiSeq               <NA> #> 14:     <NA>        MNC LTR77.LC56        <NA>         HiSeq               <NA> #> 15:     <NA>        MNC LTR93.LC56        <NA>         HiSeq               <NA> #> 16:     <NA>        MNC  LTR19.LC2        <NA>         HiSeq               <NA> #> 17:     <NA>        MNC LTR95.LC64        <NA>         HiSeq               <NA> #> 18:     <NA>        MNC LTR49.LC12        <NA>         HiSeq               <NA> #> 19:     <NA>        MNC LTR57.LC20        <NA>         HiSeq               <NA> #> 20:     <NA>        MNC  LTR5L.C64        <NA>         HiSeq               <NA> #> 21:     <NA>        MNC LTR85.LC64        <NA>         HiSeq               <NA> #> 22:     <NA>        MNC LTR61.LC30        <NA>         HiSeq               <NA> #> 23:     <NA>        MNC LTR87.LC74        <NA>         HiSeq               <NA> #> 24:     <NA>        MNC LTR29.LC90        <NA>         HiSeq               <NA> #> 25:     <NA>        MNC LTR53.LC22        <NA>         HiSeq               <NA> #> 26:     <NA>        MNC  LTR9L.C80        <NA>         HiSeq               <NA> #> 27:     <NA>        MNC LTR73.LC86        <NA>         HiSeq               <NA> #> 28:     <NA>        MNC LTR41.LC20        <NA>         HiSeq               <NA> #> 29:     <NA>        MNC LTR65.LC54        <NA>         HiSeq               <NA> #> 30:     <NA>        MNC LTR51.LC86        <NA>         HiSeq               <NA> #> 31:     <NA>        MNC LTR85.LC62        <NA>         HiSeq               <NA> #> 32:     <NA>        MNC LTR11.LC82        <NA>         HiSeq               <NA> #> 33:     <NA>        MNC LTR71.LC90        <NA>         HiSeq               <NA> #> 34:     <NA>        MNC LTR51.LC32        <NA>         HiSeq               <NA> #> 35:     <NA>        MNC LTR93.LC90        <NA>         HiSeq               <NA> #> 36:     <NA>        MNC  LTR5L.C84        <NA>         HiSeq               <NA> #> 37:     <NA>        MNC  LTR13.LC2        <NA>         HiSeq               <NA> #> 38:     <NA>        MNC  LTR5L.C82        <NA>         HiSeq               <NA> #> 39:     <NA>        MNC  LTR25.LC2        <NA>         HiSeq               <NA> #> 40:     <NA>        MNC LTR49.LC36        <NA>         HiSeq               <NA> #> 41:     <NA>        MNC LTR63.LC46        <NA>         HiSeq               <NA> #> 42:     <NA>        MNC LTR93.LC64        <NA>         HiSeq               <NA> #> 43:     <NA>        MNC LTR49.LC90        <NA>         HiSeq               <NA> #> 44:     <NA>        MNC LTR95.LC86        <NA>         HiSeq               <NA> #> 45:     <NA>        MNC LTR79.LC48        <NA>         HiSeq               <NA> #> 46:     <NA>        MNC LTR63.LC34        <NA>         HiSeq               <NA> #> 47:     <NA>        MNC  LTR9L.C74        <NA>         HiSeq               <NA> #> 48:     <NA>        MNC LTR33.LC20        <NA>         HiSeq               <NA> #> 49:     <NA>        MNC LTR93.LC68        <NA>         HiSeq               <NA> #> 50:     <NA>        MNC  LTR13.LC6        <NA>         HiSeq               <NA> #> 51:     <NA>        MNC LTR37.LC12        <NA>         HiSeq               <NA> #> 52:     <NA>        MNC LTR87.LC68        <NA>         HiSeq               <NA> #> 53:     <NA>        MNC  LTR25.LC6        <NA>         HiSeq               <NA> #>     Keywords CellMarker      TagID NGSProvider NGSTechnology ConverrtedFilesDir #>     ConverrtedFilesName SourceFileFolder SourceFileNameR1 SourceFileNameR2 #>  1:                <NA>             <NA>             <NA>             <NA> #>  2:                <NA>             <NA>             <NA>             <NA> #>  3:                <NA>             <NA>             <NA>             <NA> #>  4:                <NA>             <NA>             <NA>             <NA> #>  5:                <NA>             <NA>             <NA>             <NA> #>  6:                <NA>             <NA>             <NA>             <NA> #>  7:                <NA>             <NA>             <NA>             <NA> #>  8:                <NA>             <NA>             <NA>             <NA> #>  9:                <NA>             <NA>             <NA>             <NA> #> 10:                <NA>             <NA>             <NA>             <NA> #> 11:                <NA>             <NA>             <NA>             <NA> #> 12:                <NA>             <NA>             <NA>             <NA> #> 13:                <NA>             <NA>             <NA>             <NA> #> 14:                <NA>             <NA>             <NA>             <NA> #> 15:                <NA>             <NA>             <NA>             <NA> #> 16:                <NA>             <NA>             <NA>             <NA> #> 17:                <NA>             <NA>             <NA>             <NA> #> 18:                <NA>             <NA>             <NA>             <NA> #> 19:                <NA>             <NA>             <NA>             <NA> #> 20:                <NA>             <NA>             <NA>             <NA> #> 21:                <NA>             <NA>             <NA>             <NA> #> 22:                <NA>             <NA>             <NA>             <NA> #> 23:                <NA>             <NA>             <NA>             <NA> #> 24:                <NA>             <NA>             <NA>             <NA> #> 25:                <NA>             <NA>             <NA>             <NA> #> 26:                <NA>             <NA>             <NA>             <NA> #> 27:                <NA>             <NA>             <NA>             <NA> #> 28:                <NA>             <NA>             <NA>             <NA> #> 29:                <NA>             <NA>             <NA>             <NA> #> 30:                <NA>             <NA>             <NA>             <NA> #> 31:                <NA>             <NA>             <NA>             <NA> #> 32:                <NA>             <NA>             <NA>             <NA> #> 33:                <NA>             <NA>             <NA>             <NA> #> 34:                <NA>             <NA>             <NA>             <NA> #> 35:                <NA>             <NA>             <NA>             <NA> #> 36:                <NA>             <NA>             <NA>             <NA> #> 37:                <NA>             <NA>             <NA>             <NA> #> 38:                <NA>             <NA>             <NA>             <NA> #> 39:                <NA>             <NA>             <NA>             <NA> #> 40:                <NA>             <NA>             <NA>             <NA> #> 41:                <NA>             <NA>             <NA>             <NA> #> 42:                <NA>             <NA>             <NA>             <NA> #> 43:                <NA>             <NA>             <NA>             <NA> #> 44:                <NA>             <NA>             <NA>             <NA> #> 45:                <NA>             <NA>             <NA>             <NA> #> 46:                <NA>             <NA>             <NA>             <NA> #> 47:                <NA>             <NA>             <NA>             <NA> #> 48:                <NA>             <NA>             <NA>             <NA> #> 49:                <NA>             <NA>             <NA>             <NA> #> 50:                <NA>             <NA>             <NA>             <NA> #> 51:                <NA>             <NA>             <NA>             <NA> #> 52:                <NA>             <NA>             <NA>             <NA> #> 53:                <NA>             <NA>             <NA>             <NA> #>     ConverrtedFilesName SourceFileFolder SourceFileNameR1 SourceFileNameR2 #>     DNAnumber ReplicateNumber DNAextractionDate DNAngUsed LinearPCRID #>  1: PT001-103               3        2016-03-16   23.1840        <NA> #>  2:  PT001-81               2        2016-07-15  181.4400        <NA> #>  3:  PT001-81               1        2016-07-15  181.4400        <NA> #>  4:  PT001-81               3        2016-07-15  181.4400        <NA> #>  5:  PT001-74               1        2016-07-15   23.0580        <NA> #>  6: PT001-107               2        2016-03-16  171.3600        <NA> #>  7: PT001-103               1        2016-03-16   23.1840        <NA> #>  8: PT001-107               3        2016-03-16  171.3600        <NA> #>  9:  PT001-93               1        2016-02-16   23.8500        <NA> #> 10: PT001-149               1        2017-01-13   45.1500        <NA> #> 11:  PT001-74               2        2016-07-15   23.0580        <NA> #> 12: PT001-116               1        2016-04-15   89.2080        <NA> #> 13: PT001-107               1        2016-03-16  171.3600        <NA> #> 14:  PT001-93               2        2016-02-16   23.8500        <NA> #> 15: PT001-112               3        2016-04-15   26.5680        <NA> #> 16:  PT001-97               1        2016-02-16  300.0327        <NA> #> 17: PT001-112               1        2016-04-15   26.5680        <NA> #> 18: PT001-112               2        2016-04-15   26.5680        <NA> #> 19: PT001-116               2        2016-04-15   89.2080        <NA> #> 20: PT001-116               3        2016-04-15   89.2080        <NA> #> 21:  PT001-97               2        2016-02-16  300.0327        <NA> #> 22:  PT001-97               3        2016-02-16  300.0327        <NA> #> 23: PT001-156               2        2017-01-13   42.0000        <NA> #> 24: PT001-103               2        2016-03-16   23.1840        <NA> #> 25:  PT001-93               3        2016-02-16   23.8500        <NA> #> 26:  PT001-74               3        2016-07-15   23.0580        <NA> #> 27: PT002-466               2        2017-05-24  299.3220        <NA> #> 28: PT002-177               2        2016-07-11  181.5000        <NA> #> 29: PT002-177               1        2016-07-11  181.5000        <NA> #> 30: PT002-466               1        2017-05-24  299.3220        <NA> #> 31: PT002-238               3        2016-12-09  196.5000        <NA> #> 32: PT002-177               3        2016-07-11  181.5000        <NA> #> 33: PT002-464               2        2017-05-24  300.4800        <NA> #> 34: PT002-238               2        2016-12-09  196.5000        <NA> #> 35: PT002-464               3        2017-05-24  300.4800        <NA> #> 36: PT002-190               2        2016-08-10   77.4000        <NA> #> 37: PT002-238               1        2016-12-09  196.5000        <NA> #> 38: PT002-218               2        2016-09-09  135.1500        <NA> #> 39: PT002-197               2        2016-08-10  172.5000        <NA> #> 40: PT002-197               1        2016-08-10  172.5000        <NA> #> 41: PT002-231               1        2016-12-14  122.5500        <NA> #> 42: PT002-197               3        2016-08-10  172.5000        <NA> #> 43: PT002-464               1        2017-05-24  300.4800        <NA> #> 44: PT002-466               3        2017-05-24  299.3220        <NA> #> 45: PT002-218               3        2016-09-09  135.1500        <NA> #> 46: PT002-211               3        2016-09-09  123.0000        <NA> #> 47: PT002-231               3        2016-12-14  122.5500        <NA> #> 48: PT002-218               1        2016-09-09  135.1500        <NA> #> 49: PT002-170               3        2016-07-12  106.3500        <NA> #> 50: PT002-211               1        2016-09-09  123.0000        <NA> #> 51: PT002-231               2        2016-12-14  122.5500        <NA> #> 52: PT002-211               2        2016-09-09  123.0000        <NA> #> 53: PT002-170               2        2016-07-12  106.3500        <NA> #>     DNAnumber ReplicateNumber DNAextractionDate DNAngUsed LinearPCRID #>     LinearPCRDate SonicationDate LigationDate 1stExpoPCRID 1stExpoPCRDate #>  1:          <NA>     2016-11-02   2016-11-02    ET#380.46     2016-11-02 #>  2:          <NA>     2016-11-02   2016-11-02    ET#379.40     2016-11-02 #>  3:          <NA>     2016-11-02   2016-11-02     ET#379.9     2016-11-02 #>  4:          <NA>     2016-11-02   2016-11-02    ET#379.71     2016-11-02 #>  5:          <NA>     2016-11-02   2016-11-02     ET#379.2     2016-11-02 #>  6:          <NA>     2016-11-02   2016-11-02    ET#380.28     2016-11-02 #>  7:          <NA>     2016-11-02   2016-11-02     ET#380.2     2016-11-02 #>  8:          <NA>     2016-11-02   2016-11-02    ET#380.50     2016-11-02 #>  9:          <NA>     2016-11-02   2016-11-02    ET#379.21     2016-11-02 #> 10:          <NA>     2017-04-19   2017-04-19    ET#405.28     2017-04-20 #> 11:          <NA>     2016-11-02   2016-11-02    ET#379.33     2016-11-02 #> 12:          <NA>     2016-11-02   2016-11-02    ET#380.15     2016-11-02 #> 13:          <NA>     2016-11-02   2016-11-02     ET#380.6     2016-11-02 #> 14:          <NA>     2016-11-02   2016-11-02    ET#379.52     2016-11-02 #> 15:          <NA>     2016-11-02   2016-11-02    ET#380.55     2016-11-02 #> 16:          <NA>     2016-11-02   2016-11-02    ET#379.25     2016-11-02 #> 17:          <NA>     2016-11-02   2016-11-02    ET#380.11     2016-11-02 #> 18:          <NA>     2016-11-02   2016-11-02    ET#380.33     2016-11-02 #> 19:          <NA>     2016-11-02   2016-11-02    ET#380.37     2016-11-02 #> 20:          <NA>     2016-11-02   2016-11-02    ET#380.59     2016-11-02 #> 21:          <NA>     2016-11-02   2016-11-02    ET#379.56     2016-11-02 #> 22:          <NA>     2016-11-02   2016-11-02    ET#379.87     2016-11-02 #> 23:          <NA>     2017-04-19   2017-04-19    ET#406.37     2017-04-20 #> 24:          <NA>     2016-11-02   2016-11-02    ET#380.24     2016-11-02 #> 25:          <NA>     2016-11-02   2016-11-02    ET#379.83     2016-11-02 #> 26:          <NA>     2016-11-02   2016-11-02    ET#379.64     2016-11-02 #> 27:          <NA>     2018-03-12   2018-03-12     FB584.26     2018-03-12 #> 28:          <NA>     2017-04-19   2017-04-19    ET#406.58     2017-04-20 #> 29:          <NA>     2017-04-19   2017-04-19    ET#406.27     2017-04-20 #> 30:          <NA>     2018-03-12   2018-03-12      FB584.4     2018-03-12 #> 31:          <NA>     2017-05-12   2017-05-12    ET#413.31     2017-05-12 #> 32:          <NA>     2017-04-19   2017-04-19    ET#406.89     2017-04-20 #> 33:          <NA>     2018-03-12   2018-03-12     FB584.24     2018-03-12 #> 34:          <NA>     2017-05-12   2017-05-12    ET#413.16     2017-05-12 #> 35:          <NA>     2018-03-12   2018-03-12     FB584.46     2018-03-12 #> 36:          <NA>     2017-05-03   2017-05-03    ET#409.42     2017-05-04 #> 37:          <NA>     2017-05-12   2017-05-12     ET#413.1     2017-05-12 #> 38:          <NA>     2017-05-03   2017-05-03    ET#410.41     2017-05-04 #> 39:          <NA>     2017-05-03   2017-05-03    ET#409.49     2017-05-04 #> 40:          <NA>     2017-05-03   2017-05-03    ET#409.18     2017-05-04 #> 41:          <NA>     2017-05-03   2017-05-03    ET#410.23     2017-05-04 #> 42:          <NA>     2017-05-03   2017-05-03    ET#409.80     2017-05-04 #> 43:          <NA>     2018-03-12   2018-03-12      FB584.2     2018-03-12 #> 44:          <NA>     2018-03-12   2018-03-12     FB584.48     2018-03-12 #> 45:          <NA>     2017-05-03   2017-05-03    ET#410.72     2017-05-04 #> 46:          <NA>     2017-05-03   2017-05-03    ET#410.65     2017-05-04 #> 47:          <NA>     2017-05-03   2017-05-03    ET#410.85     2017-05-04 #> 48:          <NA>     2017-05-03   2017-05-03    ET#410.10     2017-05-04 #> 49:          <NA>     2017-04-19   2017-04-19    ET#406.82     2017-04-20 #> 50:          <NA>     2017-05-03   2017-05-03     ET#410.3     2017-05-04 #> 51:          <NA>     2017-05-03   2017-05-03    ET#410.54     2017-05-04 #> 52:          <NA>     2017-05-03   2017-05-03    ET#410.34     2017-05-04 #> 53:          <NA>     2017-04-19   2017-04-19    ET#406.51     2017-04-20 #>     LinearPCRDate SonicationDate LigationDate 1stExpoPCRID 1stExpoPCRDate #>     2ndExpoID 2ndExpoDate FusionPrimerPCRID FusionPrimerPCRDate   PoolDate #>  1:      <NA>        <NA>         ET#382.46          2016-11-03 2016-11-07 #>  2:      <NA>        <NA>         ET#381.40          2016-11-03 2016-11-07 #>  3:      <NA>        <NA>          ET#381.9          2016-11-03 2016-11-07 #>  4:      <NA>        <NA>         ET#381.71          2016-11-03 2016-11-07 #>  5:      <NA>        <NA>          ET#381.2          2016-11-03 2016-11-07 #>  6:      <NA>        <NA>         ET#382.28          2016-11-03 2016-11-07 #>  7:      <NA>        <NA>          ET#382.2          2016-11-03 2016-11-07 #>  8:      <NA>        <NA>         ET#382.50          2016-11-03 2016-11-07 #>  9:      <NA>        <NA>         ET#381.21          2016-11-03 2016-11-07 #> 10:      <NA>        <NA>         ET#407.28          2017-04-21 2017-04-27 #> 11:      <NA>        <NA>         ET#381.33          2016-11-03 2016-11-07 #> 12:      <NA>        <NA>         ET#382.15          2016-11-03 2016-11-07 #> 13:      <NA>        <NA>          ET#382.6          2016-11-03 2016-11-07 #> 14:      <NA>        <NA>         ET#381.52          2016-11-03 2016-11-07 #> 15:      <NA>        <NA>         ET#382.55          2016-11-03 2016-11-07 #> 16:      <NA>        <NA>         ET#381.25          2016-11-03 2016-11-07 #> 17:      <NA>        <NA>         ET#382.11          2016-11-03 2016-11-07 #> 18:      <NA>        <NA>         ET#382.33          2016-11-03 2016-11-07 #> 19:      <NA>        <NA>         ET#382.37          2016-11-03 2016-11-07 #> 20:      <NA>        <NA>         ET#382.59          2016-11-03 2016-11-07 #> 21:      <NA>        <NA>         ET#381.56          2016-11-03 2016-11-07 #> 22:      <NA>        <NA>         ET#381.87          2016-11-03 2016-11-07 #> 23:      <NA>        <NA>         ET#408.37          2017-04-21 2017-04-27 #> 24:      <NA>        <NA>         ET#382.24          2016-11-03 2016-11-07 #> 25:      <NA>        <NA>         ET#381.83          2016-11-03 2016-11-07 #> 26:      <NA>        <NA>         ET#381.64          2016-11-03 2016-11-07 #> 27:      <NA>        <NA>          FB585.26          2018-03-12 2018-03-13 #> 28:      <NA>        <NA>         ET#408.58          2017-04-21 2017-05-17 #> 29:      <NA>        <NA>         ET#408.27          2017-04-21 2017-05-17 #> 30:      <NA>        <NA>           FB585.4          2018-03-12 2018-03-13 #> 31:      <NA>        <NA>         ET#414.31          2017-05-16 2017-05-17 #> 32:      <NA>        <NA>         ET#408.89          2017-04-21 2017-05-17 #> 33:      <NA>        <NA>          FB585.24          2018-03-12 2018-03-13 #> 34:      <NA>        <NA>         ET#414.16          2017-05-16 2017-05-17 #> 35:      <NA>        <NA>          FB585.46          2018-03-12 2018-03-13 #> 36:      <NA>        <NA>         ET#411.42          2017-05-05 2017-05-17 #> 37:      <NA>        <NA>          ET#414.1          2017-05-16 2017-05-17 #> 38:      <NA>        <NA>         ET#412.41          2017-05-05 2017-05-17 #> 39:      <NA>        <NA>         ET#411.49          2017-05-05 2017-05-17 #> 40:      <NA>        <NA>         ET#411.18          2017-05-05 2017-05-17 #> 41:      <NA>        <NA>         ET#412.23          2017-05-05 2017-05-17 #> 42:      <NA>        <NA>         ET#411.80          2017-05-05 2017-05-17 #> 43:      <NA>        <NA>           FB585.2          2018-03-12 2018-03-13 #> 44:      <NA>        <NA>          FB585.48          2018-03-12 2018-03-13 #> 45:      <NA>        <NA>         ET#412.72          2017-05-05 2017-05-17 #> 46:      <NA>        <NA>         ET#412.65          2017-05-05 2017-05-17 #> 47:      <NA>        <NA>         ET#412.85          2017-05-05 2017-05-17 #> 48:      <NA>        <NA>         ET#412.10          2017-05-05 2017-05-17 #> 49:      <NA>        <NA>         ET#408.82          2017-04-21 2017-05-17 #> 50:      <NA>        <NA>          ET#412.3          2017-05-05 2017-05-17 #> 51:      <NA>        <NA>         ET#412.54          2017-05-05 2017-05-17 #> 52:      <NA>        <NA>         ET#412.34          2017-05-05 2017-05-17 #> 53:      <NA>        <NA>         ET#408.51          2017-04-21 2017-05-17 #>     2ndExpoID 2ndExpoDate FusionPrimerPCRID FusionPrimerPCRDate   PoolDate #>     SequencingDate  VCN Genome SequencingRound Genotype TestGroup  MOI #>  1:     2016-11-15 0.30   hg19               1     <NA>      <NA> <NA> #>  2:     2016-11-15 0.27   hg19               1     <NA>      <NA> <NA> #>  3:     2016-11-15 0.27   hg19               1     <NA>      <NA> <NA> #>  4:     2016-11-15 0.27   hg19               1     <NA>      <NA> <NA> #>  5:     2016-11-15 0.24   hg19               1     <NA>      <NA> <NA> #>  6:     2016-11-15 0.42   hg19               1     <NA>      <NA> <NA> #>  7:     2016-11-15 0.30   hg19               1     <NA>      <NA> <NA> #>  8:     2016-11-15 0.42   hg19               1     <NA>      <NA> <NA> #>  9:     2016-11-15 0.23   hg19               1     <NA>      <NA> <NA> #> 10:     2017-06-23 0.19   hg19               1     <NA>      <NA> <NA> #> 11:     2016-11-15 0.24   hg19               1     <NA>      <NA> <NA> #> 12:     2016-11-15 0.35   hg19               1     <NA>      <NA> <NA> #> 13:     2016-11-15 0.42   hg19               1     <NA>      <NA> <NA> #> 14:     2016-11-15 0.23   hg19               1     <NA>      <NA> <NA> #> 15:     2016-11-15 0.26   hg19               1     <NA>      <NA> <NA> #> 16:     2016-11-15 0.26   hg19               1     <NA>      <NA> <NA> #> 17:     2016-11-15 0.26   hg19               1     <NA>      <NA> <NA> #> 18:     2016-11-15 0.26   hg19               1     <NA>      <NA> <NA> #> 19:     2016-11-15 0.35   hg19               1     <NA>      <NA> <NA> #> 20:     2016-11-15 0.35   hg19               1     <NA>      <NA> <NA> #> 21:     2016-11-15 0.26   hg19               1     <NA>      <NA> <NA> #> 22:     2016-11-15 0.26   hg19               1     <NA>      <NA> <NA> #> 23:     2017-06-23 0.18   hg19               1     <NA>      <NA> <NA> #> 24:     2016-11-15 0.30   hg19               1     <NA>      <NA> <NA> #> 25:     2016-11-15 0.23   hg19               1     <NA>      <NA> <NA> #> 26:     2016-11-15 0.24   hg19               1     <NA>      <NA> <NA> #> 27:     2018-03-15 2.52   hg19               1     <NA>      <NA> <NA> #> 28:     2017-06-23 1.01   hg19               1     <NA>      <NA> <NA> #> 29:     2017-06-23 1.01   hg19               1     <NA>      <NA> <NA> #> 30:     2018-03-15 2.52   hg19               1     <NA>      <NA> <NA> #> 31:     2017-06-23 2.30   hg19               1     <NA>      <NA> <NA> #> 32:     2017-06-23 1.01   hg19               1     <NA>      <NA> <NA> #> 33:     2018-03-15 2.07   hg19               1     <NA>      <NA> <NA> #> 34:     2017-06-23 2.30   hg19               1     <NA>      <NA> <NA> #> 35:     2018-03-15 2.07   hg19               1     <NA>      <NA> <NA> #> 36:     2017-06-23 1.07   hg19               1     <NA>      <NA> <NA> #> 37:     2017-06-23 2.30   hg19               1     <NA>      <NA> <NA> #> 38:     2017-06-23 2.05   hg19               1     <NA>      <NA> <NA> #> 39:     2017-06-23 1.24   hg19               1     <NA>      <NA> <NA> #> 40:     2017-06-23 1.24   hg19               1     <NA>      <NA> <NA> #> 41:     2017-06-23 1.43   hg19               1     <NA>      <NA> <NA> #> 42:     2017-06-23 1.24   hg19               1     <NA>      <NA> <NA> #> 43:     2018-03-15 2.07   hg19               1     <NA>      <NA> <NA> #> 44:     2018-03-15 2.52   hg19               1     <NA>      <NA> <NA> #> 45:     2017-06-23 2.05   hg19               1     <NA>      <NA> <NA> #> 46:     2017-06-23 1.09   hg19               1     <NA>      <NA> <NA> #> 47:     2017-06-23 1.43   hg19               1     <NA>      <NA> <NA> #> 48:     2017-06-23 2.05   hg19               1     <NA>      <NA> <NA> #> 49:     2017-06-23 0.77   hg19               1     <NA>      <NA> <NA> #> 50:     2017-06-23 1.09   hg19               1     <NA>      <NA> <NA> #> 51:     2017-06-23 1.43   hg19               1     <NA>      <NA> <NA> #> 52:     2017-06-23 1.09   hg19               1     <NA>      <NA> <NA> #> 53:     2017-06-23 0.77   hg19               1     <NA>      <NA> <NA> #>     SequencingDate  VCN Genome SequencingRound Genotype TestGroup  MOI #>     Engraftment Transduction Notes AddedField1 AddedField2 AddedField3 #>  1:          NA           NA  <NA>        <NA>        <NA>        <NA> #>  2:          NA           NA  <NA>        <NA>        <NA>        <NA> #>  3:          NA           NA  <NA>        <NA>        <NA>        <NA> #>  4:          NA           NA  <NA>        <NA>        <NA>        <NA> #>  5:          NA           NA  <NA>        <NA>        <NA>        <NA> #>  6:          NA           NA  <NA>        <NA>        <NA>        <NA> #>  7:          NA           NA  <NA>        <NA>        <NA>        <NA> #>  8:          NA           NA  <NA>        <NA>        <NA>        <NA> #>  9:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 10:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 11:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 12:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 13:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 14:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 15:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 16:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 17:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 18:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 19:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 20:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 21:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 22:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 23:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 24:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 25:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 26:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 27:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 28:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 29:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 30:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 31:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 32:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 33:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 34:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 35:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 36:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 37:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 38:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 39:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 40:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 41:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 42:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 43:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 44:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 45:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 46:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 47:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 48:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 49:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 50:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 51:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 52:          NA           NA  <NA>        <NA>        <NA>        <NA> #> 53:          NA           NA  <NA>        <NA>        <NA>        <NA> #>     Engraftment Transduction Notes AddedField1 AddedField2 AddedField3 #>     AddedField4 concatenatePoolIDSeqRun AddedField6_RelativeBloodPercentage #>  1:        <NA>                POOL01-1                                <NA> #>  2:        <NA>                POOL01-1                                <NA> #>  3:        <NA>                POOL01-1                                <NA> #>  4:        <NA>                POOL01-1                                <NA> #>  5:        <NA>                POOL01-1                                <NA> #>  6:        <NA>                POOL01-1                                <NA> #>  7:        <NA>                POOL01-1                                <NA> #>  8:        <NA>                POOL01-1                                <NA> #>  9:        <NA>                POOL01-1                                <NA> #> 10:        <NA>                POOL02-1                                <NA> #> 11:        <NA>                POOL01-1                                <NA> #> 12:        <NA>                POOL01-1                                <NA> #> 13:        <NA>                POOL01-1                                <NA> #> 14:        <NA>                POOL01-1                                <NA> #> 15:        <NA>                POOL01-1                                <NA> #> 16:        <NA>                POOL01-1                                <NA> #> 17:        <NA>                POOL01-1                                <NA> #> 18:        <NA>                POOL01-1                                <NA> #> 19:        <NA>                POOL01-1                                <NA> #> 20:        <NA>                POOL01-1                                <NA> #> 21:        <NA>                POOL01-1                                <NA> #> 22:        <NA>                POOL01-1                                <NA> #> 23:        <NA>                POOL02-1                                <NA> #> 24:        <NA>                POOL01-1                                <NA> #> 25:        <NA>                POOL01-1                                <NA> #> 26:        <NA>                POOL01-1                                <NA> #> 27:        <NA>                POOL03-1                                <NA> #> 28:        <NA>                POOL04-1                                <NA> #> 29:        <NA>                POOL04-1                                <NA> #> 30:        <NA>                POOL03-1                                <NA> #> 31:        <NA>                POOL04-1                                <NA> #> 32:        <NA>                POOL04-1                                <NA> #> 33:        <NA>                POOL03-1                                <NA> #> 34:        <NA>                POOL04-1                                <NA> #> 35:        <NA>                POOL03-1                                <NA> #> 36:        <NA>                POOL04-1                                <NA> #> 37:        <NA>                POOL04-1                                <NA> #> 38:        <NA>                POOL04-1                                <NA> #> 39:        <NA>                POOL04-1                                <NA> #> 40:        <NA>                POOL04-1                                <NA> #> 41:        <NA>                POOL04-1                                <NA> #> 42:        <NA>                POOL04-1                                <NA> #> 43:        <NA>                POOL03-1                                <NA> #> 44:        <NA>                POOL03-1                                <NA> #> 45:        <NA>                POOL04-1                                <NA> #> 46:        <NA>                POOL04-1                                <NA> #> 47:        <NA>                POOL04-1                                <NA> #> 48:        <NA>                POOL04-1                                <NA> #> 49:        <NA>                POOL04-1                                <NA> #> 50:        <NA>                POOL04-1                                <NA> #> 51:        <NA>                POOL04-1                                <NA> #> 52:        <NA>                POOL04-1                                <NA> #> 53:        <NA>                POOL04-1                                <NA> #>     AddedField4 concatenatePoolIDSeqRun AddedField6_RelativeBloodPercentage #>     AddedField7_PurityTestFeasibility AddedField8_FacsSeparationPurity #>  1:                                NA                               NA #>  2:                                NA                               NA #>  3:                                NA                               NA #>  4:                                NA                               NA #>  5:                                NA                               NA #>  6:                                NA                               NA #>  7:                                NA                               NA #>  8:                                NA                               NA #>  9:                                NA                               NA #> 10:                                NA                               NA #> 11:                                NA                               NA #> 12:                                NA                               NA #> 13:                                NA                               NA #> 14:                                NA                               NA #> 15:                                NA                               NA #> 16:                                NA                               NA #> 17:                                NA                               NA #> 18:                                NA                               NA #> 19:                                NA                               NA #> 20:                                NA                               NA #> 21:                                NA                               NA #> 22:                                NA                               NA #> 23:                                NA                               NA #> 24:                                NA                               NA #> 25:                                NA                               NA #> 26:                                NA                               NA #> 27:                                NA                               NA #> 28:                                NA                               NA #> 29:                                NA                               NA #> 30:                                NA                               NA #> 31:                                NA                               NA #> 32:                                NA                               NA #> 33:                                NA                               NA #> 34:                                NA                               NA #> 35:                                NA                               NA #> 36:                                NA                               NA #> 37:                                NA                               NA #> 38:                                NA                               NA #> 39:                                NA                               NA #> 40:                                NA                               NA #> 41:                                NA                               NA #> 42:                                NA                               NA #> 43:                                NA                               NA #> 44:                                NA                               NA #> 45:                                NA                               NA #> 46:                                NA                               NA #> 47:                                NA                               NA #> 48:                                NA                               NA #> 49:                                NA                               NA #> 50:                                NA                               NA #> 51:                                NA                               NA #> 52:                                NA                               NA #> 53:                                NA                               NA #>     AddedField7_PurityTestFeasibility AddedField8_FacsSeparationPurity #>          Kapa ulForPool #>  1:        NA        NA #>  2:        NA        NA #>  3:        NA        NA #>  4:        NA        NA #>  5:        NA        NA #>  6:        NA        NA #>  7:        NA        NA #>  8:        NA        NA #>  9:        NA        NA #> 10:        NA        NA #> 11:        NA        NA #> 12:        NA        NA #> 13:        NA        NA #> 14:        NA        NA #> 15:        NA        NA #> 16:        NA        NA #> 17:        NA        NA #> 18:        NA        NA #> 19:        NA        NA #> 20:        NA        NA #> 21:        NA        NA #> 22:        NA        NA #> 23:        NA        NA #> 24:        NA        NA #> 25:        NA        NA #> 26:        NA        NA #> 27: 57.128501  1.000000 #> 28:        NA        NA #> 29:        NA        NA #> 30: 41.796937  1.000000 #> 31:        NA        NA #> 32:        NA        NA #> 33:  9.813033  1.528579 #> 34:        NA        NA #> 35: 52.331328  1.000000 #> 36:        NA        NA #> 37:        NA        NA #> 38:        NA        NA #> 39:        NA        NA #> 40:        NA        NA #> 41:        NA        NA #> 42:        NA        NA #> 43:  3.820188  3.926508 #> 44: 16.312071  1.000000 #> 45:        NA        NA #> 46:        NA        NA #> 47:        NA        NA #> 48:        NA        NA #> 49:        NA        NA #> 50:        NA        NA #> 51:        NA        NA #> 52:        NA        NA #> 53:        NA        NA #>          Kapa ulForPool #>                                                  CompleteAmplificationID #>  1: PJ01_POOL01_LTR75LC38_PT001_PT001-103_lenti_GLOBE_PB_1_SLiM_0060_MNC #>  2:  PJ01_POOL01_LTR53LC32_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #>  3:  PJ01_POOL01_LTR83LC66_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #>  4:  PJ01_POOL01_LTR27LC94_PT001_PT001-81_lenti_GLOBE_BM_1_SLiM_0180_MNC #>  5:  PJ01_POOL01_LTR69LC52_PT001_PT001-74_lenti_GLOBE_PB_1_SLiM_0180_MNC #>  6:  PJ01_POOL01_LTR37LC2_PT001_PT001-107_lenti_GLOBE_BM_1_SLiM_0060_MNC #>  7: PJ01_POOL01_LTR77LC46_PT001_PT001-103_lenti_GLOBE_PB_1_SLiM_0060_MNC #>  8: PJ01_POOL01_LTR83LC46_PT001_PT001-107_lenti_GLOBE_BM_1_SLiM_0060_MNC #>  9:   PJ01_POOL01_LTR9LC90_PT001_PT001-93_lenti_GLOBE_PB_1_SLiM_0030_MNC #> 10: PJ01_POOL02_LTR65LC56_PT001_PT001-149_lenti_GLOBE_PB_1_SLiM_0360_MNC #> 11:  PJ01_POOL01_LTR37LC18_PT001_PT001-74_lenti_GLOBE_PB_1_SLiM_0180_MNC #> 12:  PJ01_POOL01_LTR7LC72_PT001_PT001-116_lenti_GLOBE_BM_1_SLiM_0090_MNC #> 13: PJ01_POOL01_LTR85LC54_PT001_PT001-107_lenti_GLOBE_BM_1_SLiM_0060_MNC #> 14:  PJ01_POOL01_LTR77LC56_PT001_PT001-93_lenti_GLOBE_PB_1_SLiM_0030_MNC #> 15: PJ01_POOL01_LTR93LC56_PT001_PT001-112_lenti_GLOBE_PB_1_SLiM_0090_MNC #> 16:   PJ01_POOL01_LTR19LC2_PT001_PT001-97_lenti_GLOBE_BM_1_SLiM_0030_MNC #> 17: PJ01_POOL01_LTR95LC64_PT001_PT001-112_lenti_GLOBE_PB_1_SLiM_0090_MNC #> 18: PJ01_POOL01_LTR49LC12_PT001_PT001-112_lenti_GLOBE_PB_1_SLiM_0090_MNC #> 19: PJ01_POOL01_LTR57LC20_PT001_PT001-116_lenti_GLOBE_BM_1_SLiM_0090_MNC #> 20:  PJ01_POOL01_LTR5LC64_PT001_PT001-116_lenti_GLOBE_BM_1_SLiM_0090_MNC #> 21:  PJ01_POOL01_LTR85LC64_PT001_PT001-97_lenti_GLOBE_BM_1_SLiM_0030_MNC #> 22:  PJ01_POOL01_LTR61LC30_PT001_PT001-97_lenti_GLOBE_BM_1_SLiM_0030_MNC #> 23: PJ01_POOL02_LTR87LC74_PT001_PT001-156_lenti_GLOBE_BM_1_SLiM_0360_MNC #> 24: PJ01_POOL01_LTR29LC90_PT001_PT001-103_lenti_GLOBE_PB_1_SLiM_0060_MNC #> 25:  PJ01_POOL01_LTR53LC22_PT001_PT001-93_lenti_GLOBE_PB_1_SLiM_0030_MNC #> 26:   PJ01_POOL01_LTR9LC80_PT001_PT001-74_lenti_GLOBE_PB_1_SLiM_0180_MNC #> 27: PJ01_POOL03_LTR73LC86_PT002_PT002-466_lenti_GLOBE_BM_1_SLiM_0360_MNC #> 28: PJ01_POOL04_LTR41LC20_PT002_PT002-177_lenti_GLOBE_BM_1_SLiM_0030_MNC #> 29: PJ01_POOL04_LTR65LC54_PT002_PT002-177_lenti_GLOBE_BM_1_SLiM_0030_MNC #> 30: PJ01_POOL03_LTR51LC86_PT002_PT002-466_lenti_GLOBE_BM_1_SLiM_0360_MNC #> 31: PJ01_POOL04_LTR85LC62_PT002_PT002-238_lenti_GLOBE_BM_1_SLiM_0180_MNC #> 32: PJ01_POOL04_LTR11LC82_PT002_PT002-177_lenti_GLOBE_BM_1_SLiM_0030_MNC #> 33: PJ01_POOL03_LTR71LC90_PT002_PT002-464_lenti_GLOBE_PB_1_SLiM_0360_MNC #> 34: PJ01_POOL04_LTR51LC32_PT002_PT002-238_lenti_GLOBE_BM_1_SLiM_0180_MNC #> 35: PJ01_POOL03_LTR93LC90_PT002_PT002-464_lenti_GLOBE_PB_1_SLiM_0360_MNC #> 36:  PJ01_POOL04_LTR5LC84_PT002_PT002-190_lenti_GLOBE_PB_1_SLiM_0060_MNC #> 37:  PJ01_POOL04_LTR13LC2_PT002_PT002-238_lenti_GLOBE_BM_1_SLiM_0180_MNC #> 38:  PJ01_POOL04_LTR5LC82_PT002_PT002-218_lenti_GLOBE_BM_1_SLiM_0090_MNC #> 39:  PJ01_POOL04_LTR25LC2_PT002_PT002-197_lenti_GLOBE_BM_1_SLiM_0060_MNC #> 40: PJ01_POOL04_LTR49LC36_PT002_PT002-197_lenti_GLOBE_BM_1_SLiM_0060_MNC #> 41: PJ01_POOL04_LTR63LC46_PT002_PT002-231_lenti_GLOBE_PB_1_SLiM_0180_MNC #> 42: PJ01_POOL04_LTR93LC64_PT002_PT002-197_lenti_GLOBE_BM_1_SLiM_0060_MNC #> 43: PJ01_POOL03_LTR49LC90_PT002_PT002-464_lenti_GLOBE_PB_1_SLiM_0360_MNC #> 44: PJ01_POOL03_LTR95LC86_PT002_PT002-466_lenti_GLOBE_BM_1_SLiM_0360_MNC #> 45: PJ01_POOL04_LTR79LC48_PT002_PT002-218_lenti_GLOBE_BM_1_SLiM_0090_MNC #> 46: PJ01_POOL04_LTR63LC34_PT002_PT002-211_lenti_GLOBE_PB_1_SLiM_0090_MNC #> 47:  PJ01_POOL04_LTR9LC74_PT002_PT002-231_lenti_GLOBE_PB_1_SLiM_0180_MNC #> 48: PJ01_POOL04_LTR33LC20_PT002_PT002-218_lenti_GLOBE_BM_1_SLiM_0090_MNC #> 49: PJ01_POOL04_LTR93LC68_PT002_PT002-170_lenti_GLOBE_PB_1_SLiM_0030_MNC #> 50:  PJ01_POOL04_LTR13LC6_PT002_PT002-211_lenti_GLOBE_PB_1_SLiM_0090_MNC #> 51: PJ01_POOL04_LTR37LC12_PT002_PT002-231_lenti_GLOBE_PB_1_SLiM_0180_MNC #> 52: PJ01_POOL04_LTR87LC68_PT002_PT002-211_lenti_GLOBE_PB_1_SLiM_0090_MNC #> 53:  PJ01_POOL04_LTR25LC6_PT002_PT002-170_lenti_GLOBE_PB_1_SLiM_0030_MNC #>                                                  CompleteAmplificationID #>                   UniqueID StudyTestID StudyTestGroup MouseID Tigroup Tisource #>  1: ID00000000000000007433        <NA>             NA      NA    <NA>     <NA> #>  2: ID00000000000000007340        <NA>             NA      NA    <NA>     <NA> #>  3: ID00000000000000007310        <NA>             NA      NA    <NA>     <NA> #>  4: ID00000000000000007370        <NA>             NA      NA    <NA>     <NA> #>  5: ID00000000000000007303        <NA>             NA      NA    <NA>     <NA> #>  6: ID00000000000000007417        <NA>             NA      NA    <NA>     <NA> #>  7: ID00000000000000007393        <NA>             NA      NA    <NA>     <NA> #>  8: ID00000000000000007437        <NA>             NA      NA    <NA>     <NA> #>  9: ID00000000000000007322        <NA>             NA      NA    <NA>     <NA> #> 10: ID00000000000000009697        <NA>             NA      NA    <NA>     <NA> #> 11: ID00000000000000007333        <NA>             NA      NA    <NA>     <NA> #> 12: ID00000000000000007406        <NA>             NA      NA    <NA>     <NA> #> 13: ID00000000000000007397        <NA>             NA      NA    <NA>     <NA> #> 14: ID00000000000000007352        <NA>             NA      NA    <NA>     <NA> #> 15: ID00000000000000007442        <NA>             NA      NA    <NA>     <NA> #> 16: ID00000000000000007326        <NA>             NA      NA    <NA>     <NA> #> 17: ID00000000000000007402        <NA>             NA      NA    <NA>     <NA> #> 18: ID00000000000000007422        <NA>             NA      NA    <NA>     <NA> #> 19: ID00000000000000007426        <NA>             NA      NA    <NA>     <NA> #> 20: ID00000000000000007446        <NA>             NA      NA    <NA>     <NA> #> 21: ID00000000000000007356        <NA>             NA      NA    <NA>     <NA> #> 22: ID00000000000000007386        <NA>             NA      NA    <NA>     <NA> #> 23: ID00000000000000009748        <NA>             NA      NA    <NA>     <NA> #> 24: ID00000000000000007413        <NA>             NA      NA    <NA>     <NA> #> 25: ID00000000000000007382        <NA>             NA      NA    <NA>     <NA> #> 26: ID00000000000000007363        <NA>             NA      NA    <NA>     <NA> #> 27: ID00000000000000013890        <NA>             NA      NA    <NA>     <NA> #> 28: ID00000000000000009785        <NA>             NA      NA    <NA>     <NA> #> 29: ID00000000000000009775        <NA>             NA      NA    <NA>     <NA> #> 30: ID00000000000000013868        <NA>             NA      NA    <NA>     <NA> #> 31: ID00000000000000009953        <NA>             NA      NA    <NA>     <NA> #> 32: ID00000000000000009793        <NA>             NA      NA    <NA>     <NA> #> 33: ID00000000000000013888        <NA>             NA      NA    <NA>     <NA> #> 34: ID00000000000000009942        <NA>             NA      NA    <NA>     <NA> #> 35: ID00000000000000013910        <NA>             NA      NA    <NA>     <NA> #> 36: ID00000000000000009826        <NA>             NA      NA    <NA>     <NA> #> 37: ID00000000000000009934        <NA>             NA      NA    <NA>     <NA> #> 38: ID00000000000000009890        <NA>             NA      NA    <NA>     <NA> #> 39: ID00000000000000009833        <NA>             NA      NA    <NA>     <NA> #> 40: ID00000000000000009807        <NA>             NA      NA    <NA>     <NA> #> 41: ID00000000000000009875        <NA>             NA      NA    <NA>     <NA> #> 42: ID00000000000000009850        <NA>             NA      NA    <NA>     <NA> #> 43: ID00000000000000013866        <NA>             NA      NA    <NA>     <NA> #> 44: ID00000000000000013912        <NA>             NA      NA    <NA>     <NA> #> 45: ID00000000000000009917        <NA>             NA      NA    <NA>     <NA> #> 46: ID00000000000000009910        <NA>             NA      NA    <NA>     <NA> #> 47: ID00000000000000009928        <NA>             NA      NA    <NA>     <NA> #> 48: ID00000000000000009866        <NA>             NA      NA    <NA>     <NA> #> 49: ID00000000000000009789        <NA>             NA      NA    <NA>     <NA> #> 50: ID00000000000000009859        <NA>             NA      NA    <NA>     <NA> #> 51: ID00000000000000009903        <NA>             NA      NA    <NA>     <NA> #> 52: ID00000000000000009884        <NA>             NA      NA    <NA>     <NA> #> 53: ID00000000000000009780        <NA>             NA      NA    <NA>     <NA> #>                   UniqueID StudyTestID StudyTestGroup MouseID Tigroup Tisource #>     PathToFolderProjectID SamplesNameCheck TimepointDays TimepointMonths #>  1:                 /PJ01             <NA>          0060              02 #>  2:                 /PJ01             <NA>          0180              06 #>  3:                 /PJ01             <NA>          0180              06 #>  4:                 /PJ01             <NA>          0180              06 #>  5:                 /PJ01             <NA>          0180              06 #>  6:                 /PJ01             <NA>          0060              02 #>  7:                 /PJ01             <NA>          0060              02 #>  8:                 /PJ01             <NA>          0060              02 #>  9:                 /PJ01             <NA>          0030              01 #> 10:                 /PJ01             <NA>          0360              12 #> 11:                 /PJ01             <NA>          0180              06 #> 12:                 /PJ01             <NA>          0090              03 #> 13:                 /PJ01             <NA>          0060              02 #> 14:                 /PJ01             <NA>          0030              01 #> 15:                 /PJ01             <NA>          0090              03 #> 16:                 /PJ01             <NA>          0030              01 #> 17:                 /PJ01             <NA>          0090              03 #> 18:                 /PJ01             <NA>          0090              03 #> 19:                 /PJ01             <NA>          0090              03 #> 20:                 /PJ01             <NA>          0090              03 #> 21:                 /PJ01             <NA>          0030              01 #> 22:                 /PJ01             <NA>          0030              01 #> 23:                 /PJ01             <NA>          0360              12 #> 24:                 /PJ01             <NA>          0060              02 #> 25:                 /PJ01             <NA>          0030              01 #> 26:                 /PJ01             <NA>          0180              06 #> 27:                 /PJ01             <NA>          0360              12 #> 28:                 /PJ01             <NA>          0030              01 #> 29:                 /PJ01             <NA>          0030              01 #> 30:                 /PJ01             <NA>          0360              12 #> 31:                 /PJ01             <NA>          0180              06 #> 32:                 /PJ01             <NA>          0030              01 #> 33:                 /PJ01             <NA>          0360              12 #> 34:                 /PJ01             <NA>          0180              06 #> 35:                 /PJ01             <NA>          0360              12 #> 36:                 /PJ01             <NA>          0060              02 #> 37:                 /PJ01             <NA>          0180              06 #> 38:                 /PJ01             <NA>          0090              03 #> 39:                 /PJ01             <NA>          0060              02 #> 40:                 /PJ01             <NA>          0060              02 #> 41:                 /PJ01             <NA>          0180              06 #> 42:                 /PJ01             <NA>          0060              02 #> 43:                 /PJ01             <NA>          0360              12 #> 44:                 /PJ01             <NA>          0360              12 #> 45:                 /PJ01             <NA>          0090              03 #> 46:                 /PJ01             <NA>          0090              03 #> 47:                 /PJ01             <NA>          0180              06 #> 48:                 /PJ01             <NA>          0090              03 #> 49:                 /PJ01             <NA>          0030              01 #> 50:                 /PJ01             <NA>          0090              03 #> 51:                 /PJ01             <NA>          0180              06 #> 52:                 /PJ01             <NA>          0090              03 #> 53:                 /PJ01             <NA>          0030              01 #>     PathToFolderProjectID SamplesNameCheck TimepointDays TimepointMonths #>     TimepointYears ng DNA corrected      RUN_NAME PHIX_MAPPING #>  1:             01            23.18 PJ01|POOL01-1     43586699 #>  2:             01           181.44 PJ01|POOL01-1     43586699 #>  3:             01           181.44 PJ01|POOL01-1     43586699 #>  4:             01           181.44 PJ01|POOL01-1     43586699 #>  5:             01            23.06 PJ01|POOL01-1     43586699 #>  6:             01           171.36 PJ01|POOL01-1     43586699 #>  7:             01            23.18 PJ01|POOL01-1     43586699 #>  8:             01           171.36 PJ01|POOL01-1     43586699 #>  9:             01            23.85 PJ01|POOL01-1     43586699 #> 10:             01            45.15 PJ01|POOL02-1     20409455 #> 11:             01            23.06 PJ01|POOL01-1     43586699 #> 12:             01            89.21 PJ01|POOL01-1     43586699 #> 13:             01           171.36 PJ01|POOL01-1     43586699 #> 14:             01            23.85 PJ01|POOL01-1     43586699 #> 15:             01            26.57 PJ01|POOL01-1     43586699 #> 16:             01           300.03 PJ01|POOL01-1     43586699 #> 17:             01            26.57 PJ01|POOL01-1     43586699 #> 18:             01            26.57 PJ01|POOL01-1     43586699 #> 19:             01            89.21 PJ01|POOL01-1     43586699 #> 20:             01            89.21 PJ01|POOL01-1     43586699 #> 21:             01           300.03 PJ01|POOL01-1     43586699 #> 22:             01           300.03 PJ01|POOL01-1     43586699 #> 23:             01            42.00 PJ01|POOL02-1     20409455 #> 24:             01            23.18 PJ01|POOL01-1     43586699 #> 25:             01            23.85 PJ01|POOL01-1     43586699 #> 26:             01            23.06 PJ01|POOL01-1     43586699 #> 27:             01           299.32 PJ01|POOL03-1     51183662 #> 28:             01           181.50 PJ01|POOL04-1     18979629 #> 29:             01           181.50 PJ01|POOL04-1     18979629 #> 30:             01           299.32 PJ01|POOL03-1     51183662 #> 31:             01           196.50 PJ01|POOL04-1     18979629 #> 32:             01           181.50 PJ01|POOL04-1     18979629 #> 33:             01           300.48 PJ01|POOL03-1     51183662 #> 34:             01           196.50 PJ01|POOL04-1     18979629 #> 35:             01           300.48 PJ01|POOL03-1     51183662 #> 36:             01            77.40 PJ01|POOL04-1     18979629 #> 37:             01           196.50 PJ01|POOL04-1     18979629 #> 38:             01           135.15 PJ01|POOL04-1     18979629 #> 39:             01           172.50 PJ01|POOL04-1     18979629 #> 40:             01           172.50 PJ01|POOL04-1     18979629 #> 41:             01           122.55 PJ01|POOL04-1     18979629 #> 42:             01           172.50 PJ01|POOL04-1     18979629 #> 43:             01           300.48 PJ01|POOL03-1     51183662 #> 44:             01           299.32 PJ01|POOL03-1     51183662 #> 45:             01           135.15 PJ01|POOL04-1     18979629 #> 46:             01           123.00 PJ01|POOL04-1     18979629 #> 47:             01           122.55 PJ01|POOL04-1     18979629 #> 48:             01           135.15 PJ01|POOL04-1     18979629 #> 49:             01           106.35 PJ01|POOL04-1     18979629 #> 50:             01           123.00 PJ01|POOL04-1     18979629 #> 51:             01           122.55 PJ01|POOL04-1     18979629 #> 52:             01           123.00 PJ01|POOL04-1     18979629 #> 53:             01           106.35 PJ01|POOL04-1     18979629 #>     TimepointYears ng DNA corrected      RUN_NAME PHIX_MAPPING #>     PLASMID_MAPPED_BYPOOL BARCODE_MUX LTR_IDENTIFIED TRIMMING_FINAL_LTRLC #>  1:               2256176      645026         645026               630965 #>  2:               2256176      652208         652177               649044 #>  3:               2256176      451519         451512               449669 #>  4:               2256176      426500         426499               425666 #>  5:               2256176       18300          18300                18290 #>  6:               2256176      729327         729327               727219 #>  7:               2256176       14999          14999                14996 #>  8:               2256176      748869         748865               746189 #>  9:               2256176      445754         445754               445717 #> 10:               1560035     1178016        1178016              1170116 #> 11:               2256176       36760          36760                36759 #> 12:               2256176      738518         738518               738512 #> 13:               2256176      971374         971339               968244 #> 14:               2256176      430438         430438               430423 #> 15:               2256176       33023          33023                33022 #> 16:               2256176      513783         513365               511701 #> 17:               2256176      635010         635010               634929 #> 18:               2256176       84541          84541                84540 #> 19:               2256176      633931         633931               631334 #> 20:               2256176      408400         408400               408393 #> 21:               2256176      553160         553160               551962 #> 22:               2256176      454734         454734               453088 #> 23:               1560035      800640         800640               800594 #> 24:               2256176       44888          44888                44876 #> 25:               2256176        7477           7477                 7474 #> 26:               2256176       71185          71185                71181 #> 27:                392602     6120512        6120512              6104882 #> 28:               1074651      456215         456210               452788 #> 29:               1074651      484852         484843               480224 #> 30:                392602     3536618        3536575              3532982 #> 31:               1074651      641193         640603               636224 #> 32:               1074651      660233         660117               654590 #> 33:                392602      963093         963017               961733 #> 34:               1074651      790616         790360               783702 #> 35:                392602     5308967        5308966              5280083 #> 36:               1074651      342636         342485               338616 #> 37:               1074651      490058         489719               487186 #> 38:               1074651      524854         524774               517187 #> 39:               1074651      308320         308114               306191 #> 40:               1074651      508548         508425               501959 #> 41:               1074651      995886         995864               980033 #> 42:               1074651      342626         342539               340481 #> 43:                392602      594361         594361               593948 #> 44:                392602     1827545        1827545              1825772 #> 45:               1074651      347728         347697               343609 #> 46:               1074651      346363         346362               342932 #> 47:               1074651      354092         353983               350767 #> 48:               1074651      405322         405276               402861 #> 49:               1074651      631307         631307               622869 #> 50:               1074651      361156         361138               358344 #> 51:               1074651      339082         338995               335745 #> 52:               1074651      331492         331477               328046 #> 53:               1074651      392967         392765               390451 #>     PLASMID_MAPPED_BYPOOL BARCODE_MUX LTR_IDENTIFIED TRIMMING_FINAL_LTRLC #>     LV_MAPPED BWA_MAPPED_OVERALL ISS_MAPPED_OVERALL RAW_READS QUALITY_PASSED #>  1:    211757             402477             219452        NA             NA #>  2:    303300             322086             222646        NA             NA #>  3:    204810             227275             149385        NA             NA #>  4:    185752             223915             143283        NA             NA #>  5:      6962              10487               5907        NA             NA #>  6:    318653             369117             235640        NA             NA #>  7:      6006               8591               5829        NA             NA #>  8:    339742             376479             247960        NA             NA #>  9:    217780             227190             192502        NA             NA #> 10:    567207             533620             310663        NA             NA #> 11:     31750               4654               4028        NA             NA #> 12:    345886             372292             251017        NA             NA #> 13:    410946             512137             320550        NA             NA #> 14:    195339             215676             176573        NA             NA #> 15:     19255              12545               8953        NA             NA #> 16:    213205             274453             178588        NA             NA #> 17:    273550             312464             173183        NA             NA #> 18:     55966              26795              24950        NA             NA #> 19:    273665             331492             207297        NA             NA #> 20:    193851             205558             142060        NA             NA #> 21:    249875             283399             189193        NA             NA #> 22:    201674             234982             160477        NA             NA #> 23:    396738             370781             234541        NA             NA #> 24:     18502              23817              16606        NA             NA #> 25:      3182               3944               2824        NA             NA #> 26:     37973              30617              19250        NA             NA #> 27:   2926769            2900368            1966725        NA             NA #> 28:    200981             210935             119095        NA             NA #> 29:    209373             214620             114170        NA             NA #> 30:   1663771            1787575            1334185        NA             NA #> 31:    297970             300563             180099        NA             NA #> 32:    278720             310685             171359        NA             NA #> 33:    449611             496042             374392        NA             NA #> 34:    348153             378898             222706        NA             NA #> 35:   2528864            2455083            1633331        NA             NA #> 36:    156154             162504              94468        NA             NA #> 37:    218398             241840             150078        NA             NA #> 38:    223785             235568             125591        NA             NA #> 39:    139167             142056              83601        NA             NA #> 40:    215787             234853             128363        NA             NA #> 41:    448587             368752             173206        NA             NA #> 42:    150283             161629              93421        NA             NA #> 43:    291931             293238             221993        NA             NA #> 44:    885302             903768             673344        NA             NA #> 45:    155701             155486              84035        NA             NA #> 46:    149781             167400              94120        NA             NA #> 47:    153595             163215              92043        NA             NA #> 48:    177016             187252             107526        NA             NA #> 49:    290076             271014             133798        NA             NA #> 50:    156230             165088              90776        NA             NA #> 51:    149265             158919              88033        NA             NA #> 52:    146490             147277              75439        NA             NA #> 53:    184167             172582              96911        NA             NA #>     LV_MAPPED BWA_MAPPED_OVERALL ISS_MAPPED_OVERALL RAW_READS QUALITY_PASSED #>     ISS_MAPPED_PP seqCount_sum seqCount_count seqCount_shannon seqCount_simpson #>  1:            NA          357             15        1.4928134        0.6693815 #>  2:            NA       129867             72        3.2386944        0.9183413 #>  3:            NA        77474             76        3.1390767        0.9088955 #>  4:            NA        80610             67        3.0212128        0.9041340 #>  5:            NA          147             26        2.4915716        0.8738951 #>  6:            NA        50859             82        3.7551750        0.9623687 #>  7:            NA          111             41        3.1703844        0.9263858 #>  8:            NA        53887             90        3.8384970        0.9721518 #>  9:            NA       121304             11        1.7647042        0.8132592 #> 10:            NA        16723             43        3.4154154        0.9626384 #> 11:            NA           44             10        1.9999913        0.8326446 #> 12:            NA        75905             31        2.7312148        0.9128491 #> 13:            NA        57684             77        3.8446041        0.9736556 #> 14:            NA       120472             19        2.3275229        0.8971868 #> 15:            NA           81             13        2.3180241        0.8876696 #> 16:            NA         3029             22        1.8161366        0.8042655 #> 17:            NA       116284             29        1.8520688        0.8373618 #> 18:            NA           33             10        1.9298441        0.8191001 #> 19:            NA        57443             20        2.4093193        0.8977445 #> 20:            NA        41488             39        2.8907905        0.9382894 #> 21:            NA         3697             32        1.9732310        0.8417839 #> 22:            NA          559             10        0.8013509        0.4811877 #> 23:            NA        42122             78        4.0692422        0.9797955 #> 24:            NA           30              8        1.8858896        0.8288889 #> 25:            NA            1              1        0.0000000        0.0000000 #> 26:            NA            1              1        0.0000000        0.0000000 #> 27:            NA        51114             48        3.5182831        0.9645795 #> 28:            NA         7516             65        3.9064574        0.9751075 #> 29:            NA         5978             74        3.7693672        0.9683265 #> 30:            NA        47816             46        3.3455043        0.9558975 #> 31:            NA         5014             48        3.4524970        0.9589726 #> 32:            NA         9150             87        4.0217856        0.9787792 #> 33:            NA         4287             12        2.1443631        0.8693443 #> 34:            NA         5238             52        3.5545359        0.9636314 #> 35:            NA        45416             35        3.2141718        0.9518653 #> 36:            NA         1468             18        1.9669258        0.8235138 #> 37:            NA         3280             52        3.6004539        0.9671765 #> 38:            NA         1029             36        2.2300233        0.8582969 #> 39:            NA         1851             20        2.5605560        0.9056275 #> 40:            NA         2089             19        2.4844667        0.9017753 #> 41:            NA           69             24        2.7403346        0.9103130 #> 42:            NA         1271             25        2.5482273        0.8953097 #> 43:            NA         1291              9        1.8695596        0.8200513 #> 44:            NA        16360             26        2.8263876        0.9281503 #> 45:            NA          565             10        1.9839406        0.8496076 #> 46:            NA         1538             14        1.8294052        0.8298129 #> 47:            NA         1958              8        1.7666363        0.8149891 #> 48:            NA          661              9        1.9948568        0.8502498 #> 49:            NA         1388             12        1.6183566        0.7803891 #> 50:            NA          117             11        0.5982805        0.2084886 #> 51:            NA            1              1        0.0000000        0.0000000 #> 52:            NA           40              2        0.1169068        0.0487500 #> 53:            NA            3              3        1.0986123        0.6666667 #>     ISS_MAPPED_PP seqCount_sum seqCount_count seqCount_shannon seqCount_simpson #>     seqCount_invsimpson fragmentEstimate_sum fragmentEstimate_count #>  1:            3.024634           201.064659                     15 #>  2:           12.246099           466.804667                     72 #>  3:           10.976410           445.727398                     76 #>  4:           10.431224           354.159459                     67 #>  5:            7.929908           134.338758                     26 #>  6:           26.573601           232.251224                     82 #>  7:           13.584344            86.913928                     41 #>  8:           35.908927           279.440177                     90 #>  9:            5.355015            54.445672                     11 #> 10:           26.765430          1812.911554                     43 #> 11:            5.975309            34.333137                     10 #> 12:           11.474357            98.541329                     31 #> 13:           37.958724           221.918390                     77 #> 14:            9.726378            63.390419                     19 #> 15:            8.902307            20.097692                     13 #> 16:            5.108961            53.231043                     22 #> 17:            6.148615            66.365138                     29 #> 18:            5.527919            26.162592                     10 #> 19:            9.779427            66.290122                     20 #> 20:           16.204669            91.324857                     39 #> 21:            6.320471            46.100979                     32 #> 22:            1.927479            15.029208                     10 #> 23:           49.493862          3547.631728                     78 #> 24:            5.844156             8.007481                      8 #> 25:            1.000000             1.000452                      1 #> 26:            1.000000             1.000310                      1 #> 27:           28.232219           172.660748                     48 #> 28:           40.172734           206.011551                     65 #> 29:           31.572121           218.425224                     74 #> 30:           22.674426           147.531730                     46 #> 31:           24.373976           130.581517                     48 #> 32:           47.123641           256.236461                     87 #> 33:            7.653703            40.176384                     12 #> 34:           27.496256           154.626814                     52 #> 35:           20.775038           166.082193                     35 #> 36:            5.666165            94.906121                     18 #> 37:           30.466007           134.490805                     52 #> 38:            7.057011            57.190086                     36 #> 39:           10.596312            46.149863                     20 #> 40:           10.180735            37.113766                     19 #> 41:           11.149883            37.174678                     24 #> 42:            9.551983            51.164592                     25 #> 43:            5.557141            26.094255                      9 #> 44:           13.917941            55.138395                     26 #> 45:            6.649274            27.081549                     10 #> 46:            5.875887            94.719278                     14 #> 47:            5.405088           106.417161                      8 #> 48:            6.677788            22.061603                      9 #> 49:            4.553509            75.778512                     12 #> 50:            1.263406            12.021148                     11 #> 51:            1.000000             1.001736                      1 #> 52:            1.051248             2.002185                      2 #> 53:            3.000000             3.004764                      3 #>     seqCount_invsimpson fragmentEstimate_sum fragmentEstimate_count #>     fragmentEstimate_shannon fragmentEstimate_simpson #>  1:                1.5158967                0.6644034 #>  2:                3.4957593                0.9358864 #>  3:                3.4547233                0.9325986 #>  4:                3.3077507                0.9214312 #>  5:                2.4694808                0.8728520 #>  6:                4.1255479                0.9773086 #>  7:                3.2043690                0.9288182 #>  8:                4.2520301                0.9826514 #>  9:                2.0916345                0.8525232 #> 10:                3.4978977                0.9656616 #> 11:                1.8788583                0.7963169 #> 12:                3.2110253                0.9515061 #> 13:                4.1785406                0.9823708 #> 14:                2.7062808                0.9234798 #> 15:                2.1595245                0.8085066 #> 16:                2.8040916                0.9232304 #> 17:                3.1435438                0.9474470 #> 18:                2.0115316                0.8337413 #> 19:                2.8796549                0.9388584 #> 20:                3.4951040                0.9657862 #> 21:                3.3264870                0.9583635 #> 22:                2.1757058                0.8709946 #> 23:                4.1321436                0.9821639 #> 24:                2.0794415                0.8750000 #> 25:                0.0000000                0.0000000 #> 26:                0.0000000                0.0000000 #> 27:                3.7466139                0.9724395 #> 28:                4.0347118                0.9794325 #> 29:                4.1017170                0.9801725 #> 30:                3.7422290                0.9739783 #> 31:                3.6532389                0.9690120 #> 32:                4.2743192                0.9837312 #> 33:                2.3602980                0.8907893 #> 34:                3.7796517                0.9736284 #> 35:                3.3921932                0.9600307 #> 36:                2.5886973                0.9080593 #> 37:                3.7994565                0.9747936 #> 38:                3.4030063                0.9589507 #> 39:                2.8516684                0.9347119 #> 40:                2.7383206                0.9217140 #> 41:                2.9976077                0.9391220 #> 42:                3.0478044                0.9449613 #> 43:                2.0881376                0.8668208 #> 44:                3.1241984                0.9513700 #> 45:                2.2105119                0.8833528 #> 46:                2.0462669                0.8345178 #> 47:                1.9118719                0.8417363 #> 48:                2.1289383                0.8759944 #> 49:                2.0395769                0.8360567 #> 50:                2.3693447                0.9027688 #> 51:                0.0000000                0.0000000 #> 52:                0.6931471                0.5000000 #> 53:                1.0986117                0.6666663 #>     fragmentEstimate_shannon fragmentEstimate_simpson #>     fragmentEstimate_invsimpson seqCount_describe_vars seqCount_describe_n #>  1:                    2.979768                      1                  15 #>  2:                   15.597315                      1                  72 #>  3:                   14.836491                      1                  76 #>  4:                   12.727698                      1                  67 #>  5:                    7.864852                      1                  26 #>  6:                   44.069549                      1                  82 #>  7:                   14.048533                      1                  41 #>  8:                   57.641549                      1                  90 #>  9:                    6.780730                      1                  11 #> 10:                   29.121899                      1                  43 #> 11:                    4.909587                      1                  10 #> 12:                   20.621135                      1                  31 #> 13:                   56.724054                      1                  77 #> 14:                   13.068445                      1                  19 #> 15:                    5.222113                      1                  13 #> 16:                   13.025989                      1                  22 #> 17:                   19.028416                      1                  29 #> 18:                    6.014722                      1                  10 #> 19:                   16.355473                      1                  20 #> 20:                   29.227978                      1                  39 #> 21:                   24.017379                      1                  32 #> 22:                    7.751614                      1                  10 #> 23:                   56.066071                      1                  78 #> 24:                    7.999999                      1                   8 #> 25:                    1.000000                      1                   1 #> 26:                    1.000000                      1                   1 #> 27:                   36.283780                      1                  48 #> 28:                   48.620400                      1                  65 #> 29:                   50.434894                      1                  74 #> 30:                   38.429519                      1                  46 #> 31:                   32.270520                      1                  48 #> 32:                   61.467277                      1                  87 #> 33:                    9.156610                      1                  12 #> 34:                   37.919638                      1                  52 #> 35:                   25.019190                      1                  35 #> 36:                   10.876572                      1                  18 #> 37:                   39.672460                      1                  52 #> 38:                   24.360939                      1                  36 #> 39:                   15.316731                      1                  20 #> 40:                   12.773677                      1                  19 #> 41:                   16.426308                      1                  24 #> 42:                   18.169039                      1                  25 #> 43:                    7.508679                      1                   9 #> 44:                   20.563431                      1                  26 #> 45:                    8.572855                      1                  10 #> 46:                    6.042945                      1                  14 #> 47:                    6.318567                      1                   8 #> 48:                    8.064152                      1                   9 #> 49:                    6.099669                      1                  12 #> 50:                   10.284764                      1                  11 #> 51:                    1.000000                      1                   1 #> 52:                    2.000000                      1                   2 #> 53:                    2.999996                      1                   3 #>     fragmentEstimate_invsimpson seqCount_describe_vars seqCount_describe_n #>     seqCount_describe_mean seqCount_describe_sd seqCount_describe_median #>  1:              23.800000            49.019238                      4.0 #>  2:            1803.708333          4012.246817                    903.0 #>  3:            1019.394737          2497.605611                    455.0 #>  4:            1203.134328          2822.931234                    420.0 #>  5:               5.653846             8.703757                      2.0 #>  6:             620.231707           901.262931                    442.0 #>  7:               2.707317             3.893866                      1.0 #>  8:             598.744444           738.974290                    411.0 #>  9:           11027.636364         11874.895623                  11559.0 #> 10:             388.906977           306.470446                    334.0 #> 11:               4.400000             3.806427                      3.0 #> 12:            2448.548387          3246.888632                   1489.0 #> 13:             749.142857           764.732250                    547.0 #> 14:            6340.631579          6360.953101                   6249.0 #> 15:               6.230769             4.399883                      4.0 #> 16:             137.681818           256.236012                      5.0 #> 17:            4009.793103          7867.007184                      2.0 #> 18:               3.300000             3.128720                      1.5 #> 19:            2872.150000          3012.494250                   2149.5 #> 20:            1063.794872          1278.207239                    275.0 #> 21:             115.531250           236.598746                      1.0 #> 22:              55.900000           120.586944                      1.0 #> 23:             540.025641           412.486599                    565.5 #> 24:               3.750000             2.434866                      4.0 #> 25:               1.000000                   NA                      1.0 #> 26:               1.000000                   NA                      1.0 #> 27:            1064.875000           900.485605                    860.5 #> 28:             115.630769            91.609151                    102.0 #> 29:              80.783784            94.287126                     47.5 #> 30:            1039.478261          1065.948169                    763.5 #> 31:             104.458333           103.931434                     73.5 #> 32:             105.172414            97.308453                     79.0 #> 33:             357.250000           281.183901                    368.5 #> 34:             100.730769            96.019221                     73.5 #> 35:            1297.600000          1089.406698                   1061.0 #> 36:              81.555556           123.814008                     16.5 #> 37:              63.076923            53.547797                     52.0 #> 38:              28.583333            58.707203                      1.0 #> 39:              92.550000            89.451236                     73.5 #> 40:             109.947368           105.136141                     92.0 #> 41:               2.875000             3.152811                      1.0 #> 42:              50.840000            65.987170                     24.0 #> 43:             143.444444           119.755074                    111.0 #> 44:             629.230769           597.873920                    425.0 #> 45:              56.500000            42.277522                     59.5 #> 46:             109.857143           134.051573                      4.0 #> 47:             244.750000           181.291990                    317.0 #> 48:              73.444444            45.937760                     58.0 #> 49:             115.666667           154.491738                     12.5 #> 50:              10.636364            30.968606                      1.0 #> 51:               1.000000                   NA                      1.0 #> 52:              20.000000            26.870058                     20.0 #> 53:               1.000000             0.000000                      1.0 #>     seqCount_describe_mean seqCount_describe_sd seqCount_describe_median #>     seqCount_describe_trimmed seqCount_describe_mad seqCount_describe_min #>  1:                 13.384615                4.4478                     1 #>  2:                948.258621              876.2166                     1 #>  3:                485.274194              582.6618                     1 #>  4:                556.254545              517.4274                     1 #>  5:                  3.772727                1.4826                     1 #>  6:                469.787879              544.1142                     1 #>  7:                  1.787879                0.0000                     1 #>  8:                456.513889              583.4031                     1 #>  9:               9547.666667            15758.5554                     1 #> 10:                368.628571              314.3112                     2 #> 11:                  3.875000                2.2239                     1 #> 12:               1813.800000             2204.6262                     1 #> 13:                639.126984              621.2094                     1 #> 14:               6057.764706             9263.2848                     1 #> 15:                  6.090909                4.4478                     1 #> 16:                 82.111111                5.9304                     1 #> 17:               2912.120000                1.4826                     1 #> 18:                  2.875000                0.7413                     1 #> 19:               2500.312500             3169.0575                     1 #> 20:                930.606061              406.2324                     1 #> 21:                 61.615385                0.0000                     1 #> 22:                 25.125000                0.0000                     1 #> 23:                520.734375              440.3322                     1 #> 24:                  3.750000                2.2239                     1 #> 25:                  1.000000                0.0000                     1 #> 26:                  1.000000                0.0000                     1 #> 27:                969.150000              873.2514                     3 #> 28:                102.905660               72.6474                     1 #> 29:                 66.366667               57.8214                     1 #> 30:                884.184211              960.7248                     2 #> 31:                 89.400000               72.6474                     1 #> 32:                 94.169014              100.8168                     1 #> 33:                344.200000              366.9435                    10 #> 34:                 87.047619               71.1648                     1 #> 35:               1187.586207             1068.9546                    38 #> 36:                 64.500000               22.9803                     1 #> 37:                 56.666667               53.3736                     1 #> 38:                 15.133333                0.0000                     1 #> 39:                 78.062500               74.8713                     1 #> 40:                102.941176              114.1602                     1 #> 41:                  2.200000                0.0000                     1 #> 42:                 40.190476               29.6520                     1 #> 43:                143.444444              100.8168                     1 #> 44:                575.000000              510.7557                     2 #> 45:                 56.250000               58.5627                     1 #> 46:                 99.916667                4.4478                     1 #> 47:                244.750000              174.2055                    12 #> 48:                 73.444444               50.4084                     1 #> 49:                101.200000               17.0499                     1 #> 50:                  1.333333                0.0000                     1 #> 51:                  1.000000                0.0000                     1 #> 52:                 20.000000               28.1694                     1 #> 53:                  1.000000                0.0000                     1 #>     seqCount_describe_trimmed seqCount_describe_mad seqCount_describe_min #>     seqCount_describe_max seqCount_describe_range seqCount_describe_skew #>  1:                   182                     181            2.301241908 #>  2:                 23219                   23218            4.241584903 #>  3:                 14748                   14747            4.426622167 #>  4:                 17030                   17029            4.090477930 #>  5:                    32                      31            2.045164619 #>  6:                  6831                    6830            4.440115101 #>  7:                    21                      20            3.479912926 #>  8:                  3420                    3419            1.802565558 #>  9:                 35374                   35373            0.542170566 #> 10:                   980                     978            0.445493428 #> 11:                    12                      11            0.919078343 #> 12:                 15387                   15386            2.203411709 #> 13:                  3099                    3098            1.189911727 #> 14:                 17489                   17488            0.258600919 #> 15:                    13                      12            0.214947146 #> 16:                   899                     898            1.695818613 #> 17:                 23099                   23098            1.433389491 #> 18:                     9                       8            0.729559680 #> 19:                  9255                    9254            0.665725699 #> 20:                  4081                    4080            0.764076544 #> 21:                   931                     930            1.904838107 #> 22:                   357                     356            1.610560306 #> 23:                  2776                    2775            1.867297249 #> 24:                     8                       7            0.305241830 #> 25:                     1                       0                     NA #> 26:                     1                       0                     NA #> 27:                  3447                    3444            0.872205813 #> 28:                   485                     484            1.803069328 #> 29:                   602                     601            2.602506887 #> 30:                  4633                    4631            1.365036835 #> 31:                   492                     491            1.598850712 #> 32:                   399                     398            0.920512611 #> 33:                   835                     825            0.130786772 #> 34:                   485                     484            1.638509198 #> 35:                  4600                    4562            0.970808861 #> 36:                   435                     434            1.452104290 #> 37:                   224                     223            0.984500650 #> 38:                   263                     262            2.380294965 #> 39:                   300                     299            1.081245294 #> 40:                   338                     337            0.715416659 #> 41:                    12                      11            1.721437804 #> 42:                   230                     229            1.460662654 #> 43:                   379                     378            0.609430398 #> 44:                  1847                    1845            0.814842416 #> 45:                   114                     113           -0.003001335 #> 46:                   338                     337            0.446900149 #> 47:                   446                     434           -0.275019641 #> 48:                   163                     162            0.381570108 #> 49:                   375                     374            0.656807751 #> 50:                   104                     103            2.465923327 #> 51:                     1                       0                     NA #> 52:                    39                      38            0.000000000 #> 53:                     1                       0                    NaN #>     seqCount_describe_max seqCount_describe_range seqCount_describe_skew #>     seqCount_describe_kurtosis seqCount_describe_se #>  1:                  4.4006968           12.6567129 #>  2:                 17.5610094          472.8478220 #>  3:                 19.2823139          286.4950121 #>  4:                 17.1580681          344.8759404 #>  5:                  3.0002933            1.7069472 #>  6:                 26.1076318           99.5278409 #>  7:                 12.2312876            0.6081198 #>  8:                  3.3451795           77.8947296 #>  9:                 -1.0023479         3580.4157460 #> 10:                 -1.0232860           46.7363048 #> 11:                 -0.7765928            1.2036980 #> 12:                  5.7210093          583.1584134 #> 13:                  0.6675981           87.1493280 #> 14:                 -1.6185786         1459.3027238 #> 15:                 -1.7809891            1.2203081 #> 16:                  1.6582823           54.6297014 #> 17:                  0.1905641         1460.8665594 #> 18:                 -1.3581940            0.9893881 #> 19:                 -0.9237911          673.6141925 #> 20:                 -0.9036271          204.6769654 #> 21:                  2.7235555           41.8251445 #> 22:                  1.0549935           38.1329400 #> 23:                  8.7391643           46.7049103 #> 24:                 -1.3723939            0.8608551 #> 25:                         NA                   NA #> 26:                         NA                   NA #> 27:                 -0.1202778          129.9739016 #> 28:                  4.1475510           11.3627167 #> 29:                 10.5808065           10.9606558 #> 30:                  1.6176863          157.1654832 #> 31:                  2.5227001           15.0012103 #> 32:                  0.2614462           10.4325612 #> 33:                 -1.5703281           81.1708006 #> 34:                  3.3180379           13.3154702 #> 35:                  0.4571943          184.1433411 #> 36:                  1.1279457           29.1832415 #> 37:                  0.3744349            7.4257433 #> 38:                  5.4638897            9.7845339 #> 39:                  0.2435027           20.0019045 #> 40:                 -0.6542499           24.1198850 #> 41:                  1.9755420            0.6435649 #> 42:                  0.8237687           13.1974341 #> 43:                 -0.9585728           39.9183580 #> 44:                 -0.7629889          117.2527226 #> 45:                 -1.6485903           13.3693264 #> 46:                 -1.7003497           35.8267898 #> 47:                 -1.9433976           64.0963978 #> 48:                 -0.6556674           15.3125866 #> 49:                 -1.5340806           44.5979231 #> 50:                  4.5174735            9.3373860 #> 51:                         NA                   NA #> 52:                 -2.7500000           19.0000000 #> 53:                        NaN            0.0000000 #>     seqCount_describe_kurtosis seqCount_describe_se #>     fragmentEstimate_describe_vars fragmentEstimate_describe_n #>  1:                              1                          15 #>  2:                              1                          72 #>  3:                              1                          76 #>  4:                              1                          67 #>  5:                              1                          26 #>  6:                              1                          82 #>  7:                              1                          41 #>  8:                              1                          90 #>  9:                              1                          11 #> 10:                              1                          43 #> 11:                              1                          10 #> 12:                              1                          31 #> 13:                              1                          77 #> 14:                              1                          19 #> 15:                              1                          13 #> 16:                              1                          22 #> 17:                              1                          29 #> 18:                              1                          10 #> 19:                              1                          20 #> 20:                              1                          39 #> 21:                              1                          32 #> 22:                              1                          10 #> 23:                              1                          78 #> 24:                              1                           8 #> 25:                              1                           1 #> 26:                              1                           1 #> 27:                              1                          48 #> 28:                              1                          65 #> 29:                              1                          74 #> 30:                              1                          46 #> 31:                              1                          48 #> 32:                              1                          87 #> 33:                              1                          12 #> 34:                              1                          52 #> 35:                              1                          35 #> 36:                              1                          18 #> 37:                              1                          52 #> 38:                              1                          36 #> 39:                              1                          20 #> 40:                              1                          19 #> 41:                              1                          24 #> 42:                              1                          25 #> 43:                              1                           9 #> 44:                              1                          26 #> 45:                              1                          10 #> 46:                              1                          14 #> 47:                              1                           8 #> 48:                              1                           9 #> 49:                              1                          12 #> 50:                              1                          11 #> 51:                              1                           1 #> 52:                              1                           2 #> 53:                              1                           3 #>     fragmentEstimate_describe_vars fragmentEstimate_describe_n #>     fragmentEstimate_describe_mean fragmentEstimate_describe_sd #>  1:                      13.404311                 2.786707e+01 #>  2:                       6.483398                 1.241552e+01 #>  3:                       5.864834                 1.198705e+01 #>  4:                       5.285962                 1.099775e+01 #>  5:                       5.166875                 8.001288e+00 #>  6:                       2.832332                 2.643828e+00 #>  7:                       2.119852                 2.972646e+00 #>  8:                       3.104891                 2.339368e+00 #>  9:                       4.949607                 4.094939e+00 #> 10:                      42.160734                 2.944916e+01 #> 11:                       3.433314                 3.685074e+00 #> 12:                       3.178753                 2.292427e+00 #> 13:                       2.882057                 1.734395e+00 #> 14:                       3.336338                 2.309314e+00 #> 15:                       1.545976                 1.963774e+00 #> 16:                       2.419593                 2.055568e+00 #> 17:                       2.288453                 1.685942e+00 #> 18:                       2.616259                 2.244818e+00 #> 19:                       3.314506                 1.605262e+00 #> 20:                       2.341663                 1.371696e+00 #> 21:                       1.440656                 8.438481e-01 #> 22:                       1.502921                 8.532066e-01 #> 23:                      45.482458                 2.863215e+01 #> 24:                       1.000935                 4.346800e-04 #> 25:                       1.000452                           NA #> 26:                       1.000310                           NA #> 27:                       3.597099                 2.065673e+00 #> 28:                       3.169408                 1.853904e+00 #> 29:                       2.951692                 2.031396e+00 #> 30:                       3.207212                 1.439228e+00 #> 31:                       2.720448                 1.919404e+00 #> 32:                       2.945247                 1.909232e+00 #> 33:                       3.348032                 1.948654e+00 #> 34:                       2.973593                 1.829670e+00 #> 35:                       4.745206                 3.040856e+00 #> 36:                       5.272562                 4.390682e+00 #> 37:                       2.586362                 1.455792e+00 #> 38:                       1.588614                 1.113647e+00 #> 39:                       2.307493                 1.309092e+00 #> 40:                       1.953356                 1.401134e+00 #> 41:                       1.548945                 1.074389e+00 #> 42:                       2.046584                 1.280763e+00 #> 43:                       2.899362                 1.370511e+00 #> 44:                       2.120707                 1.112019e+00 #> 45:                       2.708155                 1.164725e+00 #> 46:                       6.765663                 8.056651e+00 #> 47:                      13.302145                 7.335810e+00 #> 48:                       2.451289                 8.857151e-01 #> 49:                       6.314876                 6.487004e+00 #> 50:                       1.092832                 3.022575e-01 #> 51:                       1.001736                           NA #> 52:                       1.001093                 3.673758e-04 #> 53:                       1.001588                 1.338704e-03 #>     fragmentEstimate_describe_mean fragmentEstimate_describe_sd #>     fragmentEstimate_describe_median fragmentEstimate_describe_trimmed #>  1:                         3.012512                          7.470644 #>  2:                         3.012057                          3.811294 #>  3:                         3.009877                          3.142067 #>  4:                         3.008092                          2.737114 #>  5:                         1.003097                          3.513520 #>  6:                         2.505033                          2.324454 #>  7:                         1.002015                          1.398289 #>  8:                         3.007780                          2.718686 #>  9:                         4.015796                          4.581450 #> 10:                        39.036122                         40.562169 #> 11:                         2.004800                          2.772710 #> 12:                         2.005189                          2.811093 #> 13:                         3.007980                          2.659478 #> 14:                         4.008330                          3.194304 #> 15:                         1.001018                          1.001403 #> 16:                         1.001317                          2.006402 #> 17:                         2.004555                          2.048540 #> 18:                         1.503943                          2.262289 #> 19:                         3.010762                          3.262810 #> 20:                         2.005080                          2.249665 #> 21:                         1.001360                          1.310164 #> 22:                         1.001153                          1.377210 #> 23:                        42.000196                         44.901123 #> 24:                         1.001025                          1.000935 #> 25:                         1.000452                          1.000452 #> 26:                         1.000310                          1.000310 #> 27:                         3.010014                          3.335589 #> 28:                         3.009442                          2.896971 #> 29:                         2.505801                          2.611686 #> 30:                         3.009387                          3.113838 #> 31:                         2.005851                          2.433007 #> 32:                         3.008802                          2.671993 #> 33:                         3.007868                          3.007499 #> 34:                         3.007741                          2.723031 #> 35:                         3.011246                          4.200535 #> 36:                         4.032253                          4.801168 #> 37:                         2.506984                          2.436239 #> 38:                         1.001915                          1.369925 #> 39:                         2.004245                          2.131404 #> 40:                         1.001656                          1.769694 #> 41:                         1.002144                          1.354908 #> 42:                         2.004350                          1.862934 #> 43:                         3.012131                          2.899362 #> 44:                         2.003264                          2.050231 #> 45:                         3.010009                          2.758162 #> 46:                         2.009365                          5.674497 #> 47:                        15.161805                         13.302145 #> 48:                         3.006917                          2.451289 #> 49:                         4.079891                          5.237292 #> 50:                         1.001625                          1.001750 #> 51:                         1.001736                          1.001736 #> 52:                         1.001093                          1.001093 #> 53:                         1.001111                          1.001588 #>     fragmentEstimate_describe_median fragmentEstimate_describe_trimmed #>     fragmentEstimate_describe_mad fragmentEstimate_describe_min #>  1:                  2.981298e+00                      1.000572 #>  2:                  2.239587e+00                      1.000302 #>  3:                  2.976246e+00                      1.000270 #>  4:                  1.499789e+00                      1.000251 #>  5:                  3.649738e-03                      1.000438 #>  6:                  7.510140e-01                      1.000188 #>  7:                  1.265862e-03                      1.000363 #>  8:                  2.974732e+00                      1.000237 #>  9:                  4.468958e+00                      1.000326 #> 10:                  3.926041e+01                      2.005726 #> 11:                  1.488527e+00                      1.000361 #> 12:                  1.488346e+00                      1.001245 #> 13:                  1.492398e+00                      1.000395 #> 14:                  4.457778e+00                      1.000797 #> 15:                  8.451267e-04                      1.000448 #> 16:                  1.496358e-03                      1.000189 #> 17:                  1.487282e+00                      1.000170 #> 18:                  7.462303e-01                      1.000481 #> 19:                  1.490373e+00                      1.000878 #> 20:                  1.488259e+00                      1.001013 #> 21:                  2.548275e-04                      1.000364 #> 22:                  3.453061e-04                      1.000484 #> 23:                  3.203641e+01                      1.000095 #> 24:                  5.625647e-04                      1.000271 #> 25:                  0.000000e+00                      1.000452 #> 26:                  0.000000e+00                      1.000310 #> 27:                  1.204654e-02                      1.000891 #> 28:                  1.487735e+00                      1.000853 #> 29:                  2.229894e+00                      1.000748 #> 30:                  9.548069e-03                      1.000647 #> 31:                  1.489289e+00                      1.000233 #> 32:                  1.498433e+00                      1.000451 #> 33:                  3.832020e-03                      1.001297 #> 34:                  1.489516e+00                      1.000130 #> 35:                  7.114164e-03                      1.704548 #> 36:                  4.291451e+00                      1.000211 #> 37:                  2.231648e+00                      1.000260 #> 38:                  9.476613e-04                      1.000654 #> 39:                  1.487938e+00                      1.000463 #> 40:                  1.351624e-03                      1.000429 #> 41:                  1.444463e-03                      1.000319 #> 42:                  1.487306e+00                      1.000216 #> 43:                  1.492358e+00                      1.000102 #> 44:                  1.486179e+00                      1.000286 #> 45:                  1.488739e+00                      1.000356 #> 46:                  1.495089e+00                      1.000901 #> 47:                  3.344285e+00                      2.004955 #> 48:                  1.028171e-02                      1.000461 #> 49:                  4.564592e+00                      1.000782 #> 50:                  5.953127e-04                      1.001224 #> 51:                  0.000000e+00                      1.001736 #> 52:                  3.851408e-04                      1.000833 #> 53:                  8.263112e-04                      1.000553 #>     fragmentEstimate_describe_mad fragmentEstimate_describe_min #>     fragmentEstimate_describe_max fragmentEstimate_describe_range #>  1:                    102.945718                    1.019451e+02 #>  2:                     68.737467                    6.773717e+01 #>  3:                     65.157600                    6.415733e+01 #>  4:                     60.847813                    5.984756e+01 #>  5:                     28.628174                    2.762774e+01 #>  6:                     18.345126                    1.734494e+01 #>  7:                     15.439133                    1.443877e+01 #>  8:                     13.173494                    1.217326e+01 #>  9:                     12.212294                    1.121197e+01 #> 10:                    102.491428                    1.004857e+02 #> 11:                     11.151093                    1.015073e+01 #> 12:                      9.105808                    8.104562e+00 #> 13:                      9.105112                    8.104718e+00 #> 14:                      8.086461                    7.085664e+00 #> 15:                      8.081811                    7.081363e+00 #> 16:                      8.065660                    7.065471e+00 #> 17:                      7.078347                    6.078178e+00 #> 18:                      7.063803                    6.063322e+00 #> 19:                      6.042502                    5.041624e+00 #> 20:                      5.034588                    4.033575e+00 #> 21:                      3.013021                    2.012657e+00 #> 22:                      3.011042                    2.010558e+00 #> 23:                    100.161988                    9.916189e+01 #> 24:                      1.001434                    1.163127e-03 #> 25:                      1.000452                    0.000000e+00 #> 26:                      1.000310                    0.000000e+00 #> 27:                     14.083418                    1.308253e+01 #> 28:                     11.158685                    1.015783e+01 #> 29:                     10.158522                    9.157774e+00 #> 30:                     10.115103                    9.114456e+00 #> 31:                      9.119998                    8.119765e+00 #> 32:                      9.101815                    8.101365e+00 #> 33:                      9.100094                    8.098797e+00 #> 34:                      9.084035                    8.083906e+00 #> 35:                     12.600475                    1.089593e+01 #> 36:                     17.087221                    1.608701e+01 #> 37:                      7.049681                    6.049421e+00 #> 38:                      6.046701                    5.046047e+00 #> 39:                      6.029366                    5.028903e+00 #> 40:                      6.028539                    5.028110e+00 #> 41:                      5.054662                    4.054343e+00 #> 42:                      5.022865                    4.022649e+00 #> 43:                      5.015339                    4.015236e+00 #> 44:                      4.016451                    3.016165e+00 #> 45:                      4.015899                    3.015543e+00 #> 46:                     25.624419                    2.462352e+01 #> 47:                     23.579866                    2.157491e+01 #> 48:                      3.014156                    2.013695e+00 #> 49:                     22.404813                    2.140403e+01 #> 50:                      2.004172                    1.002948e+00 #> 51:                      1.001736                    0.000000e+00 #> 52:                      1.001352                    5.195478e-04 #> 53:                      1.003100                    2.546580e-03 #>     fragmentEstimate_describe_max fragmentEstimate_describe_range #>     fragmentEstimate_describe_skew fragmentEstimate_describe_kurtosis #>  1:                   2.316325e+00                          4.3379571 #>  2:                   4.200284e+00                         17.0134959 #>  3:                   4.164724e+00                         16.6881143 #>  4:                   4.174675e+00                         17.0548285 #>  5:                   1.953187e+00                          2.5068058 #>  6:                   3.564088e+00                         15.7237949 #>  7:                   3.465180e+00                         11.6912367 #>  8:                   1.472620e+00                          2.7446859 #>  9:                   6.186531e-01                         -1.2808229 #> 10:                   3.158471e-01                         -1.1336562 #> 11:                   1.157340e+00                         -0.4195354 #> 12:                   1.196926e+00                          0.5337682 #> 13:                   1.209707e+00                          1.7311584 #> 14:                   3.529692e-01                         -1.1813391 #> 15:                   2.816170e+00                          6.4437855 #> 16:                   1.401263e+00                          1.0168970 #> 17:                   1.327987e+00                          0.8065693 #> 18:                   9.507548e-01                         -0.7724153 #> 19:                   2.800850e-01                         -0.9652756 #> 20:                   3.757505e-01                         -1.3774092 #> 21:                   1.297396e+00                         -0.3239794 #> 22:                   9.780605e-01                         -0.9618423 #> 23:                   1.839668e-01                         -1.0980930 #> 24:                  -2.284244e-01                         -1.6953538 #> 25:                             NA                                 NA #> 26:                             NA                                 NA #> 27:                   2.904116e+00                         11.6588565 #> 28:                   2.210633e+00                          6.5758780 #> 29:                   1.537537e+00                          2.3768799 #> 30:                   2.228271e+00                          9.3082986 #> 31:                   1.320622e+00                          1.7397660 #> 32:                   1.171759e+00                          1.2772169 #> 33:                   1.970219e+00                          3.5225017 #> 34:                   1.188657e+00                          1.4823160 #> 35:                   1.543861e+00                          0.9973010 #> 36:                   1.138082e+00                          0.6679724 #> 37:                   7.519567e-01                          0.2093692 #> 38:                   2.211101e+00                          5.1257353 #> 39:                   9.645585e-01                          0.7892475 #> 40:                   1.373334e+00                          1.2086107 #> 41:                   1.779517e+00                          2.3609818 #> 42:                   9.728921e-01                         -0.1698843 #> 43:                  -9.170249e-02                         -1.4314296 #> 44:                   2.941909e-01                         -1.4700960 #> 45:                  -2.468475e-01                         -1.5748596 #> 46:                   1.065480e+00                         -0.2502699 #> 47:                  -4.122360e-01                         -1.3069937 #> 48:                  -8.236812e-01                         -1.2891641 #> 49:                   1.107043e+00                          0.3805447 #> 50:                   2.466904e+00                          4.5206378 #> 51:                             NA                                 NA #> 52:                  -4.533028e-13                         -2.7500000 #> 53:                   3.112158e-01                         -2.3333333 #>     fragmentEstimate_describe_skew fragmentEstimate_describe_kurtosis #>     fragmentEstimate_describe_se nIS #>  1:                 7.1952466279  15 #>  2:                 1.4631824759  72 #>  3:                 1.3750095083  76 #>  4:                 1.3435884856  67 #>  5:                 1.5691817431  26 #>  6:                 0.2919620099  82 #>  7:                 0.4642492918  41 #>  8:                 0.2465910846  90 #>  9:                 1.2346706770  11 #> 10:                 4.4909549219  43 #> 11:                 1.1653227353  10 #> 12:                 0.4117321131  31 #> 13:                 0.1976526781  77 #> 14:                 0.5297928780  19 #> 15:                 0.5446529515  13 #> 16:                 0.4382486380  22 #> 17:                 0.3130716475  29 #> 18:                 0.7098736619  10 #> 19:                 0.3589475809  20 #> 20:                 0.2196470704  39 #> 21:                 0.1491726757  32 #> 22:                 0.2698076248  10 #> 23:                 3.2419530711  78 #> 24:                 0.0001536826   8 #> 25:                           NA   1 #> 26:                           NA   1 #> 27:                 0.2981542158  48 #> 28:                 0.2299485144  65 #> 29:                 0.2361450154  74 #> 30:                 0.2122025482  46 #> 31:                 0.2770420812  48 #> 32:                 0.2046911329  87 #> 33:                 0.5625279552  12 #> 34:                 0.2537296307  52 #> 35:                 0.5139984901  35 #> 36:                 1.0348937038  18 #> 37:                 0.2018820919  52 #> 38:                 0.1856077872  36 #> 39:                 0.2927218410  20 #> 40:                 0.3214422872  19 #> 41:                 0.2193087193  24 #> 42:                 0.2561526253  25 #> 43:                 0.4568368515   9 #> 44:                 0.2180848137  26 #> 45:                 0.3683184518  10 #> 46:                 2.1532305518  14 #> 47:                 2.5936005456   8 #> 48:                 0.2952383720   9 #> 49:                 1.8726366147  12 #> 50:                 0.0911340761  11 #> 51:                           NA   1 #> 52:                 0.0002597739   2 #> 53:                 0.0007729012   3 #>     fragmentEstimate_describe_se nIS #>"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/separate_quant_matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Separate a multiple-quantification matrix into single quantification\nmatrices. — separate_quant_matrices","title":"Separate a multiple-quantification matrix into single quantification\nmatrices. — separate_quant_matrices","text":"function separates single multi-quantification integration matrix, obtained via comparison_matrix, single quantification matrices named list tibbles.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/separate_quant_matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Separate a multiple-quantification matrix into single quantification\nmatrices. — separate_quant_matrices","text":"","code":"separate_quant_matrices(   x,   fragmentEstimate = \"fragmentEstimate\",   seqCount = \"seqCount\",   barcodeCount = \"barcodeCount\",   cellCount = \"cellCount\",   ShsCount = \"ShsCount\",   key = c(mandatory_IS_vars(), annotation_IS_vars(), \"CompleteAmplificationID\") )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/separate_quant_matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Separate a multiple-quantification matrix into single quantification\nmatrices. — separate_quant_matrices","text":"x Single integration matrix multiple quantification value columns, obtained via comparison_matrix. fragmentEstimate Name fragment estimate values column input seqCount Name sequence count values column input barcodeCount Name barcode count values column input cellCount Name cell count values column input ShsCount Name shs count values column input key Key columns perform joining operation","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/separate_quant_matrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Separate a multiple-quantification matrix into single quantification\nmatrices. — separate_quant_matrices","text":"named list data frames, names quantification types","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/separate_quant_matrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Separate a multiple-quantification matrix into single quantification\nmatrices. — separate_quant_matrices","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") separated <- separate_quant_matrices(     integration_matrices )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_mandatory_IS_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Define custom dynamic vars. — set_mandatory_IS_vars","title":"Define custom dynamic vars. — set_mandatory_IS_vars","text":"set function allows users specify custom look-tables dynamic variables. details, refer dedicated vignette vignette(\"workflow_start\", package=\"ISAnalytics\"). set_mandatory_IS_vars() sets look-table mandatory vars. set_annotation_IS_vars() sets look-table genomic annotation vars. set_af_columns_def() sets look-table association file columns vars set_iss_stats_specs() sets look-table VISPA2 pool statistics vars","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_mandatory_IS_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define custom dynamic vars. — set_mandatory_IS_vars","text":"","code":"set_mandatory_IS_vars(specs)  set_annotation_IS_vars(specs)  set_af_columns_def(specs)  set_iss_stats_specs(specs)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_mandatory_IS_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define custom dynamic vars. — set_mandatory_IS_vars","text":"specs Either named vector data frame specific format. See details.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_mandatory_IS_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define custom dynamic vars. — set_mandatory_IS_vars","text":"NULL","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_mandatory_IS_vars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define custom dynamic vars. — set_mandatory_IS_vars","text":"user can supply specifications form named vector data frame.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_mandatory_IS_vars.html","id":"named-vector","dir":"Reference","previous_headings":"","what":"Named vector","title":"Define custom dynamic vars. — set_mandatory_IS_vars","text":"using named vector, names names columns, values type associated column form string. vector gets automatically converted data frame right format (default values columns transform flag NULL required respectively). Use method however discouraged: data frame inputs preferred since offer control.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_mandatory_IS_vars.html","id":"look-up-table-structure","dir":"Reference","previous_headings":"","what":"Look-up table structure","title":"Define custom dynamic vars. — set_mandatory_IS_vars","text":"look-table dynamic vars always follow structure: names contains name column character types contains type column. Type expressed string one allowed types char character (strings) int integers logi logical values (TRUE / FALSE) numeric numeric values factor factors date generic date format - note functions need read parse files try guess format parsing may fail One accepted date/datetime formats lubridate, can use ISAnalytics::date_formats() view accepted formats transform: purrr-style lambda applied immediately importing. useful operate simple transformations like removing unwanted characters rounding certain precision. Please note lambdas need functions accept vector input operate transformation, aka output vector length input. complicated applications may require value columns, appropriate functions manually applied post-import. flag: now, set either required optional - functions internally check required tags presence missing inputs fail, signaling failure user tag: specific tag expressed string","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_mandatory_IS_vars.html","id":"column-types-","dir":"Reference","previous_headings":"","what":"Column types:","title":"Define custom dynamic vars. — set_mandatory_IS_vars","text":"Type expressed string one allowed types char character (strings) int integers logi logical values (TRUE / FALSE) numeric numeric values factor factors date generic date format - note functions need read parse files try guess format parsing may fail One accepted date/datetime formats lubridate, can use ISAnalytics::date_formats() view accepted formats","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_mandatory_IS_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define custom dynamic vars. — set_mandatory_IS_vars","text":"","code":"tmp_mand_vars <- tibble::tribble(     ~names, ~types, ~transform, ~flag, ~tag,     \"chrom\", \"char\", ~ stringr::str_replace_all(.x, \"chr\", \"\"), \"required\",     \"chromosome\",     \"position\", \"int\", NULL, \"required\", \"locus\",     \"strand\", \"char\", NULL, \"required\", \"is_strand\",     \"gap\", \"int\", NULL, \"required\", NA_character_,     \"junction\", \"int\", NULL, \"required\", NA_character_ ) set_mandatory_IS_vars(tmp_mand_vars) #> Mandatory IS vars successfully changed print(mandatory_IS_vars(TRUE)) #> # A tibble: 5 × 5 #>   names    types transform flag     tag        #>   <chr>    <chr> <list>    <chr>    <chr>      #> 1 chrom    char  <formula> required chromosome #> 2 position int   <NULL>    required locus      #> 3 strand   char  <NULL>    required is_strand  #> 4 gap      int   <NULL>    required NA         #> 5 junction int   <NULL>    required NA         reset_mandatory_IS_vars() #> Mandatory IS vars reset to default  tmp_annot_vars <- tibble::tribble(     ~names, ~types, ~transform, ~flag, ~tag,     \"gene\", \"char\", NULL, \"required\",     \"gene_symbol\",     \"gene_strand\", \"char\", NULL, \"required\", \"gene_strand\" ) print(annotation_IS_vars(TRUE)) #> # A tibble: 2 × 5 #>   names      types transform flag     tag         #>   <chr>      <chr> <list>    <chr>    <chr>       #> 1 GeneName   char  <NULL>    required gene_symbol #> 2 GeneStrand char  <NULL>    required gene_strand reset_annotation_IS_vars() #> Annotation IS vars reset to default  temp_af_cols <- tibble::tribble(     ~names, ~types, ~transform, ~flag, ~tag,     \"project\", \"char\", NULL, \"required\",     \"project_id\",     \"pcr_id\", \"char\", NULL, \"required\", \"pcr_repl_id\",     \"subject\", \"char\", NULL, \"required\", \"subject\" ) set_af_columns_def(temp_af_cols) #> Warning: Warning: important tags missing #> ℹ Some tags are required for proper execution of some functions. If these tags are not provided, execution of dependent functions might fail. Review your inputs carefully. #> ℹ Missing tags: pool_id, fusion_id, tag_seq, vector_id, tissue, tp_days, cell_marker, tag_id, pcr_replicate, vispa_concatenate, proj_folder #> ℹ To see where these are involved type `inspect_tags(c('pool_id','fusion_id','tag_seq','vector_id','tissue','tp_days','cell_marker','tag_id','pcr_replicate','vispa_concatenate','proj_folder'))` #> Association file columns specs successfully changed print(association_file_columns(TRUE)) #> # A tibble: 3 × 5 #>   names   types transform flag     tag         #>   <chr>   <chr> <list>    <chr>    <chr>       #> 1 project char  <NULL>    required project_id  #> 2 pcr_id  char  <NULL>    required pcr_repl_id #> 3 subject char  <NULL>    required subject     reset_af_columns_def() #> Association file columns specs reset to default  tmp_iss_vars <- tibble::tribble(     ~names, ~types, ~transform, ~flag, ~tag,     \"pool\", \"char\", NULL, \"required\",     \"vispa_concatenate\",     \"tag\", \"char\", NULL, \"required\", \"tag_seq\",     \"barcode\", \"int\", NULL, \"required\", NA_character_ ) set_iss_stats_specs(tmp_iss_vars) #> ISS stats specs successfully changed iss_stats_specs(TRUE) #> # A tibble: 3 × 5 #>   names   types transform flag     tag               #>   <chr>   <chr> <list>    <chr>    <chr>             #> 1 pool    char  <NULL>    required vispa_concatenate #> 2 tag     char  <NULL>    required tag_seq           #> 3 barcode int   <NULL>    required NA                reset_iss_stats_specs() #> ISS stats specs reset to default"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_matrix_file_suffixes.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the look-up table for matrix file suffixes. — set_matrix_file_suffixes","title":"Sets the look-up table for matrix file suffixes. — set_matrix_file_suffixes","text":"function automatically produces sets look-table matrix file suffixes based user input.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_matrix_file_suffixes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the look-up table for matrix file suffixes. — set_matrix_file_suffixes","text":"","code":"set_matrix_file_suffixes(   quantification_suffix = list(seqCount = \"seqCount\", fragmentEstimate =     \"fragmentEstimate\", barcodeCount = \"barcodeCount\", cellCount = \"cellCount\", ShsCount     = \"ShsCount\"),   annotation_suffix = list(annotated = \".no0.annotated\", not_annotated = \"\"),   file_ext = \"tsv.gz\",   glue_file_spec = \"{quantification_suffix}_matrix{annotation_suffix}.{file_ext}\" )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_matrix_file_suffixes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the look-up table for matrix file suffixes. — set_matrix_file_suffixes","text":"quantification_suffix named list - names must quantification types quantification_types(), values must single strings, containing associated suffix. Please note quantification types must specified function produce error. annotation_suffix named list - names must annotated not_annotated, values must single strings, containing associated suffix. Please note names must present list function produce error. file_ext file extension (e.g. tsv, tsv.gz) glue_file_spec string specifying pattern used form entire suffix, per glue::glue() requirements. string contain reference quantification_suffix, annotation_suffix file_ext.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_matrix_file_suffixes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the look-up table for matrix file suffixes. — set_matrix_file_suffixes","text":"NULL","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/set_matrix_file_suffixes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the look-up table for matrix file suffixes. — set_matrix_file_suffixes","text":"","code":"set_matrix_file_suffixes(     quantification_suffix = list(         seqCount = \"sc\",         fragmentEstimate = \"fe\",         barcodeCount = \"barcodeCount\",         cellCount = \"cellCount\",         ShsCount = \"ShsCount\"     ),     annotation_suffix = list(annotated = \"annot\", not_annotated = \"\") ) #> Matrix suffixes specs successfully changed matrix_file_suffixes() #> # A tibble: 10 × 3 #>    quantification   matrix_type   file_suffix                     #>    <chr>            <chr>         <chr>                           #>  1 seqCount         annotated     sc_matrixannot.tsv.gz           #>  2 seqCount         not_annotated sc_matrix.tsv.gz                #>  3 fragmentEstimate annotated     fe_matrixannot.tsv.gz           #>  4 fragmentEstimate not_annotated fe_matrix.tsv.gz                #>  5 barcodeCount     annotated     barcodeCount_matrixannot.tsv.gz #>  6 barcodeCount     not_annotated barcodeCount_matrix.tsv.gz      #>  7 cellCount        annotated     cellCount_matrixannot.tsv.gz    #>  8 cellCount        not_annotated cellCount_matrix.tsv.gz         #>  9 ShsCount         annotated     ShsCount_matrixannot.tsv.gz     #> 10 ShsCount         not_annotated ShsCount_matrix.tsv.gz          reset_matrix_file_suffixes() #> Matrix suffixes specs reset to default"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sharing_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot IS sharing heatmaps. — sharing_heatmap","title":"Plot IS sharing heatmaps. — sharing_heatmap","text":"Displays sharing calculated via is_sharing heatmaps.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sharing_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot IS sharing heatmaps. — sharing_heatmap","text":"","code":"sharing_heatmap(   sharing_df,   show_on_x = \"g1\",   show_on_y = \"g2\",   absolute_sharing_col = \"shared\",   title_annot = NULL,   plot_relative_sharing = TRUE,   rel_sharing_col = c(\"on_g1\", \"on_union\"),   show_perc_symbol_rel = TRUE,   interactive = FALSE )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sharing_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot IS sharing heatmaps. — sharing_heatmap","text":"sharing_df data frame containing sharing data show_on_x Name column plot x axis show_on_y Name column plot y axis absolute_sharing_col Name column contains absolute values sharing title_annot Additional text display title plot_relative_sharing Logical. Compute heatmaps also relative sharing? rel_sharing_col Names columns consider relative sharing. function going plot one heatmap per column argument. show_perc_symbol_rel Logical. relevant plot_relative_sharing set TRUE, percentage symbol displayed relative heatmaps? interactive Logical. Requires package plotly required functionality. Returns heatmaps interactive HTML widgets.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sharing_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot IS sharing heatmaps. — sharing_heatmap","text":"list plots widgets","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sharing_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot IS sharing heatmaps. — sharing_heatmap","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) sharing <- is_sharing(aggreg,     minimal = FALSE,     include_self_comp = TRUE ) sharing_heatmaps <- sharing_heatmap(sharing_df = sharing) sharing_heatmaps$absolute  sharing_heatmaps$on_g1  sharing_heatmaps$on_union"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sharing_venn.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce tables to plot sharing venn or euler diagrams. — sharing_venn","title":"Produce tables to plot sharing venn or euler diagrams. — sharing_venn","text":"function processes sharing data frame obtained via is_sharing() option table_for_venn = TRUE obtain list objects can plotted venn euler diagrams.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sharing_venn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce tables to plot sharing venn or euler diagrams. — sharing_venn","text":"","code":"sharing_venn(sharing_df, row_range = NULL, euler = TRUE)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sharing_venn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce tables to plot sharing venn or euler diagrams. — sharing_venn","text":"sharing_df sharing data frame row_range Either NULL numeric vector row indexes (e.g. c(1, 4, 5) produce tables rows 1, 4 5) euler TRUE produce tables euler diagrams, otherwise produce tables venn diagrams","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sharing_venn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce tables to plot sharing venn or euler diagrams. — sharing_venn","text":"list data frames","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sharing_venn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produce tables to plot sharing venn or euler diagrams. — sharing_venn","text":"functions requires package eulerr. row input data frame representable venn/euler diagram. function allows specify range row indexes obtain list plottable objects , leave NULL process rows. actually plot data sufficient call function plot() specify optional customization arguments. See eulerr docs detail .","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/sharing_venn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce tables to plot sharing venn or euler diagrams. — sharing_venn","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) sharing <- is_sharing(aggreg, n_comp = 3, table_for_venn = TRUE) venn_tbls <- sharing_venn(sharing, row_range = 1:3, euler = FALSE) venn_tbls #> [[1]] #> 3 set Venn diagram  #>  #>                       h     k    a    b  phi #> PT001_MNC_BM_0030 -0.42 -0.36 1.05 1.05 3.76 #> PT001_MNC_BM_0060  0.42 -0.36 1.05 1.05 3.76 #> PT001_MNC_BM_0090  0.00  0.36 1.05 1.05 3.76 #>  #> [[2]] #> 3 set Venn diagram  #>  #>                       h     k    a    b  phi #> PT001_MNC_BM_0030 -0.42 -0.36 1.05 1.05 3.76 #> PT001_MNC_BM_0060  0.42 -0.36 1.05 1.05 3.76 #> PT001_MNC_BM_0180  0.00  0.36 1.05 1.05 3.76 #>  #> [[3]] #> 3 set Venn diagram  #>  #>                       h     k    a    b  phi #> PT001_MNC_BM_0030 -0.42 -0.36 1.05 1.05 3.76 #> PT001_MNC_BM_0060  0.42 -0.36 1.05 1.05 3.76 #> PT001_MNC_BM_0360  0.00  0.36 1.05 1.05 3.76 #>  plot(venn_tbls[[1]])"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/threshold_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter data frames with custom predicates — threshold_filter","title":"Filter data frames with custom predicates — threshold_filter","text":"function deprecated likely going dropped next release cycle. Filter single data frame list data frames custom predicates assembled function parameters.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/threshold_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter data frames with custom predicates — threshold_filter","text":"","code":"threshold_filter(x, threshold, cols_to_compare = \"Value\", comparators = \">\")"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/threshold_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter data frames with custom predicates — threshold_filter","text":"x data frame list data frames threshold numeric/integer vector named list numeric/integer vectors cols_to_compare character vector named list character vectors comparators character vector named list character vectors. Must one allowed values c(\"<\", \">\", \"==\", \"!=\", \">=\", \"<=\")","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/threshold_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter data frames with custom predicates — threshold_filter","text":"data frame list data frames","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/threshold_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter data frames with custom predicates — threshold_filter","text":"","code":"if (FALSE) { example_df <- tibble::tibble(     a = c(20, 30, 40),     b = c(40, 50, 60),     c = c(\"a\", \"b\", \"c\"),     d = c(3L, 4L, 5L) ) example_list <- list(     first = example_df,     second = example_df,     third = example_df )  filtered <- threshold_filter(example_list,     threshold = list(         first = c(20, 60),         third = c(25)     ),     cols_to_compare = list(         first = c(\"a\", \"b\"),         third = c(\"a\")     ),     comparators = list(         first = c(\">\", \"<\"),         third = c(\">=\")     ) ) filtered }"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_abund_tableGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary top abundant tableGrobs for plots. — top_abund_tableGrob","title":"Summary top abundant tableGrobs for plots. — top_abund_tableGrob","text":"Produce summary tableGrobs R graphics. functionality suggested package gridExtra required. visualize resulting object:","code":"gridExtra::grid.arrange(tableGrob)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_abund_tableGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary top abundant tableGrobs for plots. — top_abund_tableGrob","text":"","code":"top_abund_tableGrob(   df,   id_cols = mandatory_IS_vars(),   quant_col = \"fragmentEstimate_sum_PercAbundance\",   by = \"TimePoint\",   alluvial_plot = NULL,   top_n = 10,   tbl_cols = \"GeneName\",   include_id_cols = FALSE,   digits = 2,   perc_symbol = TRUE,   transform_by = NULL )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_abund_tableGrob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary top abundant tableGrobs for plots. — top_abund_tableGrob","text":"df data frame id_cols Character vector id column names. plot alluvial, columns must alluvia argument integration_alluvial_plot. quant_col Column name holding quantification value. plot alluvial, columns must plot_y argument integration_alluvial_plot. column name subdivide tables . function produce one table distinct value . plot alluvial, columns must plot_x argument integration_alluvial_plot. alluvial_plot Either NULL alluvial plot color mapping values y. top_n Integer. many rows table contain ? tbl_cols Table columns show final output besides quant_col. include_id_cols Logical. Include id_cols output? digits Integer. Digits show quantification column perc_symbol Logical. Show percentage symbol quantification column? transform_by Either function purrr-style lambda. function applied column separating columns. NULL function applied. Useful modify column order final table.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_abund_tableGrob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary top abundant tableGrobs for plots. — top_abund_tableGrob","text":"tableGrob object","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_abund_tableGrob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary top abundant tableGrobs for plots. — top_abund_tableGrob","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) abund <- compute_abundance(x = aggreg) grob <- top_abund_tableGrob(abund) gridExtra::grid.arrange(grob)   # with transform grob <- top_abund_tableGrob(abund, transform_by = ~ as.numeric(.x))"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_cis_overtime_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmaps for the top N common insertion sites over time. — top_cis_overtime_heatmap","title":"Heatmaps for the top N common insertion sites over time. — top_cis_overtime_heatmap","text":"function computes visualization results function CIS_grubbs_overtime() form heatmaps top N selected genes time.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_cis_overtime_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmaps for the top N common insertion sites over time. — top_cis_overtime_heatmap","text":"","code":"top_cis_overtime_heatmap(   x,   n_genes = 20,   timepoint_col = \"TimePoint\",   group_col = \"group\",   onco_db_file = \"proto_oncogenes\",   tumor_suppressors_db_file = \"tumor_suppressors\",   species = \"human\",   known_onco = known_clinical_oncogenes(),   suspicious_genes = clinical_relevant_suspicious_genes(),   significance_threshold = 0.05,   plot_values = c(\"minus_log_p\", \"p\"),   p_value_correction = c(\"fdr\", \"bonferroni\"),   prune_tp_treshold = 20,   gene_selection_param = c(\"trimmed\", \"n\", \"mean\", \"sd\", \"median\", \"mad\", \"min\", \"max\"),   fill_0_selection = TRUE,   fill_NA_in_heatmap = FALSE,   heatmap_color_palette = \"default\",   title_generator = NULL,   save_as_files = FALSE,   files_format = c(\"pdf\", \"png\", \"tiff\", \"bmp\", \"jpg\"),   folder_path = NULL,   ... )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_cis_overtime_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmaps for the top N common insertion sites over time. — top_cis_overtime_heatmap","text":"x Output function CIS_grubbs_overtime(), either single data frame form nested lists n_genes Number top genes consider timepoint_col name time point column x group_col name group column x onco_db_file Uniprot file proto-oncogenes (see details). different default, supplied path file. tumor_suppressors_db_file Uniprot file tumor-suppressor genes. different default, supplied path file. species One \"human\", \"mouse\" \"\" known_onco Data frame known oncogenes. See details. suspicious_genes Data frame clinical relevant suspicious genes. See details. significance_threshold significance threshold plot_values kind values plotted? Can either \"p\" p-value \"minus_log_p\" scaled p-value Grubbs test p_value_correction One among \"bonferroni\" \"fdr\" prune_tp_treshold Minimum number genes retain time point. See details. gene_selection_param descriptive statistic measure decide genes plot, possible choices \"trimmed\", \"n\", \"mean\", \"sd\", \"median\",\"mad\", \"min\", \"max\". See details. fill_0_selection Fill NA values 0s computing statistics gene? (TRUE/FALSE) fill_NA_in_heatmap Fill NA values 0 plotting heatmap? (TRUE/FALSE) heatmap_color_palette Colors values heatmaps, either \"default\" function producing color palette, obtainable via grDevices::colorRampPalette. title_generator Either NULL function. See details. save_as_files heatmaps saved files disk? (TRUE/FALSE) files_format extension files produced, supported formats \"pdf\", \"png\", \"tiff\", \"bmp\", \"jpg\". Relevant files_format = TRUE folder_path Path folder files saved ... params pass pheatmap::pheatmap","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_cis_overtime_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmaps for the top N common insertion sites over time. — top_cis_overtime_heatmap","text":"Either list graphical objects list paths plots saved","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_cis_overtime_heatmap.html","id":"oncogene-and-tumor-suppressor-genes-files","dir":"Reference","previous_headings":"","what":"Oncogene and tumor suppressor genes files","title":"Heatmaps for the top N common insertion sites over time. — top_cis_overtime_heatmap","text":"files included package user convenience simply UniProt files gene annotations human mouse. details files generated use help ?tumor_suppressors, ?proto_oncogenes","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_cis_overtime_heatmap.html","id":"known-oncogenes","dir":"Reference","previous_headings":"","what":"Known oncogenes","title":"Heatmaps for the top N common insertion sites over time. — top_cis_overtime_heatmap","text":"default values included package can accessed :   user wants change parameter input data frame must preserve column structure. goes suspicious_genes parameter (DOIReference column optional):","code":"known_clinical_oncogenes() clinical_relevant_suspicious_genes()"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_cis_overtime_heatmap.html","id":"top-n-gene-selection","dir":"Reference","previous_headings":"","what":"Top N gene selection","title":"Heatmaps for the top N common insertion sites over time. — top_cis_overtime_heatmap","text":"Since genes present different time point slices likely different, decision process select final top N genes represent heatmap follows logic: time point slice arranged either ascending order (want plot p-value) descending order (want plot scaled p-value) top n genes selected series statistics computed union set genes time points (min, max, mean, ...) decision taken considering ordered gene_selection_param (order depends values scaled ), first N genes selected plotting.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_cis_overtime_heatmap.html","id":"filling-na-values-prior-calculations","dir":"Reference","previous_headings":"","what":"Filling NA values prior calculations","title":"Heatmaps for the top N common insertion sites over time. — top_cis_overtime_heatmap","text":"possible fill NA values (aka missing combinations GENE/TP) 0s prior computing descriptive statistics gene selection based. Please keep mind impact final result, since computing metrics mean, NA values usually removed, decreasing overall number values considered - hold NA values substituted 0s.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_cis_overtime_heatmap.html","id":"the-statistics","dir":"Reference","previous_headings":"","what":"The statistics","title":"Heatmaps for the top N common insertion sites over time. — top_cis_overtime_heatmap","text":"Statistics computed gene time points group. detail, n: counts number instances (rows) genes appears, aka counts time points gene present. NOTE: fill_0_selection option set TRUE value equal genes! statistics per argument gene_selection_param map corresponding R functions exception trimmed simple call mean function argument trimmed = 0.1.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_cis_overtime_heatmap.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Heatmaps for the top N common insertion sites over time. — top_cis_overtime_heatmap","text":"possible customise appearence plot different parameters. fill_NA_in_heatmap tells function whether missing combinations GENE/TP plotted NA filled value (1 p-value, 0 scaled p-value) title generator function can provided dynamically create title plots: function can accept two positional arguments group identifier number selected genes respectively. one none arguments interest, can absorbed .... heatmap_color_palette can used specify function colors sampled (refers colors values ) change colors associated annotations instead, use argument annotation_colors pheatmap::pheatmap() - must set list format:","code":"list(   KnownGeneClass = c(\"OncoGene\" = color_spec,                      \"Other\" = color_spec,                      \"TumSuppressor\" = color_spec),   ClinicalRelevance = c(\"TRUE\" = color_spec,                         \"FALSE\" = color_spec),   CriticalForInsMut = c(\"TRUE\" = color_spec,                         \"FALSE\" = color_spec) )"},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_cis_overtime_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmaps for the top N common insertion sites over time. — top_cis_overtime_heatmap","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") data(\"association_file\", package = \"ISAnalytics\") aggreg <- aggregate_values_by_key(     x = integration_matrices,     association_file = association_file,     value_cols = c(\"seqCount\", \"fragmentEstimate\") ) cis_overtime <- CIS_grubbs_overtime(aggreg) #> Warning: Warning: missing genes in refgenes table #> ℹ A total of 5 genes were found in the input data but not in the refgene table. This may be caused by a mismatch in the annotation phase of the matrix. Here is a summary:  #> # A tibble: 5 × 3 #>   GeneName  GeneStrand chr   #>   <chr>     <chr>      <chr> #> 1 PLEKHG4B  -          14    #> 2 CRELD2    -          15    #> 3 UBE2D2    +          16    #> 4 LINC01133 +          19    #> 5 HTR4      +          6     #> ℹ NOTE: missing genes will be removed from the final output! Review results carefully #> ℹ A total of 25 IS will be removed because of missing genes ( 2.33 % of total IS in input) hmaps <- top_cis_overtime_heatmap(cis_overtime$cis,     fill_NA_in_heatmap = TRUE ) #> Loading annotated genes -  species selected:  #> • Homo sapiens (Human) #> Loading annotated genes -  done    # To re-plot: # grid::grid.newpage() # grid::grid.draw(hmaps$PT001$gtable)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_integrations.html","id":null,"dir":"Reference","previous_headings":"","what":"Sorts and keeps the top n integration sites based on the values\nin a given column. — top_integrations","title":"Sorts and keeps the top n integration sites based on the values\nin a given column. — top_integrations","text":"input data frame sorted highest values columns specified top n rows returned output. user can choose keep additional columns output passing vector column names passing 2 \"shortcuts\": keep = \"everything\" keeps columns original data frame keep = \"nothing\" keeps mandatory columns (mandatory_IS_vars()) plus columns columns parameter.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_integrations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sorts and keeps the top n integration sites based on the values\nin a given column. — top_integrations","text":"","code":"top_integrations(   x,   n = 20,   columns = \"fragmentEstimate_sum_RelAbundance\",   keep = \"everything\",   key = NULL )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_integrations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sorts and keeps the top n integration sites based on the values\nin a given column. — top_integrations","text":"x integration matrix (data frame containing mandatory_IS_vars()) n many integrations sliced (total group)? Must numeric integer greater 0 columns Columns use sorting. column supplied primary ordering done first column, secondary ordering columns keep Names columns keep besides mandatory_IS_vars() columns key Either NULL character vector column names group . NULL input grouped top fraction extracted group.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_integrations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sorts and keeps the top n integration sites based on the values\nin a given column. — top_integrations","text":"Either data frame n rows data frames n*(number groups) rows.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_integrations.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Sorts and keeps the top n integration sites based on the values\nin a given column. — top_integrations","text":"function explicitly check presence tags: columns declared mandatory_IS_vars()","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_integrations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sorts and keeps the top n integration sites based on the values\nin a given column. — top_integrations","text":"","code":"smpl <- tibble::tibble(     chr = c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"),     integration_locus = c(14536, 14544, 14512, 14236, 14522, 14566),     strand = c(\"+\", \"+\", \"-\", \"+\", \"-\", \"+\"),     CompleteAmplificationID = c(\"ID1\", \"ID2\", \"ID1\", \"ID1\", \"ID3\", \"ID2\"),     Value = c(3, 10, 40, 2, 15, 150),     Value2 = c(456, 87, 87, 9, 64, 96),     Value3 = c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\") ) top <- top_integrations(smpl,     n = 3,     columns = c(\"Value\", \"Value2\"),     keep = \"nothing\" ) top_key <- top_integrations(smpl,     n = 3,     columns = \"Value\",     keep = \"Value2\",     key = \"CompleteAmplificationID\" )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_targeted_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Top n targeted genes based on number of IS. — top_targeted_genes","title":"Top n targeted genes based on number of IS. — top_targeted_genes","text":"Produces summary number integration events per gene, orders table decreasing order slices first n rows - either data frame group.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_targeted_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Top n targeted genes based on number of IS. — top_targeted_genes","text":"","code":"top_targeted_genes(   x,   n = 20,   key = c(\"SubjectID\", \"CellMarker\", \"Tissue\", \"TimePoint\"),   consider_chr = TRUE,   consider_gene_strand = TRUE,   as_df = TRUE )"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_targeted_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Top n targeted genes based on number of IS. — top_targeted_genes","text":"x integration matrix - must annotated n Number rows slice key slice performed group, character vector column names identify groups. NULL considers whole input data frame. consider_chr Logical, chromosome taken account? See details. consider_gene_strand Logical, gene strand taken account? See details. as_df computation performed group, TRUE returns groups merged single data frame column containing group id. FALSE returns named list.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_targeted_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Top n targeted genes based on number of IS. — top_targeted_genes","text":"data frame list data frames","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_targeted_genes.html","id":"gene-grouping","dir":"Reference","previous_headings":"","what":"Gene grouping","title":"Top n targeted genes based on number of IS. — top_targeted_genes","text":"producing summary gene, different options can chosen. argument consider_chr accounts fact genes (gene symbol) may span one chromosome: set TRUE counts separated genes span 2 chromosomes - words 2 different rows output table. contrary, argument set FALSE, counts produced single row. NOTE: function counts DISTINCT integration events, logically corresponds union sets. aware fact counts per group counts different arguments might different: example counts performed considering chromosome one gene symbol 2 different counts, sum 2 likely equal count obtained performing calculations without considering chromosome. reasoning can applied argument consider_gene_strand, takes account strand gene.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_targeted_genes.html","id":"required-tags","dir":"Reference","previous_headings":"","what":"Required tags","title":"Top n targeted genes based on number of IS. — top_targeted_genes","text":"function explicitly check presence tags: chromosome locus gene_symbol gene_strand Note tags \"gene_strand\" \"chromosome\" explicitly required consider_chr = TRUE /consider_gene_strand = TRUE.","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/top_targeted_genes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Top n targeted genes based on number of IS. — top_targeted_genes","text":"","code":"data(\"integration_matrices\", package = \"ISAnalytics\") top_targ <- top_targeted_genes(     integration_matrices,     key = NULL ) top_targ #> # A tibble: 20 × 4 #>    GeneName GeneStrand chr    n_IS #>    <chr>    <chr>      <chr> <int> #>  1 KMT5B    -          11        5 #>  2 RERE     -          1         4 #>  3 ACOX1    -          17        3 #>  4 ADD1     +          4         3 #>  5 ANKFY1   -          17        3 #>  6 R3HDM2   -          12        3 #>  7 SPATS2   +          12        3 #>  8 ATF1     +          12        2 #>  9 ATF7     -          12        2 #> 10 AXIN1    -          16        2 #> 11 C6orf10  -          6         2 #> 12 CD163    -          12        2 #> 13 CDH2     -          18        2 #> 14 CLECL1   -          12        2 #> 15 CNOT6L   -          4         2 #> 16 DNMT1    -          19        2 #> 17 FCHSD2   -          11        2 #> 18 GRB2     -          17        2 #> 19 HBE1     -          11        2 #> 20 HNRNPM   +          19        2"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/transform_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply transformations to an arbitrary number of columns. — transform_columns","title":"Apply transformations to an arbitrary number of columns. — transform_columns","text":"function takes named list purr-style lambdas names names columns data frame must transformed. NOTE: columns overridden, appended.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/transform_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply transformations to an arbitrary number of columns. — transform_columns","text":"","code":"transform_columns(df, transf_list)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/transform_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply transformations to an arbitrary number of columns. — transform_columns","text":"df data frame transformations operated transf_list named list purrr-style lambdas, names column names function applied .","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/transform_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply transformations to an arbitrary number of columns. — transform_columns","text":"data frame transformed columns","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/transform_columns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply transformations to an arbitrary number of columns. — transform_columns","text":"Lambdas provided input must transformations, aka functions take input vector return vector length input. input transformation list contains column names present input data frame, simply ignored.","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/transform_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply transformations to an arbitrary number of columns. — transform_columns","text":"","code":"df <- tibble::tribble(     ~A, ~B, ~C, ~D,     1, 2, \"a\", \"aa\",     3, 4, \"b\", \"bb\",     5, 6, \"c\", \"cc\" ) lambdas <- list(A = ~ .x + 1, B = ~ .x + 2, C = ~ stringr::str_to_upper(.x)) transform_columns(df, lambdas) #> # A tibble: 3 × 4 #>       A     B C     D     #>   <dbl> <dbl> <chr> <chr> #> 1     2     4 A     aa    #> 2     4     6 B     bb    #> 3     6     8 C     cc"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/unzip_file_system.html","id":null,"dir":"Reference","previous_headings":"","what":"A utility function to unzip and use example file systems included in the\npackage — unzip_file_system","title":"A utility function to unzip and use example file systems included in the\npackage — unzip_file_system","text":"ISAnalytics 1.5.4 function defunct, since package include example tabular files anymore. Use function generate_default_folder_structure() generate default folder structure running tests play package import functions. need test import functions, can simply load package included data via data(\"integration_matrices\") data(\"association_file\").","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/unzip_file_system.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A utility function to unzip and use example file systems included in the\npackage — unzip_file_system","text":"","code":"unzip_file_system(zipfile, name)"},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/unzip_file_system.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A utility function to unzip and use example file systems included in the\npackage — unzip_file_system","text":"zipfile zipped file decompress name name folder zipped archive (\"fs\" \"fserr\")","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/reference/unzip_file_system.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A utility function to unzip and use example file systems included in the\npackage — unzip_file_system","text":"path reference","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-11-1","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.11.1 (2023-05-09)","text":"Fixed broken tests new updates underlying packages","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"enhances-and-refactoring-1-9-3","dir":"Changelog","previous_headings":"","what":"ENHANCES AND REFACTORING","title":"ISAnalytics 1.9.3 (2023-04-04)","text":"package longer depends magrittr functionality associated data.table now ’s completely optional used internally package available Several packages moved Imports Suggests - functions notify additional packages requested specific functionality known deprecated superseded functions packages removed substituted","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-and-general-updates-1-9-3","dir":"Changelog","previous_headings":"","what":"FIXES AND GENERAL UPDATES","title":"ISAnalytics 1.9.3 (2023-04-04)","text":"Added new tag “barcode_mux” available_tags() function HSC_population_size_estimate() now better supports computation estimates different groups cell types tissues time. tabular output now contains additional column “Timepoints_included” specifies many time points estimate contains Function is_sharing() can now handle better limit cases option parallelised provided appropriate packages available (better performance)","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"deprecations--breaking-changes-1-9-3","dir":"Changelog","previous_headings":"","what":"DEPRECATIONS & BREAKING CHANGES","title":"ISAnalytics 1.9.3 (2023-04-04)","text":"Functions import_parallel_Vispa2Matrices_auto() import_parallel_Vispa2Matrices_interactive() officially defunct exported anymore starting next release cycle argument mode import_parallel_Vispa2Matrices() longer accepts INTERACTIVE valid option interactive mode considered now defunct, since usage limiting limited argument association_file import_parallel_Vispa2Matrices() longer accepts string representing path. Association file import delegated solely dedicated function now . function threshold_filter() deprecated, since use rather complicated instead using standard filtering dplyr similar tools","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"minor-changes-1-9-3","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"ISAnalytics 1.9.3 (2023-04-04)","text":"default_af_transform() now pads time points based maximum number characters + 1 column","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-and-general-updates-1-9-2","dir":"Changelog","previous_headings":"","what":"FIXES AND GENERAL UPDATES","title":"ISAnalytics 1.9.2 (2023-01-26)","text":"Fixed issue ifelse function top_abund_tableGrob() - now function new argument transform_by useful controlling ordering columns Updated CITATION file Package DT moved (likely temporarily) Imports - linked issue https://github.com/calabrialab/ISAnalytics/issues/2 Fixed typos minor issues","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"isanalytics-191-2022-12-01","dir":"Changelog","previous_headings":"","what":"ISAnalytics 1.9.1 (2022-12-01)","title":"ISAnalytics 1.9.1 (2022-12-01)","text":"Fixed tidyselect warnings (internal use .data$ selection context) Added bonferroni correction gene_frequency_fisher","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"isanalytics-177-2022-10-26","dir":"Changelog","previous_headings":"","what":"ISAnalytics 1.7.7 (2022-10-26)","title":"ISAnalytics 1.7.7 (2022-10-26)","text":"Added new section workflow vignette + sample files","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"isanalytics-176-2022-10-25","dir":"Changelog","previous_headings":"","what":"ISAnalytics 1.7.6 (2022-10-25)","title":"ISAnalytics 1.7.6 (2022-10-25)","text":"Fixed minor bugs typos","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"isanalytics-175-2022-10-05","dir":"Changelog","previous_headings":"","what":"ISAnalytics 1.7.5 (2022-10-05)","title":"ISAnalytics 1.7.5 (2022-10-05)","text":"Fixed build issues","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"visible-user-changes-1-7-4","dir":"Changelog","previous_headings":"","what":"VISIBLE USER CHANGES","title":"ISAnalytics 1.7.4 (2022-10-04)","text":"Progress bars long processing functions now implemented via package progressr, added wrapper function fast enabling progress bars, enable_progress_bars() Introduced logging issues HSC_population_size_estimate() - signals eventual problems computing estimates ","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"bug-fixes-and-minor-changes-1-7-4","dir":"Changelog","previous_headings":"","what":"BUG FIXES AND MINOR CHANGES","title":"ISAnalytics 1.7.4 (2022-10-04)","text":"Fixed minor bugs typos","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"bug-fixes-and-minor-changes-1-7-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES AND MINOR CHANGES","title":"ISAnalytics 1.7.3 (2022-06-17)","text":"functions check options now default value option set CIS_grubbs function now faster (removed dependency psych::describe)","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-1-7-3","dir":"Changelog","previous_headings":"","what":"NEW","title":"ISAnalytics 1.7.3 (2022-06-17)","text":"New functions CIS_grubbs_overtime() associated plotting function top_cis_overtime_heatmap() compute CIS_grubbs test time","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"bug-fixes-and-minor-changes-1-7-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES AND MINOR CHANGES","title":"ISAnalytics 1.7.2 (2022-05-23)","text":"Fixed minor issues import_association_file() - function minor issues importing *.xlsx files missing optional columns threw errors Fixed bug as_sparse_matrix() - function failed trying process aggregated matrix","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-1-7-2","dir":"Changelog","previous_headings":"","what":"NEW","title":"ISAnalytics 1.7.2 (2022-05-23)","text":"Added 2 new utility functions export_ISA_settings() import_ISA_settings() allow faster workflow setup","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"bug-fixes-and-minor-changes-1-7-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES AND MINOR CHANGES","title":"ISAnalytics 1.7.1 (2022-05-04)","text":"Fixed minor issue compute_near_integrations() - function errored report_path argument set NULL Fixed dplyr warning integration_alluvial_plot() internals Fixed issue report VISPA2 stats - report failed due minor error rmd fragment Internals remove_collisions() use dplyr internally joining grouping operations - needed performance issues data.table fisher_scatterplot() 2 new arguments allow disabling highlighting genes even p-value threshold","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"major-changes-1-5-4","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"ISAnalytics 1.5.4 (2022-04-20)","text":"ISAnalytics now new “dynamic vars system” allow flexibility user inputs, view dedicated vignette vignette(\"workflow_start\", package=\"ISAnalytics\") package functions reviewed work properly system","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-features-1-5-4","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"ISAnalytics 1.5.4 (2022-04-20)","text":"gene_frequency_fisher() new function analysis family allows computation Fisher’s exact test p-values gene frequency - fisher_scatterplot() associated plotting function top_targeted_genes() new function analysis family produces top n targeted genes based number NGSdataExplorer() newly implemented Shiny interface allows exploration plotting data zipped examples removed package contain size. compensate, new function generate_default_folder_structure() generates standard folder structure package-included data -demand transform_columns() new utility function, also used internally exported functions, allows arbitrary transformations data frame columns","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"minor-changes-1-5-4","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"ISAnalytics 1.5.4 (2022-04-20)","text":"remove_collisions() now dedicated parameter specify independent samples identified compute_near_integration_sites() now parameter called additional_agg_lambda() allow aggregation additional columns CIS_grubbs() now signals missing genes refgenes table eventually returns df outlier_filter() now able take multiple tests input combine given logic. now also produces HTML report. Several functions now use data.table hood Color strata containing threshold can now set integration_alluvial_plot()","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"bug-fixes-1-5-4","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"ISAnalytics 1.5.4 (2022-04-20)","text":"Fixed minor bug import_Vispa2_stats() - function failed passing report_path = NULL Fixed minor issue circos_genomic_density() trying use pdf device","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"deprecated-functions-1-5-4","dir":"Changelog","previous_headings":"","what":"DEPRECATED FUNCTIONS","title":"ISAnalytics 1.5.4 (2022-04-20)","text":"unzip_file_system() made defunct favor generate_default_folder_structure() cumulative_count_union() deprecated functionality moved cumulative_is()","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"minor-changes-1-5-3","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"ISAnalytics 1.5.3 (2022-01-13)","text":"Added arguments fragmentEstimate_column fragmentEstimate_threshold HSC_population_size_estimate(). Slightly revised filtering logic. Updated package logo website","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-minor-1-5-2","dir":"Changelog","previous_headings":"","what":"NEW (MINOR)","title":"ISAnalytics 1.5.2 (2021-12-14)","text":"Added function check annotation problems matrices","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"minor-changes-1-5-2","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"ISAnalytics 1.5.2 (2021-12-14)","text":"Added argument max_workers function remove_collisions() Updated default functions aggregate_metadata() Added annotation issues section import matrices report","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-5-2","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.5.2 (2021-12-14)","text":"Fixed minor issue internals file system alignment checks Fixed minor issue internal call import_Vispa2_stats() import_association_file() Added safe computation sharing remove_collisions(): process fails function doesn’t stop","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-5-1","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.5.1 (2021-10-28)","text":"Attempt fix issues parallel computation Windows plotting functions","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-3-9","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.3.9 (2021-10-25)","text":"Fixed issues function make use BiocParallel sometimes failed Windows platform","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-1-3-7","dir":"Changelog","previous_headings":"","what":"NEW","title":"ISAnalytics 1.3.7 (2021-10-20)","text":"Added new feature iss_source()","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-3-7","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.3.7 (2021-10-20)","text":"Fixed minor issues data files refGenes_mm9 function compute_near_integrations()","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-1-3-6","dir":"Changelog","previous_headings":"","what":"NEW","title":"ISAnalytics 1.3.6 (2021-10-05)","text":"Added new feature purity_filter()","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-3-6","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.3.6 (2021-10-05)","text":"Fixed small issue printing information reports","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"major-changes-1-3-5","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"ISAnalytics 1.3.5 (2021-09-21)","text":"Reworked is_sharing() function, detailed usage vignette vignette(\"sharing_analyses\", package = \"ISAnalytics\")","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-1-3-5","dir":"Changelog","previous_headings":"","what":"NEW","title":"ISAnalytics 1.3.5 (2021-09-21)","text":"New function cumulative_is() New function plotting sharing venn/euler diagrams sharing_venn()","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixesminor-updates-1-3-4","dir":"Changelog","previous_headings":"","what":"FIXES/MINOR UPDATES","title":"ISAnalytics 1.3.4 (2021-08 -03)","text":"Fixed issue tests lead broken build Slightly modified included data set better examples","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"major-changes-1-3-3","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"ISAnalytics 1.3.3 (2021-07-30)","text":"Completely reworked interactive HTML report system, details take look new vignette vignette(\"report_system\", package = \"ISAnalytics\") Old ISAnalytics.widgets option replaced ISAnalytics.reports remove_collisions(), removed arguments seq_count_col, max_rows_reports save_widget_path, added arguments quant_cols report_path (see documentation details)","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"minor-changes-1-3-3","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"ISAnalytics 1.3.3 (2021-07-30)","text":"import_single_Vispa2Matrix() now allows keeping additional non-standard columns compute_near_integrations() now faster bigger data sets Changed default values arguments columns key compute_abundance() compute_near_integrations() now produces re-calibration map *.tsv format CIS_grubbs() now supports calculations group specified argument sample_statistics() now option include calculation distinct integration sites group (mandatory vars present)","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-functionality-1-3-3","dir":"Changelog","previous_headings":"","what":"NEW FUNCTIONALITY","title":"ISAnalytics 1.3.3 (2021-07-30)","text":"Added new plotting function circos_genomic_density()","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-3-3","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.3.3 (2021-07-30)","text":"Fixed minor issue NA values alluvial plots","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"deprecations-1-3-3","dir":"Changelog","previous_headings":"","what":"DEPRECATIONS","title":"ISAnalytics 1.3.3 (2021-07-30)","text":"import_parallel_Vispa2Matrices_interactive() import_parallel_Vispa2Matrices_auto() officially deprecated favor import_parallel_Vispa2Matrices()","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"other-1-3-3","dir":"Changelog","previous_headings":"","what":"OTHER","title":"ISAnalytics 1.3.3 (2021-07-30)","text":"package now complete functional example data set executable examples Reworked documentation","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-3-2","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.3.2 (2021-06-28)","text":"Corrected issues man pages","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-functionality-1-3-1","dir":"Changelog","previous_headings":"","what":"NEW FUNCTIONALITY","title":"ISAnalytics 1.3.1 (2021-06-24)","text":"is_sharing computes sharing groups sharing_heatmap allows visualization sharing data heatmaps integration_alluvial_plot allows visualization integration sites distribution groups time. top_abund_tableGrob can used combination previous function obtain summary top abundant integrations R graphic (tableGrob) object can combined plots.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"minor-updates-1-3-1","dir":"Changelog","previous_headings":"","what":"MINOR UPDATES","title":"ISAnalytics 1.3.1 (2021-06-24)","text":"Added default stats functions default_stats Added optional automatic conversion time points months years importing association file Minor fixes generate_Vispa2_launch_AF","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-functionality-1-1-11","dir":"Changelog","previous_headings":"","what":"NEW FUNCTIONALITY","title":"ISAnalytics 1.1.11 (2021-05-11)","text":"HSC_population_size_estimate HSC_population_plot allow estimates hematopoietic stem cell population size Importing Vispa2 stats per pool now dedicated function, import_Vispa2_stats outlier_filter outliers_by_pool_fragments offer mean filter poorly represented samples based custom outliers tests","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"visible-user-changes-1-1-11","dir":"Changelog","previous_headings":"","what":"VISIBLE USER CHANGES","title":"ISAnalytics 1.1.11 (2021-05-11)","text":"argument import_stats aggregate_metadata officially deprecated favor import_Vispa2_stats aggregate_metadata now lot flexible operations can performed columns via new argument aggregating_functions import_association_file allows directly import Vispa2 stats converts time points months years already present File system alignment import_association_file now produces 3 separate columns paths separate_quant_matrices comparison_matrix now require mandatory columns quantifications - allows separation joining also aggregated matrices","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-1-11","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.1.11 (2021-05-11)","text":"Fixed minor issue CIS_volcano_plot caused duplication labels highlighted genes provided input","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-1-10","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.1.10 (2021-04-08)","text":"Fixed issue compute_near_integrations: provided recalibration map export path folder now function works correctly produces automatically generated file name Fixed issue aggregate_metadata: now paths folder contains Vispa2 stats looked correctly. Also, VISPA2 stats columns aggregated found input data frame independently parameter import_stats.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"improvements-1-1-10","dir":"Changelog","previous_headings":"","what":"IMPROVEMENTS","title":"ISAnalytics 1.1.10 (2021-04-08)","text":"compute_abundance can now take input aggregated matrices additional parameters offer flexibility user. Major updates improvements also documentation reproducible examples. Major improvements function import_single_Vispa2Matrix: import now preferentially carried using data.table::fread greatly speeding process - possible readr::read_delim used instead Major improvements function import_association_file: greatly improved parsing precision (column dedicated type), import report now signals parsing problems location signals also problems parsing dates. Report also includes potential problems column names signals missing data important columns. Added also possibility give various file formats input including *.xls(x) formats. Function top_integrations can now take additional parameters compute top n genes specified group Removed faceting parameters CIS_volcano_plot due poor precision (easier add faceting manually) added parameters return data frame generated plot additional result. Also, now possible specify vector gene names highlight even ’re annotation threshold.","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"minor-1-1-10","dir":"Changelog","previous_headings":"","what":"MINOR","title":"ISAnalytics 1.1.10 (2021-04-08)","text":"ISAnalytics website improved graphic theme additional button right leads devel (release) version website Updated vignettes","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"for-devs-only-1-1-10","dir":"Changelog","previous_headings":"","what":"FOR DEVS ONLY","title":"ISAnalytics 1.1.10 (2021-04-08)","text":"Complete rework test suite compliant testthat v.3","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-1-9","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.1.9 (2021-02-17)","text":"Fixed minor issues internal functions absolute file paths & corrected typos","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-1-8","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.1.8 (2020-02-15)","text":"Fixed minor issues internal functions optimize file system alignment","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-1-7","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.1.7 (2020-02-10)","text":"Fixed minor issues import_association_file checking parameters","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"upgrades-1-1-6","dir":"Changelog","previous_headings":"","what":"UPGRADES","title":"ISAnalytics 1.1.6 (2020-02-06)","text":"now possible save html reports file import_parallel_Vispa2Matrices_auto import_parallel_Vispa2Matrices_interactive, remove_collisions compute_near_integrations","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-1-6","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.1.6 (2020-02-06)","text":"Fixed sample_statistics: now functions data frame output produce nested tables. Flat tables ready saved file can nested. Simplified association file check logic remove_collisions: now function blocks af doesn’t contain needed columns","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"upgrades-1-1-5","dir":"Changelog","previous_headings":"","what":"UPGRADES","title":"ISAnalytics 1.1.5 (2020-02-03)","text":"Upgraded import_association_file function: now file alignment mandatory anymore possible save html report file Updated vignettes documentation","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"upgrades-1-1-4","dir":"Changelog","previous_headings":"","what":"UPGRADES","title":"ISAnalytics 1.1.4 (2020-11-16)","text":"Greatly improved reports collision removal function General improvements widget reports","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-1-3","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.1.3 (2020-11-10)","text":"fixes printing reports widgets available Added progress bar collision processing remove_collisions Updated vignettes","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-1-1-3","dir":"Changelog","previous_headings":"","what":"NEW","title":"ISAnalytics 1.1.3 (2020-11-10)","text":"Added vignette “Using ISAnalytics without RStudio support”","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-1-2","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.1.2 (2020-11-05)","text":"Fixed missing restarts non-blocking widgets","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"fixes-1-1-1","dir":"Changelog","previous_headings":"","what":"FIXES","title":"ISAnalytics 1.1.1 (2020-11-04)","text":"Functions make use widgets interrupt execution anymore errors thrown producing printing widgets Optimized widget printing importing functions widgets can’t printed verbose option active, reports now displayed console instead (needed usage environments access browser) minor fixes (typos) Bug fixes: fixed bugs importing recalibration functions Minor fix import_association_file file function: added multiple strings translated NA","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"important-notes-1-1-1","dir":"Changelog","previous_headings":"","what":"IMPORTANT NOTES","title":"ISAnalytics 1.1.1 (2020-11-04)","text":"Vignette building might fail due fact package “knitcitations” temporarily unavailable CRAN ISAnalytics finally release bioconductor!","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"isanalytics-09914-2020-10-21","dir":"Changelog","previous_headings":"","what":"ISAnalytics 0.99.14 (2020-10-21)","title":"ISAnalytics 0.99.14 (2020-10-21)","text":"Minor fixes tests","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-features-0-99-13","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"ISAnalytics 0.99.13 (2020-10-19)","text":"Added analysis functions CIS_grubbs cumulative_count_union Added plotting functions CIS_volcano_plot","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-features-0-99-12","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"ISAnalytics 0.99.12 (2020-10-04)","text":"Added analysis function sample_statistics","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"significant-user-visible-changes-0-99-12","dir":"Changelog","previous_headings":"","what":"SIGNIFICANT USER-VISIBLE CHANGES","title":"ISAnalytics 0.99.12 (2020-10-04)","text":"aggregate_values_by_key simplified interface supports multi-quantification matrices","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"minor-changes-0-99-12","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"ISAnalytics 0.99.12 (2020-10-04)","text":"Updated vignettes import_parallel_Vispa2Matrices_interactive import_parallel_Vispa2Matrices_auto now option return multi-quantification matrix directly import instead list","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-features-0-99-11","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"ISAnalytics 0.99.11 (2020-09-21)","text":"Added analysis functions threshold_filter, top_integrations Added support multi-quantification matrices compute_abundance","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"minor-fixes-0-99-11","dir":"Changelog","previous_headings":"","what":"MINOR FIXES","title":"ISAnalytics 0.99.11 (2020-09-21)","text":"Fixed bug comparison_matrix ignored custom column names Fixed issues documentation pages","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"isanalytics-09910-2020-09-14","dir":"Changelog","previous_headings":"","what":"ISAnalytics 0.99.10 (2020-09-14)","title":"ISAnalytics 0.99.10 (2020-09-14)","text":"ISanalytics officially bioconductor!","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-features-0-99-10","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"ISAnalytics 0.99.10 (2020-09-14)","text":"Added analysis functions comparison_matrix separate_quant_matrices Added utility function as_sparse_matrix Added package logo","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"significant-user-visible-changes-0-99-10","dir":"Changelog","previous_headings":"","what":"SIGNIFICANT USER-VISIBLE CHANGES","title":"ISAnalytics 0.99.10 (2020-09-14)","text":"Changed algorithm compute_near_integrations Added support multi-quantification matrices remove_collisions Added usage lifecycle badges documentation: users can now see feature experimental/maturing/stable etc","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"minor-fixes-0-99-10","dir":"Changelog","previous_headings":"","what":"MINOR FIXES","title":"ISAnalytics 0.99.10 (2020-09-14)","text":"Added fix import_single_Vispa2Matrix remove non significant 0 values","code":""},{"path":[]},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"new-features-0-99-9","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"ISAnalytics 0.99.9 (2020-09-01)","text":"Added functionality: aggregate functions Added vignette aggregate functions Added recalibration functions Added first analysis function (compute_abundance)","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"significant-user-visible-changes-0-99-9","dir":"Changelog","previous_headings":"","what":"SIGNIFICANT USER-VISIBLE CHANGES","title":"ISAnalytics 0.99.9 (2020-09-01)","text":"Dropped structure ISADataFrame: now package uses standard tibbles Modified package documentation","code":""},{"path":"https://calabrialab.github.io/ISAnalytics/dev/news/index.html","id":"isanalytics-0998-2020-08-12","dir":"Changelog","previous_headings":"","what":"ISAnalytics 0.99.8 (2020-08-12)","title":"ISAnalytics 0.99.8 (2020-08-12)","text":"Submitted Bioconductor","code":""}]
